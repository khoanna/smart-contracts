{
	"id": "1a75a24d76cbc4fa571f50f3551541e4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ConstantK.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\ncontract CPAMM is ERC20 {\r\n    IERC20 public immutable token0; // VNST\r\n    IERC20 public immutable token1; // vBTC\r\n    AggregatorV3Interface public immutable priceFeed; // BTC/USD oracle\r\n\r\n    uint256 public fee = 3; // 0.3%\r\n\r\n    uint256 public reserve0;\r\n    uint256 public reserve1;\r\n\r\n    address owner;\r\n\r\n    constructor(address _token0, address _token1, address _priceFeed) ERC20 (\"VIS\", \"VietSwap\") {\r\n        token0 = IERC20(_token0);\r\n        token1 = IERC20(_token1);\r\n        priceFeed = AggregatorV3Interface(_priceFeed);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function _update(uint256 _reserve0, uint256 _reserve1) private {\r\n        reserve0 = _reserve0;\r\n        reserve1 = _reserve1;\r\n    }\r\n\r\n    function _sqrt(uint y) private pure returns (uint z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n\r\n    function _min(uint256 x, uint256 y) private pure returns (uint256 z) {\r\n        return x <= y ? x : y;\r\n    }\r\n\r\n    function getLatestBTCPrice() public view returns (uint256) {\r\n        (\r\n            , \r\n            int256 price,\r\n            ,\r\n            ,\r\n            \r\n        ) = priceFeed.latestRoundData();\r\n        require(price > 0, \"Invalid price\");\r\n        return uint256(price/ 1e8); \r\n    }\r\n\r\n    function swap(address _tokenIn, uint256 _amountIn) external returns (uint256 amountOut) {\r\n        require(_tokenIn != address(0), \"ZERO ADDRESS\");\r\n        require(_amountIn > 0, \"ZERO AMOUNT\");\r\n        require(_tokenIn == address(token0) || _tokenIn == address(token1));\r\n\r\n        (IERC20 tokenIn, IERC20 tokenOut, uint256 reserveIn, uint256 reserveOut) =\r\n            (_tokenIn == address(token0)) ? (token0, token1, reserve0, reserve1) : (token1, token0, reserve1, reserve0);\r\n\r\n        tokenIn.transferFrom(msg.sender, address(this), _amountIn);\r\n\r\n        uint256 amountIn = (_amountIn * (1000 - fee)) / 1000;\r\n        amountOut = (reserveIn * amountIn) / (reserveOut + amountIn);\r\n\r\n        tokenIn.transfer(owner, _amountIn - amountIn);\r\n        tokenOut.transfer(msg.sender, amountOut);\r\n\r\n        (uint256 _reserve0, uint256 _reserve1) =\r\n            (_tokenIn == address(token0)) ? (reserveIn + _amountIn, reserveOut - amountOut) : (reserveOut - amountOut, reserveIn + amountIn);\r\n        _update(_reserve0, _reserve1);\r\n    }\r\n\r\n    function addLiquidity(uint256 _amount0, uint256 _amount1) external returns (uint256 shares) {\r\n        uint256 btcPrice = getLatestBTCPrice(); \r\n\r\n        uint256 expectedVNST = (_amount1 * btcPrice );\r\n        require(_amount0 == expectedVNST, \"VNST must match BTC price\");\r\n\r\n        token0.transferFrom(msg.sender, address(this), _amount0);\r\n        token1.transferFrom(msg.sender, address(this), _amount1);\r\n\r\n        if (totalSupply() == 0) {\r\n            shares = _sqrt(_amount0 * _amount1);\r\n        } else {\r\n            shares = _min(\r\n                (_amount0 * totalSupply()) / reserve0,\r\n                (_amount1 * totalSupply()) / reserve1\r\n            );\r\n        }\r\n\r\n        require(shares > 0, \"ZERO_SHARES\");\r\n        _mint(msg.sender, shares * 10 ** 18);\r\n        _update(reserve0 + _amount0, reserve1 + _amount1);\r\n    }\r\n\r\n    function removeLiquidity(uint256 _shares) external returns (uint256 amount0, uint256 amount1) {\r\n        amount0 = (_shares * reserve0) / totalSupply();\r\n        amount1 = (_shares * reserve1) / totalSupply();\r\n        require(amount0 > 0 && amount1 > 0, \"ZERO AMOUNT\");\r\n        _burn(msg.sender, _shares * 10 ** 18);\r\n        _update(reserve0 - amount0, reserve1 - amount1);\r\n        token0.transfer(msg.sender, amount0);\r\n        token1.transfer(msg.sender, amount1);\r\n    }\r\n}\r\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 213,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 217,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ConstantK.sol": {
				"CPAMM": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeed",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestBTCPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeed",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenIn",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ConstantK.sol\":255:4082  contract CPAMM is ERC20 {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/ConstantK.sol\":472:473  3 */\n  0x03\n    /* \"contracts/ConstantK.sol\":451:473  uint256 public fee = 3 */\n  0x05\n  sstore\n    /* \"contracts/ConstantK.sol\":574:829  constructor(address _token0, address _token1, address _priceFeed) ERC20 (\"VIS\", \"VietSwap\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5649530000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x5669657453776170000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ConstantK.sol\":693:700  _token0 */\n  dup3\n    /* \"contracts/ConstantK.sol\":677:701  token0 = IERC20(_token0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ConstantK.sol\":728:735  _token1 */\n  dup2\n    /* \"contracts/ConstantK.sol\":712:736  token1 = IERC20(_token1) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ConstantK.sol\":781:791  _priceFeed */\n  dup1\n    /* \"contracts/ConstantK.sol\":747:792  priceFeed = AggregatorV3Interface(_priceFeed) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ConstantK.sol\":811:821  msg.sender */\n  caller\n    /* \"contracts/ConstantK.sol\":803:808  owner */\n  0x08\n  0x00\n    /* \"contracts/ConstantK.sol\":803:821  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ConstantK.sol\":574:829  constructor(address _token0, address _token1, address _priceFeed) ERC20 (\"VIS\", \"VietSwap\") {... */\n  pop\n  pop\n  pop\n    /* \"contracts/ConstantK.sol\":255:4082  contract CPAMM is ERC20 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_45\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_17:\n    /* \"#utility.yul\":641:665   */\n  tag_47\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_48:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_18:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_50\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_17\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_53\n  tag_13\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":966:1085   */\ntag_52:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_54\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_55\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_56\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_18\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1514:1613   */\ntag_19:\n    /* \"#utility.yul\":1566:1572   */\n  0x00\n    /* \"#utility.yul\":1600:1605   */\n  dup2\n    /* \"#utility.yul\":1594:1606   */\n  mload\n    /* \"#utility.yul\":1584:1606   */\n  swap1\n  pop\n    /* \"#utility.yul\":1514:1613   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1619:1799   */\ntag_20:\n    /* \"#utility.yul\":1667:1744   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1664:1665   */\n  0x00\n    /* \"#utility.yul\":1657:1745   */\n  mstore\n    /* \"#utility.yul\":1764:1768   */\n  0x41\n    /* \"#utility.yul\":1761:1762   */\n  0x04\n    /* \"#utility.yul\":1754:1769   */\n  mstore\n    /* \"#utility.yul\":1788:1792   */\n  0x24\n    /* \"#utility.yul\":1785:1786   */\n  0x00\n    /* \"#utility.yul\":1778:1793   */\n  revert\n    /* \"#utility.yul\":1805:1985   */\ntag_21:\n    /* \"#utility.yul\":1853:1930   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1850:1851   */\n  0x00\n    /* \"#utility.yul\":1843:1931   */\n  mstore\n    /* \"#utility.yul\":1950:1954   */\n  0x22\n    /* \"#utility.yul\":1947:1948   */\n  0x04\n    /* \"#utility.yul\":1940:1955   */\n  mstore\n    /* \"#utility.yul\":1974:1978   */\n  0x24\n    /* \"#utility.yul\":1971:1972   */\n  0x00\n    /* \"#utility.yul\":1964:1979   */\n  revert\n    /* \"#utility.yul\":1991:2311   */\ntag_22:\n    /* \"#utility.yul\":2035:2041   */\n  0x00\n    /* \"#utility.yul\":2072:2073   */\n  0x02\n    /* \"#utility.yul\":2066:2070   */\n  dup3\n    /* \"#utility.yul\":2062:2074   */\n  div\n    /* \"#utility.yul\":2052:2074   */\n  swap1\n  pop\n    /* \"#utility.yul\":2119:2120   */\n  0x01\n    /* \"#utility.yul\":2113:2117   */\n  dup3\n    /* \"#utility.yul\":2109:2121   */\n  and\n    /* \"#utility.yul\":2140:2158   */\n  dup1\n    /* \"#utility.yul\":2130:2211   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2196:2200   */\n  0x7f\n    /* \"#utility.yul\":2188:2194   */\n  dup3\n    /* \"#utility.yul\":2184:2201   */\n  and\n    /* \"#utility.yul\":2174:2201   */\n  swap2\n  pop\n    /* \"#utility.yul\":2130:2211   */\ntag_61:\n    /* \"#utility.yul\":2258:2260   */\n  0x20\n    /* \"#utility.yul\":2250:2256   */\n  dup3\n    /* \"#utility.yul\":2247:2261   */\n  lt\n    /* \"#utility.yul\":2227:2245   */\n  dup2\n    /* \"#utility.yul\":2224:2262   */\n  sub\n    /* \"#utility.yul\":2221:2305   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2277:2295   */\n  tag_63\n  tag_21\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2221:2305   */\ntag_62:\n    /* \"#utility.yul\":2042:2311   */\n  pop\n    /* \"#utility.yul\":1991:2311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2317:2458   */\ntag_23:\n    /* \"#utility.yul\":2366:2370   */\n  0x00\n    /* \"#utility.yul\":2389:2392   */\n  dup2\n    /* \"#utility.yul\":2381:2392   */\n  swap1\n  pop\n    /* \"#utility.yul\":2412:2415   */\n  dup2\n    /* \"#utility.yul\":2409:2410   */\n  0x00\n    /* \"#utility.yul\":2402:2416   */\n  mstore\n    /* \"#utility.yul\":2446:2450   */\n  0x20\n    /* \"#utility.yul\":2443:2444   */\n  0x00\n    /* \"#utility.yul\":2433:2451   */\n  keccak256\n    /* \"#utility.yul\":2425:2451   */\n  swap1\n  pop\n    /* \"#utility.yul\":2317:2458   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2464:2557   */\ntag_24:\n    /* \"#utility.yul\":2501:2507   */\n  0x00\n    /* \"#utility.yul\":2548:2550   */\n  0x20\n    /* \"#utility.yul\":2543:2545   */\n  0x1f\n    /* \"#utility.yul\":2536:2541   */\n  dup4\n    /* \"#utility.yul\":2532:2546   */\n  add\n    /* \"#utility.yul\":2528:2551   */\n  div\n    /* \"#utility.yul\":2518:2551   */\n  swap1\n  pop\n    /* \"#utility.yul\":2464:2557   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2563:2670   */\ntag_25:\n    /* \"#utility.yul\":2607:2615   */\n  0x00\n    /* \"#utility.yul\":2657:2662   */\n  dup3\n    /* \"#utility.yul\":2651:2655   */\n  dup3\n    /* \"#utility.yul\":2647:2663   */\n  shl\n    /* \"#utility.yul\":2626:2663   */\n  swap1\n  pop\n    /* \"#utility.yul\":2563:2670   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2676:3069   */\ntag_26:\n    /* \"#utility.yul\":2745:2751   */\n  0x00\n    /* \"#utility.yul\":2795:2796   */\n  0x08\n    /* \"#utility.yul\":2783:2793   */\n  dup4\n    /* \"#utility.yul\":2779:2797   */\n  mul\n    /* \"#utility.yul\":2818:2915   */\n  tag_68\n    /* \"#utility.yul\":2848:2914   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2837:2846   */\n  dup3\n    /* \"#utility.yul\":2818:2915   */\n  tag_25\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2936:2975   */\n  tag_69\n    /* \"#utility.yul\":2966:2974   */\n  dup7\n    /* \"#utility.yul\":2955:2964   */\n  dup4\n    /* \"#utility.yul\":2936:2975   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2924:2975   */\n  swap6\n  pop\n    /* \"#utility.yul\":3008:3012   */\n  dup1\n    /* \"#utility.yul\":3004:3013   */\n  not\n    /* \"#utility.yul\":2997:3002   */\n  dup5\n    /* \"#utility.yul\":2993:3014   */\n  and\n    /* \"#utility.yul\":2984:3014   */\n  swap4\n  pop\n    /* \"#utility.yul\":3057:3061   */\n  dup1\n    /* \"#utility.yul\":3047:3055   */\n  dup7\n    /* \"#utility.yul\":3043:3062   */\n  and\n    /* \"#utility.yul\":3036:3041   */\n  dup5\n    /* \"#utility.yul\":3033:3063   */\n  or\n    /* \"#utility.yul\":3023:3063   */\n  swap3\n  pop\n    /* \"#utility.yul\":2752:3069   */\n  pop\n  pop\n    /* \"#utility.yul\":2676:3069   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3075:3152   */\ntag_27:\n    /* \"#utility.yul\":3112:3119   */\n  0x00\n    /* \"#utility.yul\":3141:3146   */\n  dup2\n    /* \"#utility.yul\":3130:3146   */\n  swap1\n  pop\n    /* \"#utility.yul\":3075:3152   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3158:3218   */\ntag_28:\n    /* \"#utility.yul\":3186:3189   */\n  0x00\n    /* \"#utility.yul\":3207:3212   */\n  dup2\n    /* \"#utility.yul\":3200:3212   */\n  swap1\n  pop\n    /* \"#utility.yul\":3158:3218   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3224:3366   */\ntag_29:\n    /* \"#utility.yul\":3274:3283   */\n  0x00\n    /* \"#utility.yul\":3307:3360   */\n  tag_73\n    /* \"#utility.yul\":3325:3359   */\n  tag_74\n    /* \"#utility.yul\":3334:3358   */\n  tag_75\n    /* \"#utility.yul\":3352:3357   */\n  dup5\n    /* \"#utility.yul\":3334:3358   */\n  tag_27\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3325:3359   */\n  tag_28\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3307:3360   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3294:3360   */\n  swap1\n  pop\n    /* \"#utility.yul\":3224:3366   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3372:3447   */\ntag_30:\n    /* \"#utility.yul\":3415:3418   */\n  0x00\n    /* \"#utility.yul\":3436:3441   */\n  dup2\n    /* \"#utility.yul\":3429:3441   */\n  swap1\n  pop\n    /* \"#utility.yul\":3372:3447   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3453:3722   */\ntag_31:\n    /* \"#utility.yul\":3563:3602   */\n  tag_78\n    /* \"#utility.yul\":3594:3601   */\n  dup4\n    /* \"#utility.yul\":3563:3602   */\n  tag_29\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3624:3715   */\n  tag_79\n    /* \"#utility.yul\":3673:3714   */\n  tag_80\n    /* \"#utility.yul\":3697:3713   */\n  dup3\n    /* \"#utility.yul\":3673:3714   */\n  tag_30\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3665:3671   */\n  dup5\n    /* \"#utility.yul\":3658:3662   */\n  dup5\n    /* \"#utility.yul\":3652:3663   */\n  sload\n    /* \"#utility.yul\":3624:3715   */\n  tag_26\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3618:3622   */\n  dup3\n    /* \"#utility.yul\":3611:3716   */\n  sstore\n    /* \"#utility.yul\":3529:3722   */\n  pop\n    /* \"#utility.yul\":3453:3722   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3728:3801   */\ntag_32:\n    /* \"#utility.yul\":3773:3776   */\n  0x00\n    /* \"#utility.yul\":3728:3801   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3807:3996   */\ntag_33:\n    /* \"#utility.yul\":3884:3916   */\n  tag_83\n  tag_32\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3925:3990   */\n  tag_84\n    /* \"#utility.yul\":3983:3989   */\n  dup2\n    /* \"#utility.yul\":3975:3981   */\n  dup5\n    /* \"#utility.yul\":3969:3973   */\n  dup5\n    /* \"#utility.yul\":3925:3990   */\n  tag_31\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3860:3996   */\n  pop\n    /* \"#utility.yul\":3807:3996   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4002:4188   */\ntag_34:\n    /* \"#utility.yul\":4062:4182   */\ntag_86:\n    /* \"#utility.yul\":4079:4082   */\n  dup2\n    /* \"#utility.yul\":4072:4077   */\n  dup2\n    /* \"#utility.yul\":4069:4083   */\n  lt\n    /* \"#utility.yul\":4062:4182   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4133:4172   */\n  tag_89\n    /* \"#utility.yul\":4170:4171   */\n  0x00\n    /* \"#utility.yul\":4163:4168   */\n  dup3\n    /* \"#utility.yul\":4133:4172   */\n  tag_33\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4106:4107   */\n  0x01\n    /* \"#utility.yul\":4099:4104   */\n  dup2\n    /* \"#utility.yul\":4095:4108   */\n  add\n    /* \"#utility.yul\":4086:4108   */\n  swap1\n  pop\n    /* \"#utility.yul\":4062:4182   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":4002:4188   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4194:4737   */\ntag_35:\n    /* \"#utility.yul\":4295:4297   */\n  0x1f\n    /* \"#utility.yul\":4290:4293   */\n  dup3\n    /* \"#utility.yul\":4287:4298   */\n  gt\n    /* \"#utility.yul\":4284:4730   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4329:4367   */\n  tag_92\n    /* \"#utility.yul\":4361:4366   */\n  dup2\n    /* \"#utility.yul\":4329:4367   */\n  tag_23\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4413:4442   */\n  tag_93\n    /* \"#utility.yul\":4431:4441   */\n  dup5\n    /* \"#utility.yul\":4413:4442   */\n  tag_24\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4403:4411   */\n  dup2\n    /* \"#utility.yul\":4399:4443   */\n  add\n    /* \"#utility.yul\":4596:4598   */\n  0x20\n    /* \"#utility.yul\":4584:4594   */\n  dup6\n    /* \"#utility.yul\":4581:4599   */\n  lt\n    /* \"#utility.yul\":4578:4627   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":4617:4625   */\n  dup2\n    /* \"#utility.yul\":4602:4625   */\n  swap1\n  pop\n    /* \"#utility.yul\":4578:4627   */\ntag_94:\n    /* \"#utility.yul\":4640:4720   */\n  tag_95\n    /* \"#utility.yul\":4696:4718   */\n  tag_96\n    /* \"#utility.yul\":4714:4717   */\n  dup6\n    /* \"#utility.yul\":4696:4718   */\n  tag_24\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4686:4694   */\n  dup4\n    /* \"#utility.yul\":4682:4719   */\n  add\n    /* \"#utility.yul\":4669:4680   */\n  dup3\n    /* \"#utility.yul\":4640:4720   */\n  tag_34\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4299:4730   */\n  pop\n  pop\n    /* \"#utility.yul\":4284:4730   */\ntag_91:\n    /* \"#utility.yul\":4194:4737   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4743:4860   */\ntag_36:\n    /* \"#utility.yul\":4797:4805   */\n  0x00\n    /* \"#utility.yul\":4847:4852   */\n  dup3\n    /* \"#utility.yul\":4841:4845   */\n  dup3\n    /* \"#utility.yul\":4837:4853   */\n  shr\n    /* \"#utility.yul\":4816:4853   */\n  swap1\n  pop\n    /* \"#utility.yul\":4743:4860   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4866:5035   */\ntag_37:\n    /* \"#utility.yul\":4910:4916   */\n  0x00\n    /* \"#utility.yul\":4943:4994   */\n  tag_99\n    /* \"#utility.yul\":4991:4992   */\n  0x00\n    /* \"#utility.yul\":4987:4993   */\n  not\n    /* \"#utility.yul\":4979:4984   */\n  dup5\n    /* \"#utility.yul\":4976:4977   */\n  0x08\n    /* \"#utility.yul\":4972:4985   */\n  mul\n    /* \"#utility.yul\":4943:4994   */\n  tag_36\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4939:4995   */\n  not\n    /* \"#utility.yul\":5024:5028   */\n  dup1\n    /* \"#utility.yul\":5018:5022   */\n  dup4\n    /* \"#utility.yul\":5014:5029   */\n  and\n    /* \"#utility.yul\":5004:5029   */\n  swap2\n  pop\n    /* \"#utility.yul\":4917:5035   */\n  pop\n    /* \"#utility.yul\":4866:5035   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5040:5335   */\ntag_38:\n    /* \"#utility.yul\":5116:5120   */\n  0x00\n    /* \"#utility.yul\":5262:5291   */\n  tag_101\n    /* \"#utility.yul\":5287:5290   */\n  dup4\n    /* \"#utility.yul\":5281:5285   */\n  dup4\n    /* \"#utility.yul\":5262:5291   */\n  tag_37\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5254:5291   */\n  swap2\n  pop\n    /* \"#utility.yul\":5324:5327   */\n  dup3\n    /* \"#utility.yul\":5321:5322   */\n  0x02\n    /* \"#utility.yul\":5317:5328   */\n  mul\n    /* \"#utility.yul\":5311:5315   */\n  dup3\n    /* \"#utility.yul\":5308:5329   */\n  or\n    /* \"#utility.yul\":5300:5329   */\n  swap1\n  pop\n    /* \"#utility.yul\":5040:5335   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5340:6735   */\ntag_8:\n    /* \"#utility.yul\":5457:5494   */\n  tag_103\n    /* \"#utility.yul\":5490:5493   */\n  dup3\n    /* \"#utility.yul\":5457:5494   */\n  tag_19\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5559:5577   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5551:5557   */\n  dup2\n    /* \"#utility.yul\":5548:5578   */\n  gt\n    /* \"#utility.yul\":5545:5601   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":5581:5599   */\n  tag_105\n  tag_20\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5545:5601   */\ntag_104:\n    /* \"#utility.yul\":5625:5663   */\n  tag_106\n    /* \"#utility.yul\":5657:5661   */\n  dup3\n    /* \"#utility.yul\":5651:5662   */\n  sload\n    /* \"#utility.yul\":5625:5663   */\n  tag_22\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5710:5777   */\n  tag_107\n    /* \"#utility.yul\":5770:5776   */\n  dup3\n    /* \"#utility.yul\":5762:5768   */\n  dup3\n    /* \"#utility.yul\":5756:5760   */\n  dup6\n    /* \"#utility.yul\":5710:5777   */\n  tag_35\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5828:5832   */\n  0x20\n    /* \"#utility.yul\":5815:5832   */\n  swap1\n  pop\n    /* \"#utility.yul\":5860:5862   */\n  0x1f\n    /* \"#utility.yul\":5852:5858   */\n  dup4\n    /* \"#utility.yul\":5849:5863   */\n  gt\n    /* \"#utility.yul\":5877:5878   */\n  0x01\n    /* \"#utility.yul\":5872:6490   */\n  dup2\n  eq\n  tag_109\n  jumpi\n    /* \"#utility.yul\":6534:6535   */\n  0x00\n    /* \"#utility.yul\":6551:6557   */\n  dup5\n    /* \"#utility.yul\":6548:6625   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":6600:6609   */\n  dup3\n    /* \"#utility.yul\":6595:6598   */\n  dup8\n    /* \"#utility.yul\":6591:6610   */\n  add\n    /* \"#utility.yul\":6585:6611   */\n  mload\n    /* \"#utility.yul\":6576:6611   */\n  swap1\n  pop\n    /* \"#utility.yul\":6548:6625   */\ntag_110:\n    /* \"#utility.yul\":6651:6718   */\n  tag_111\n    /* \"#utility.yul\":6711:6717   */\n  dup6\n    /* \"#utility.yul\":6704:6709   */\n  dup3\n    /* \"#utility.yul\":6651:6718   */\n  tag_38\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":6645:6649   */\n  dup7\n    /* \"#utility.yul\":6638:6719   */\n  sstore\n    /* \"#utility.yul\":6507:6729   */\n  pop\n    /* \"#utility.yul\":5842:6729   */\n  jump(tag_108)\n    /* \"#utility.yul\":5872:6490   */\ntag_109:\n    /* \"#utility.yul\":5924:5928   */\n  0x1f\n    /* \"#utility.yul\":5920:5929   */\n  not\n    /* \"#utility.yul\":5912:5918   */\n  dup5\n    /* \"#utility.yul\":5908:5930   */\n  and\n    /* \"#utility.yul\":5958:5995   */\n  tag_112\n    /* \"#utility.yul\":5990:5994   */\n  dup7\n    /* \"#utility.yul\":5958:5995   */\n  tag_23\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":6017:6018   */\n  0x00\n    /* \"#utility.yul\":6031:6239   */\ntag_113:\n    /* \"#utility.yul\":6045:6052   */\n  dup3\n    /* \"#utility.yul\":6042:6043   */\n  dup2\n    /* \"#utility.yul\":6039:6053   */\n  lt\n    /* \"#utility.yul\":6031:6239   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":6124:6133   */\n  dup5\n    /* \"#utility.yul\":6119:6122   */\n  dup10\n    /* \"#utility.yul\":6115:6134   */\n  add\n    /* \"#utility.yul\":6109:6135   */\n  mload\n    /* \"#utility.yul\":6101:6107   */\n  dup3\n    /* \"#utility.yul\":6094:6136   */\n  sstore\n    /* \"#utility.yul\":6175:6176   */\n  0x01\n    /* \"#utility.yul\":6167:6173   */\n  dup3\n    /* \"#utility.yul\":6163:6177   */\n  add\n    /* \"#utility.yul\":6153:6177   */\n  swap2\n  pop\n    /* \"#utility.yul\":6222:6224   */\n  0x20\n    /* \"#utility.yul\":6211:6220   */\n  dup6\n    /* \"#utility.yul\":6207:6225   */\n  add\n    /* \"#utility.yul\":6194:6225   */\n  swap5\n  pop\n    /* \"#utility.yul\":6068:6072   */\n  0x20\n    /* \"#utility.yul\":6065:6066   */\n  dup2\n    /* \"#utility.yul\":6061:6073   */\n  add\n    /* \"#utility.yul\":6056:6073   */\n  swap1\n  pop\n    /* \"#utility.yul\":6031:6239   */\n  jump(tag_113)\ntag_115:\n    /* \"#utility.yul\":6267:6273   */\n  dup7\n    /* \"#utility.yul\":6258:6265   */\n  dup4\n    /* \"#utility.yul\":6255:6274   */\n  lt\n    /* \"#utility.yul\":6252:6431   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6325:6334   */\n  dup5\n    /* \"#utility.yul\":6320:6323   */\n  dup10\n    /* \"#utility.yul\":6316:6335   */\n  add\n    /* \"#utility.yul\":6310:6336   */\n  mload\n    /* \"#utility.yul\":6368:6416   */\n  tag_117\n    /* \"#utility.yul\":6410:6414   */\n  0x1f\n    /* \"#utility.yul\":6402:6408   */\n  dup10\n    /* \"#utility.yul\":6398:6415   */\n  and\n    /* \"#utility.yul\":6387:6396   */\n  dup3\n    /* \"#utility.yul\":6368:6416   */\n  tag_37\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6360:6366   */\n  dup4\n    /* \"#utility.yul\":6353:6417   */\n  sstore\n    /* \"#utility.yul\":6275:6431   */\n  pop\n    /* \"#utility.yul\":6252:6431   */\ntag_116:\n    /* \"#utility.yul\":6477:6478   */\n  0x01\n    /* \"#utility.yul\":6473:6474   */\n  0x02\n    /* \"#utility.yul\":6465:6471   */\n  dup9\n    /* \"#utility.yul\":6461:6475   */\n  mul\n    /* \"#utility.yul\":6457:6479   */\n  add\n    /* \"#utility.yul\":6451:6455   */\n  dup9\n    /* \"#utility.yul\":6444:6480   */\n  sstore\n    /* \"#utility.yul\":5879:6490   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5842:6729   */\ntag_108:\n  pop\n    /* \"#utility.yul\":5432:6735   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5340:6735   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ConstantK.sol\":255:4082  contract CPAMM is ERC20 {... */\ntag_11:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xf307c8083319643682cc8b4f2b5f4170d03059dbde8c4aa4901f67e8f65149e3\")\n  0x00\n  assignImmutable(\"0x2501380a21b274421b7683485831a81ec9d98da3f2ac3e39f456bea2b226ba76\")\n  0x00\n  assignImmutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ConstantK.sol\":255:4082  contract CPAMM is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd004f0f7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x741bef1a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x1b712739\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x1b712739\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x443cb4bc\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5a76f25e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConstantK.sol\":286:316  IERC20 public immutable token0 */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConstantK.sol\":1406:1697  function getLatestBTCPrice() public view returns (uint256) {... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConstantK.sol\":490:513  uint256 public reserve0 */\n    tag_10:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConstantK.sol\":520:543  uint256 public reserve1 */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConstantK.sol\":376:424  AggregatorV3Interface public immutable priceFeed */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConstantK.sol\":3602:4079  function removeLiquidity(uint256 _shares) external returns (uint256 amount0, uint256 amount1) {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConstantK.sol\":2752:3594  function addLiquidity(uint256 _amount0, uint256 _amount1) external returns (uint256 shares) {... */\n    tag_16:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConstantK.sol\":1705:2744  function swap(address _tokenIn, uint256 _amountIn) external returns (uint256 amountOut) {... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConstantK.sol\":331:361  IERC20 public immutable token1 */\n    tag_19:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConstantK.sol\":451:473  uint256 public fee = 3 */\n    tag_21:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_105\n      jump\t// in\n    tag_106:\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_108\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_107)\n    tag_108:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_109:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_109\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":286:316  IERC20 public immutable token0 */\n    tag_36:\n      immutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":1406:1697  function getLatestBTCPrice() public view returns (uint256) {... */\n    tag_44:\n        /* \"contracts/ConstantK.sol\":1456:1463  uint256 */\n      0x00\n        /* \"contracts/ConstantK.sol\":1507:1519  int256 price */\n      dup1\n        /* \"contracts/ConstantK.sol\":1578:1587  priceFeed */\n      immutable(\"0xf307c8083319643682cc8b4f2b5f4170d03059dbde8c4aa4901f67e8f65149e3\")\n        /* \"contracts/ConstantK.sol\":1578:1603  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/ConstantK.sol\":1578:1605  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"contracts/ConstantK.sol\":1476:1605  (... */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/ConstantK.sol\":1632:1633  0 */\n      0x00\n        /* \"contracts/ConstantK.sol\":1624:1629  price */\n      dup2\n        /* \"contracts/ConstantK.sol\":1624:1633  price > 0 */\n      sgt\n        /* \"contracts/ConstantK.sol\":1616:1651  require(price > 0, \"Invalid price\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/ConstantK.sol\":1684:1687  1e8 */\n      0x05f5e100\n        /* \"contracts/ConstantK.sol\":1677:1682  price */\n      dup2\n        /* \"contracts/ConstantK.sol\":1677:1687  price/ 1e8 */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"contracts/ConstantK.sol\":1662:1688  return uint256(price/ 1e8) */\n      swap2\n      pop\n      pop\n        /* \"contracts/ConstantK.sol\":1406:1697  function getLatestBTCPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":490:513  uint256 public reserve0 */\n    tag_56:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":520:543  uint256 public reserve1 */\n    tag_59:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":376:424  AggregatorV3Interface public immutable priceFeed */\n    tag_67:\n      immutable(\"0xf307c8083319643682cc8b4f2b5f4170d03059dbde8c4aa4901f67e8f65149e3\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_105\n      jump\t// in\n    tag_135:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_136\n      swap1\n      tag_105\n      jump\t// in\n    tag_136:\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_138\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_137)\n    tag_138:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_139:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_139\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":3602:4079  function removeLiquidity(uint256 _shares) external returns (uint256 amount0, uint256 amount1) {... */\n    tag_76:\n        /* \"contracts/ConstantK.sol\":3662:3677  uint256 amount0 */\n      0x00\n        /* \"contracts/ConstantK.sol\":3679:3694  uint256 amount1 */\n      dup1\n        /* \"contracts/ConstantK.sol\":3740:3753  totalSupply() */\n      tag_141\n        /* \"contracts/ConstantK.sol\":3740:3751  totalSupply */\n      tag_40\n        /* \"contracts/ConstantK.sol\":3740:3753  totalSupply() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/ConstantK.sol\":3728:3736  reserve0 */\n      sload(0x06)\n        /* \"contracts/ConstantK.sol\":3718:3725  _shares */\n      dup5\n        /* \"contracts/ConstantK.sol\":3718:3736  _shares * reserve0 */\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"contracts/ConstantK.sol\":3717:3753  (_shares * reserve0) / totalSupply() */\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"contracts/ConstantK.sol\":3707:3753  amount0 = (_shares * reserve0) / totalSupply() */\n      swap2\n      pop\n        /* \"contracts/ConstantK.sol\":3797:3810  totalSupply() */\n      tag_146\n        /* \"contracts/ConstantK.sol\":3797:3808  totalSupply */\n      tag_40\n        /* \"contracts/ConstantK.sol\":3797:3810  totalSupply() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/ConstantK.sol\":3785:3793  reserve1 */\n      sload(0x07)\n        /* \"contracts/ConstantK.sol\":3775:3782  _shares */\n      dup5\n        /* \"contracts/ConstantK.sol\":3775:3793  _shares * reserve1 */\n      tag_147\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_147:\n        /* \"contracts/ConstantK.sol\":3774:3810  (_shares * reserve1) / totalSupply() */\n      tag_148\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_148:\n        /* \"contracts/ConstantK.sol\":3764:3810  amount1 = (_shares * reserve1) / totalSupply() */\n      swap1\n      pop\n        /* \"contracts/ConstantK.sol\":3839:3840  0 */\n      0x00\n        /* \"contracts/ConstantK.sol\":3829:3836  amount0 */\n      dup3\n        /* \"contracts/ConstantK.sol\":3829:3840  amount0 > 0 */\n      gt\n        /* \"contracts/ConstantK.sol\":3829:3855  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_149\n      jumpi\n      pop\n        /* \"contracts/ConstantK.sol\":3854:3855  0 */\n      0x00\n        /* \"contracts/ConstantK.sol\":3844:3851  amount1 */\n      dup2\n        /* \"contracts/ConstantK.sol\":3844:3855  amount1 > 0 */\n      gt\n        /* \"contracts/ConstantK.sol\":3829:3855  amount0 > 0 && amount1 > 0 */\n    tag_149:\n        /* \"contracts/ConstantK.sol\":3821:3871  require(amount0 > 0 && amount1 > 0, \"ZERO AMOUNT\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/ConstantK.sol\":3882:3919  _burn(msg.sender, _shares * 10 ** 18) */\n      tag_153\n        /* \"contracts/ConstantK.sol\":3888:3898  msg.sender */\n      caller\n        /* \"contracts/ConstantK.sol\":3910:3918  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ConstantK.sol\":3900:3907  _shares */\n      dup6\n        /* \"contracts/ConstantK.sol\":3900:3918  _shares * 10 ** 18 */\n      tag_154\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_154:\n        /* \"contracts/ConstantK.sol\":3882:3887  _burn */\n      tag_155\n        /* \"contracts/ConstantK.sol\":3882:3919  _burn(msg.sender, _shares * 10 ** 18) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/ConstantK.sol\":3930:3977  _update(reserve0 - amount0, reserve1 - amount1) */\n      tag_156\n        /* \"contracts/ConstantK.sol\":3949:3956  amount0 */\n      dup3\n        /* \"contracts/ConstantK.sol\":3938:3946  reserve0 */\n      sload(0x06)\n        /* \"contracts/ConstantK.sol\":3938:3956  reserve0 - amount0 */\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/ConstantK.sol\":3969:3976  amount1 */\n      dup3\n        /* \"contracts/ConstantK.sol\":3958:3966  reserve1 */\n      sload(0x07)\n        /* \"contracts/ConstantK.sol\":3958:3976  reserve1 - amount1 */\n      tag_159\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_159:\n        /* \"contracts/ConstantK.sol\":3930:3937  _update */\n      tag_160\n        /* \"contracts/ConstantK.sol\":3930:3977  _update(reserve0 - amount0, reserve1 - amount1) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/ConstantK.sol\":3988:3994  token0 */\n      immutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n        /* \"contracts/ConstantK.sol\":3988:4003  token0.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/ConstantK.sol\":4004:4014  msg.sender */\n      caller\n        /* \"contracts/ConstantK.sol\":4016:4023  amount0 */\n      dup5\n        /* \"contracts/ConstantK.sol\":3988:4024  token0.transfer(msg.sender, amount0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      pop\n        /* \"contracts/ConstantK.sol\":4035:4041  token1 */\n      immutable(\"0x2501380a21b274421b7683485831a81ec9d98da3f2ac3e39f456bea2b226ba76\")\n        /* \"contracts/ConstantK.sol\":4035:4050  token1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/ConstantK.sol\":4051:4061  msg.sender */\n      caller\n        /* \"contracts/ConstantK.sol\":4063:4070  amount1 */\n      dup4\n        /* \"contracts/ConstantK.sol\":4035:4071  token1.transfer(msg.sender, amount1) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_167:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_170:\n      pop\n        /* \"contracts/ConstantK.sol\":3602:4079  function removeLiquidity(uint256 _shares) external returns (uint256 amount0, uint256 amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":2752:3594  function addLiquidity(uint256 _amount0, uint256 _amount1) external returns (uint256 shares) {... */\n    tag_82:\n        /* \"contracts/ConstantK.sol\":2828:2842  uint256 shares */\n      0x00\n        /* \"contracts/ConstantK.sol\":2855:2871  uint256 btcPrice */\n      dup1\n        /* \"contracts/ConstantK.sol\":2874:2893  getLatestBTCPrice() */\n      tag_172\n        /* \"contracts/ConstantK.sol\":2874:2891  getLatestBTCPrice */\n      tag_44\n        /* \"contracts/ConstantK.sol\":2874:2893  getLatestBTCPrice() */\n      jump\t// in\n    tag_172:\n        /* \"contracts/ConstantK.sol\":2855:2893  uint256 btcPrice = getLatestBTCPrice() */\n      swap1\n      pop\n        /* \"contracts/ConstantK.sol\":2907:2927  uint256 expectedVNST */\n      0x00\n        /* \"contracts/ConstantK.sol\":2942:2950  btcPrice */\n      dup2\n        /* \"contracts/ConstantK.sol\":2931:2939  _amount1 */\n      dup5\n        /* \"contracts/ConstantK.sol\":2931:2950  _amount1 * btcPrice */\n      tag_173\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_173:\n        /* \"contracts/ConstantK.sol\":2907:2952  uint256 expectedVNST = (_amount1 * btcPrice ) */\n      swap1\n      pop\n        /* \"contracts/ConstantK.sol\":2983:2995  expectedVNST */\n      dup1\n        /* \"contracts/ConstantK.sol\":2971:2979  _amount0 */\n      dup6\n        /* \"contracts/ConstantK.sol\":2971:2995  _amount0 == expectedVNST */\n      eq\n        /* \"contracts/ConstantK.sol\":2963:3025  require(_amount0 == expectedVNST, \"VNST must match BTC price\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/ConstantK.sol\":3038:3044  token0 */\n      immutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n        /* \"contracts/ConstantK.sol\":3038:3057  token0.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/ConstantK.sol\":3058:3068  msg.sender */\n      caller\n        /* \"contracts/ConstantK.sol\":3078:3082  this */\n      address\n        /* \"contracts/ConstantK.sol\":3085:3093  _amount0 */\n      dup9\n        /* \"contracts/ConstantK.sol\":3038:3094  token0.transferFrom(msg.sender, address(this), _amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_181:\n      pop\n        /* \"contracts/ConstantK.sol\":3105:3111  token1 */\n      immutable(\"0x2501380a21b274421b7683485831a81ec9d98da3f2ac3e39f456bea2b226ba76\")\n        /* \"contracts/ConstantK.sol\":3105:3124  token1.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/ConstantK.sol\":3125:3135  msg.sender */\n      caller\n        /* \"contracts/ConstantK.sol\":3145:3149  this */\n      address\n        /* \"contracts/ConstantK.sol\":3152:3160  _amount1 */\n      dup8\n        /* \"contracts/ConstantK.sol\":3105:3161  token1.transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_182:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_185:\n      pop\n        /* \"contracts/ConstantK.sol\":3195:3196  0 */\n      0x00\n        /* \"contracts/ConstantK.sol\":3178:3191  totalSupply() */\n      tag_186\n        /* \"contracts/ConstantK.sol\":3178:3189  totalSupply */\n      tag_40\n        /* \"contracts/ConstantK.sol\":3178:3191  totalSupply() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/ConstantK.sol\":3178:3196  totalSupply() == 0 */\n      sub\n        /* \"contracts/ConstantK.sol\":3174:3433  if (totalSupply() == 0) {... */\n      tag_187\n      jumpi\n        /* \"contracts/ConstantK.sol\":3222:3248  _sqrt(_amount0 * _amount1) */\n      tag_188\n        /* \"contracts/ConstantK.sol\":3239:3247  _amount1 */\n      dup5\n        /* \"contracts/ConstantK.sol\":3228:3236  _amount0 */\n      dup7\n        /* \"contracts/ConstantK.sol\":3228:3247  _amount0 * _amount1 */\n      tag_189\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_189:\n        /* \"contracts/ConstantK.sol\":3222:3227  _sqrt */\n      tag_190\n        /* \"contracts/ConstantK.sol\":3222:3248  _sqrt(_amount0 * _amount1) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/ConstantK.sol\":3213:3248  shares = _sqrt(_amount0 * _amount1) */\n      swap3\n      pop\n        /* \"contracts/ConstantK.sol\":3174:3433  if (totalSupply() == 0) {... */\n      jump(tag_191)\n    tag_187:\n        /* \"contracts/ConstantK.sol\":3290:3421  _min(... */\n      tag_192\n        /* \"contracts/ConstantK.sol\":3342:3350  reserve0 */\n      sload(0x06)\n        /* \"contracts/ConstantK.sol\":3325:3338  totalSupply() */\n      tag_193\n        /* \"contracts/ConstantK.sol\":3325:3336  totalSupply */\n      tag_40\n        /* \"contracts/ConstantK.sol\":3325:3338  totalSupply() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/ConstantK.sol\":3314:3322  _amount0 */\n      dup8\n        /* \"contracts/ConstantK.sol\":3314:3338  _amount0 * totalSupply() */\n      tag_194\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_194:\n        /* \"contracts/ConstantK.sol\":3313:3350  (_amount0 * totalSupply()) / reserve0 */\n      tag_195\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_195:\n        /* \"contracts/ConstantK.sol\":3398:3406  reserve1 */\n      sload(0x07)\n        /* \"contracts/ConstantK.sol\":3381:3394  totalSupply() */\n      tag_196\n        /* \"contracts/ConstantK.sol\":3381:3392  totalSupply */\n      tag_40\n        /* \"contracts/ConstantK.sol\":3381:3394  totalSupply() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/ConstantK.sol\":3370:3378  _amount1 */\n      dup8\n        /* \"contracts/ConstantK.sol\":3370:3394  _amount1 * totalSupply() */\n      tag_197\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_197:\n        /* \"contracts/ConstantK.sol\":3369:3406  (_amount1 * totalSupply()) / reserve1 */\n      tag_198\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_198:\n        /* \"contracts/ConstantK.sol\":3290:3294  _min */\n      tag_199\n        /* \"contracts/ConstantK.sol\":3290:3421  _min(... */\n      jump\t// in\n    tag_192:\n        /* \"contracts/ConstantK.sol\":3281:3421  shares = _min(... */\n      swap3\n      pop\n        /* \"contracts/ConstantK.sol\":3174:3433  if (totalSupply() == 0) {... */\n    tag_191:\n        /* \"contracts/ConstantK.sol\":3462:3463  0 */\n      0x00\n        /* \"contracts/ConstantK.sol\":3453:3459  shares */\n      dup4\n        /* \"contracts/ConstantK.sol\":3453:3463  shares > 0 */\n      gt\n        /* \"contracts/ConstantK.sol\":3445:3479  require(shares > 0, \"ZERO_SHARES\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/ConstantK.sol\":3490:3526  _mint(msg.sender, shares * 10 ** 18) */\n      tag_203\n        /* \"contracts/ConstantK.sol\":3496:3506  msg.sender */\n      caller\n        /* \"contracts/ConstantK.sol\":3517:3525  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ConstantK.sol\":3508:3514  shares */\n      dup6\n        /* \"contracts/ConstantK.sol\":3508:3525  shares * 10 ** 18 */\n      tag_204\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_204:\n        /* \"contracts/ConstantK.sol\":3490:3495  _mint */\n      tag_205\n        /* \"contracts/ConstantK.sol\":3490:3526  _mint(msg.sender, shares * 10 ** 18) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/ConstantK.sol\":3537:3586  _update(reserve0 + _amount0, reserve1 + _amount1) */\n      tag_206\n        /* \"contracts/ConstantK.sol\":3556:3564  _amount0 */\n      dup6\n        /* \"contracts/ConstantK.sol\":3545:3553  reserve0 */\n      sload(0x06)\n        /* \"contracts/ConstantK.sol\":3545:3564  reserve0 + _amount0 */\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"contracts/ConstantK.sol\":3577:3585  _amount1 */\n      dup6\n        /* \"contracts/ConstantK.sol\":3566:3574  reserve1 */\n      sload(0x07)\n        /* \"contracts/ConstantK.sol\":3566:3585  reserve1 + _amount1 */\n      tag_209\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_209:\n        /* \"contracts/ConstantK.sol\":3537:3544  _update */\n      tag_160\n        /* \"contracts/ConstantK.sol\":3537:3586  _update(reserve0 + _amount0, reserve1 + _amount1) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/ConstantK.sol\":2844:3594  {... */\n      pop\n      pop\n        /* \"contracts/ConstantK.sol\":2752:3594  function addLiquidity(uint256 _amount0, uint256 _amount1) external returns (uint256 shares) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":1705:2744  function swap(address _tokenIn, uint256 _amountIn) external returns (uint256 amountOut) {... */\n    tag_90:\n        /* \"contracts/ConstantK.sol\":1774:1791  uint256 amountOut */\n      0x00\n        /* \"contracts/ConstantK.sol\":1832:1833  0 */\n      dup1\n        /* \"contracts/ConstantK.sol\":1812:1834  _tokenIn != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ConstantK.sol\":1812:1820  _tokenIn */\n      dup4\n        /* \"contracts/ConstantK.sol\":1812:1834  _tokenIn != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ConstantK.sol\":1804:1851  require(_tokenIn != address(0), \"ZERO ADDRESS\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"contracts/ConstantK.sol\":1882:1883  0 */\n      0x00\n        /* \"contracts/ConstantK.sol\":1870:1879  _amountIn */\n      dup3\n        /* \"contracts/ConstantK.sol\":1870:1883  _amountIn > 0 */\n      gt\n        /* \"contracts/ConstantK.sol\":1862:1899  require(_amountIn > 0, \"ZERO AMOUNT\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_152\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contracts/ConstantK.sol\":1938:1944  token0 */\n      immutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n        /* \"contracts/ConstantK.sol\":1918:1945  _tokenIn == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ConstantK.sol\":1918:1926  _tokenIn */\n      dup4\n        /* \"contracts/ConstantK.sol\":1918:1945  _tokenIn == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ConstantK.sol\":1918:1976  _tokenIn == address(token0) || _tokenIn == address(token1) */\n      dup1\n      tag_219\n      jumpi\n      pop\n        /* \"contracts/ConstantK.sol\":1969:1975  token1 */\n      immutable(\"0x2501380a21b274421b7683485831a81ec9d98da3f2ac3e39f456bea2b226ba76\")\n        /* \"contracts/ConstantK.sol\":1949:1976  _tokenIn == address(token1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ConstantK.sol\":1949:1957  _tokenIn */\n      dup4\n        /* \"contracts/ConstantK.sol\":1949:1976  _tokenIn == address(token1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ConstantK.sol\":1918:1976  _tokenIn == address(token0) || _tokenIn == address(token1) */\n    tag_219:\n        /* \"contracts/ConstantK.sol\":1910:1977  require(_tokenIn == address(token0) || _tokenIn == address(token1)) */\n      tag_220\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_220:\n        /* \"contracts/ConstantK.sol\":1991:2005  IERC20 tokenIn */\n      0x00\n        /* \"contracts/ConstantK.sol\":2007:2022  IERC20 tokenOut */\n      dup1\n        /* \"contracts/ConstantK.sol\":2024:2041  uint256 reserveIn */\n      0x00\n        /* \"contracts/ConstantK.sol\":2043:2061  uint256 reserveOut */\n      dup1\n        /* \"contracts/ConstantK.sol\":2099:2105  token0 */\n      immutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n        /* \"contracts/ConstantK.sol\":2079:2106  _tokenIn == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ConstantK.sol\":2079:2087  _tokenIn */\n      dup8\n        /* \"contracts/ConstantK.sol\":2079:2106  _tokenIn == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ConstantK.sol\":2078:2185  (_tokenIn == address(token0)) ? (token0, token1, reserve0, reserve1) : (token1, token0, reserve1, reserve0) */\n      tag_221\n      jumpi\n        /* \"contracts/ConstantK.sol\":2150:2156  token1 */\n      immutable(\"0x2501380a21b274421b7683485831a81ec9d98da3f2ac3e39f456bea2b226ba76\")\n        /* \"contracts/ConstantK.sol\":2158:2164  token0 */\n      immutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n        /* \"contracts/ConstantK.sol\":2166:2174  reserve1 */\n      sload(0x07)\n        /* \"contracts/ConstantK.sol\":2176:2184  reserve0 */\n      sload(0x06)\n        /* \"contracts/ConstantK.sol\":2078:2185  (_tokenIn == address(token0)) ? (token0, token1, reserve0, reserve1) : (token1, token0, reserve1, reserve0) */\n      jump(tag_222)\n    tag_221:\n        /* \"contracts/ConstantK.sol\":2111:2117  token0 */\n      immutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n        /* \"contracts/ConstantK.sol\":2119:2125  token1 */\n      immutable(\"0x2501380a21b274421b7683485831a81ec9d98da3f2ac3e39f456bea2b226ba76\")\n        /* \"contracts/ConstantK.sol\":2127:2135  reserve0 */\n      sload(0x06)\n        /* \"contracts/ConstantK.sol\":2137:2145  reserve1 */\n      sload(0x07)\n        /* \"contracts/ConstantK.sol\":2078:2185  (_tokenIn == address(token0)) ? (token0, token1, reserve0, reserve1) : (token1, token0, reserve1, reserve0) */\n    tag_222:\n        /* \"contracts/ConstantK.sol\":1990:2185  (IERC20 tokenIn, IERC20 tokenOut, uint256 reserveIn, uint256 reserveOut) =... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"contracts/ConstantK.sol\":2198:2205  tokenIn */\n      dup4\n        /* \"contracts/ConstantK.sol\":2198:2218  tokenIn.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/ConstantK.sol\":2219:2229  msg.sender */\n      caller\n        /* \"contracts/ConstantK.sol\":2239:2243  this */\n      address\n        /* \"contracts/ConstantK.sol\":2246:2255  _amountIn */\n      dup10\n        /* \"contracts/ConstantK.sol\":2198:2256  tokenIn.transferFrom(msg.sender, address(this), _amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_223:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_225\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_225:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_226\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_226:\n      pop\n        /* \"contracts/ConstantK.sol\":2269:2285  uint256 amountIn */\n      0x00\n        /* \"contracts/ConstantK.sol\":2317:2321  1000 */\n      0x03e8\n        /* \"contracts/ConstantK.sol\":2309:2312  fee */\n      sload(0x05)\n        /* \"contracts/ConstantK.sol\":2302:2306  1000 */\n      0x03e8\n        /* \"contracts/ConstantK.sol\":2302:2312  1000 - fee */\n      tag_227\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_227:\n        /* \"contracts/ConstantK.sol\":2289:2298  _amountIn */\n      dup9\n        /* \"contracts/ConstantK.sol\":2289:2313  _amountIn * (1000 - fee) */\n      tag_228\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_228:\n        /* \"contracts/ConstantK.sol\":2288:2321  (_amountIn * (1000 - fee)) / 1000 */\n      tag_229\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_229:\n        /* \"contracts/ConstantK.sol\":2269:2321  uint256 amountIn = (_amountIn * (1000 - fee)) / 1000 */\n      swap1\n      pop\n        /* \"contracts/ConstantK.sol\":2383:2391  amountIn */\n      dup1\n        /* \"contracts/ConstantK.sol\":2370:2380  reserveOut */\n      dup3\n        /* \"contracts/ConstantK.sol\":2370:2391  reserveOut + amountIn */\n      tag_230\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_230:\n        /* \"contracts/ConstantK.sol\":2357:2365  amountIn */\n      dup2\n        /* \"contracts/ConstantK.sol\":2345:2354  reserveIn */\n      dup5\n        /* \"contracts/ConstantK.sol\":2345:2365  reserveIn * amountIn */\n      tag_231\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_231:\n        /* \"contracts/ConstantK.sol\":2344:2392  (reserveIn * amountIn) / (reserveOut + amountIn) */\n      tag_232\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_232:\n        /* \"contracts/ConstantK.sol\":2332:2392  amountOut = (reserveIn * amountIn) / (reserveOut + amountIn) */\n      swap6\n      pop\n        /* \"contracts/ConstantK.sol\":2405:2412  tokenIn */\n      dup5\n        /* \"contracts/ConstantK.sol\":2405:2421  tokenIn.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/ConstantK.sol\":2422:2427  owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ConstantK.sol\":2441:2449  amountIn */\n      dup4\n        /* \"contracts/ConstantK.sol\":2429:2438  _amountIn */\n      dup11\n        /* \"contracts/ConstantK.sol\":2429:2449  _amountIn - amountIn */\n      tag_233\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_233:\n        /* \"contracts/ConstantK.sol\":2405:2450  tokenIn.transfer(owner, _amountIn - amountIn) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_234:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_237:\n      pop\n        /* \"contracts/ConstantK.sol\":2461:2469  tokenOut */\n      dup4\n        /* \"contracts/ConstantK.sol\":2461:2478  tokenOut.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/ConstantK.sol\":2479:2489  msg.sender */\n      caller\n        /* \"contracts/ConstantK.sol\":2491:2500  amountOut */\n      dup9\n        /* \"contracts/ConstantK.sol\":2461:2501  tokenOut.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_238:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_241:\n      pop\n        /* \"contracts/ConstantK.sol\":2515:2532  uint256 _reserve0 */\n      0x00\n        /* \"contracts/ConstantK.sol\":2534:2551  uint256 _reserve1 */\n      dup1\n        /* \"contracts/ConstantK.sol\":2589:2595  token0 */\n      immutable(\"0x356838a9802f9300960370a61c1b93fed91a0635190b94cc9f275180c4d2038b\")\n        /* \"contracts/ConstantK.sol\":2569:2596  _tokenIn == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ConstantK.sol\":2569:2577  _tokenIn */\n      dup11\n        /* \"contracts/ConstantK.sol\":2569:2596  _tokenIn == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ConstantK.sol\":2568:2696  (_tokenIn == address(token0)) ? (reserveIn + _amountIn, reserveOut - amountOut) : (reserveOut - amountOut, reserveIn + amountIn) */\n      tag_242\n      jumpi\n        /* \"contracts/ConstantK.sol\":2664:2673  amountOut */\n      dup8\n        /* \"contracts/ConstantK.sol\":2651:2661  reserveOut */\n      dup5\n        /* \"contracts/ConstantK.sol\":2651:2673  reserveOut - amountOut */\n      tag_243\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_243:\n        /* \"contracts/ConstantK.sol\":2687:2695  amountIn */\n      dup4\n        /* \"contracts/ConstantK.sol\":2675:2684  reserveIn */\n      dup7\n        /* \"contracts/ConstantK.sol\":2675:2695  reserveIn + amountIn */\n      tag_244\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_244:\n        /* \"contracts/ConstantK.sol\":2568:2696  (_tokenIn == address(token0)) ? (reserveIn + _amountIn, reserveOut - amountOut) : (reserveOut - amountOut, reserveIn + amountIn) */\n      jump(tag_245)\n    tag_242:\n        /* \"contracts/ConstantK.sol\":2613:2622  _amountIn */\n      dup9\n        /* \"contracts/ConstantK.sol\":2601:2610  reserveIn */\n      dup6\n        /* \"contracts/ConstantK.sol\":2601:2622  reserveIn + _amountIn */\n      tag_246\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_246:\n        /* \"contracts/ConstantK.sol\":2637:2646  amountOut */\n      dup9\n        /* \"contracts/ConstantK.sol\":2624:2634  reserveOut */\n      dup6\n        /* \"contracts/ConstantK.sol\":2624:2646  reserveOut - amountOut */\n      tag_247\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_247:\n        /* \"contracts/ConstantK.sol\":2568:2696  (_tokenIn == address(token0)) ? (reserveIn + _amountIn, reserveOut - amountOut) : (reserveOut - amountOut, reserveIn + amountIn) */\n    tag_245:\n        /* \"contracts/ConstantK.sol\":2514:2696  (uint256 _reserve0, uint256 _reserve1) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/ConstantK.sol\":2707:2736  _update(_reserve0, _reserve1) */\n      tag_248\n        /* \"contracts/ConstantK.sol\":2715:2724  _reserve0 */\n      dup3\n        /* \"contracts/ConstantK.sol\":2726:2735  _reserve1 */\n      dup3\n        /* \"contracts/ConstantK.sol\":2707:2714  _update */\n      tag_160\n        /* \"contracts/ConstantK.sol\":2707:2736  _update(_reserve0, _reserve1) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/ConstantK.sol\":1793:2744  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ConstantK.sol\":1705:2744  function swap(address _tokenIn, uint256 _amountIn) external returns (uint256 amountOut) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":331:361  IERC20 public immutable token1 */\n    tag_93:\n      immutable(\"0x2501380a21b274421b7683485831a81ec9d98da3f2ac3e39f456bea2b226ba76\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":451:473  uint256 public fee = 3 */\n    tag_101:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":837:970  function _update(uint256 _reserve0, uint256 _reserve1) private {... */\n    tag_160:\n        /* \"contracts/ConstantK.sol\":922:931  _reserve0 */\n      dup2\n        /* \"contracts/ConstantK.sol\":911:919  reserve0 */\n      0x06\n        /* \"contracts/ConstantK.sol\":911:931  reserve0 = _reserve0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ConstantK.sol\":953:962  _reserve1 */\n      dup1\n        /* \"contracts/ConstantK.sol\":942:950  reserve1 */\n      0x07\n        /* \"contracts/ConstantK.sol\":942:962  reserve1 = _reserve1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ConstantK.sol\":837:970  function _update(uint256 _reserve0, uint256 _reserve1) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":978:1281  function _sqrt(uint y) private pure returns (uint z) {... */\n    tag_190:\n        /* \"contracts/ConstantK.sol\":1023:1029  uint z */\n      0x00\n        /* \"contracts/ConstantK.sol\":1050:1051  3 */\n      0x03\n        /* \"contracts/ConstantK.sol\":1046:1047  y */\n      dup3\n        /* \"contracts/ConstantK.sol\":1046:1051  y > 3 */\n      gt\n        /* \"contracts/ConstantK.sol\":1042:1274  if (y > 3) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"contracts/ConstantK.sol\":1072:1073  y */\n      dup2\n        /* \"contracts/ConstantK.sol\":1068:1073  z = y */\n      swap1\n      pop\n        /* \"contracts/ConstantK.sol\":1088:1094  uint x */\n      0x00\n        /* \"contracts/ConstantK.sol\":1105:1106  1 */\n      0x01\n        /* \"contracts/ConstantK.sol\":1101:1102  2 */\n      0x02\n        /* \"contracts/ConstantK.sol\":1097:1098  y */\n      dup5\n        /* \"contracts/ConstantK.sol\":1097:1102  y / 2 */\n      tag_276\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_276:\n        /* \"contracts/ConstantK.sol\":1097:1106  y / 2 + 1 */\n      tag_277\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_277:\n        /* \"contracts/ConstantK.sol\":1088:1106  uint x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"contracts/ConstantK.sol\":1121:1213  while (x < z) {... */\n    tag_278:\n        /* \"contracts/ConstantK.sol\":1132:1133  z */\n      dup2\n        /* \"contracts/ConstantK.sol\":1128:1129  x */\n      dup2\n        /* \"contracts/ConstantK.sol\":1128:1133  x < z */\n      lt\n        /* \"contracts/ConstantK.sol\":1121:1213  while (x < z) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"contracts/ConstantK.sol\":1158:1159  x */\n      dup1\n        /* \"contracts/ConstantK.sol\":1154:1159  z = x */\n      swap2\n      pop\n        /* \"contracts/ConstantK.sol\":1196:1197  2 */\n      0x02\n        /* \"contracts/ConstantK.sol\":1191:1192  x */\n      dup2\n        /* \"contracts/ConstantK.sol\":1187:1188  x */\n      dup3\n        /* \"contracts/ConstantK.sol\":1183:1184  y */\n      dup6\n        /* \"contracts/ConstantK.sol\":1183:1188  y / x */\n      tag_280\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_280:\n        /* \"contracts/ConstantK.sol\":1183:1192  y / x + x */\n      tag_281\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_281:\n        /* \"contracts/ConstantK.sol\":1182:1197  (y / x + x) / 2 */\n      tag_282\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_282:\n        /* \"contracts/ConstantK.sol\":1178:1197  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/ConstantK.sol\":1121:1213  while (x < z) {... */\n      jump(tag_278)\n    tag_279:\n        /* \"contracts/ConstantK.sol\":1053:1224  {... */\n      pop\n        /* \"contracts/ConstantK.sol\":1042:1274  if (y > 3) {... */\n      jump(tag_283)\n    tag_275:\n        /* \"contracts/ConstantK.sol\":1239:1240  0 */\n      0x00\n        /* \"contracts/ConstantK.sol\":1234:1235  y */\n      dup3\n        /* \"contracts/ConstantK.sol\":1234:1240  y != 0 */\n      eq\n        /* \"contracts/ConstantK.sol\":1230:1274  if (y != 0) {... */\n      tag_284\n      jumpi\n        /* \"contracts/ConstantK.sol\":1261:1262  1 */\n      0x01\n        /* \"contracts/ConstantK.sol\":1257:1262  z = 1 */\n      swap1\n      pop\n        /* \"contracts/ConstantK.sol\":1230:1274  if (y != 0) {... */\n    tag_284:\n        /* \"contracts/ConstantK.sol\":1042:1274  if (y > 3) {... */\n    tag_283:\n        /* \"contracts/ConstantK.sol\":978:1281  function _sqrt(uint y) private pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ConstantK.sol\":1289:1398  function _min(uint256 x, uint256 y) private pure returns (uint256 z) {... */\n    tag_199:\n        /* \"contracts/ConstantK.sol\":1347:1356  uint256 z */\n      0x00\n        /* \"contracts/ConstantK.sol\":1381:1382  y */\n      dup2\n        /* \"contracts/ConstantK.sol\":1376:1377  x */\n      dup4\n        /* \"contracts/ConstantK.sol\":1376:1382  x <= y */\n      gt\n      iszero\n        /* \"contracts/ConstantK.sol\":1376:1390  x <= y ? x : y */\n      tag_286\n      jumpi\n        /* \"contracts/ConstantK.sol\":1389:1390  y */\n      dup2\n        /* \"contracts/ConstantK.sol\":1376:1390  x <= y ? x : y */\n      jump(tag_287)\n    tag_286:\n        /* \"contracts/ConstantK.sol\":1385:1386  x */\n      dup3\n        /* \"contracts/ConstantK.sol\":1376:1390  x <= y ? x : y */\n    tag_287:\n        /* \"contracts/ConstantK.sol\":1369:1390  return x <= y ? x : y */\n      swap1\n      pop\n        /* \"contracts/ConstantK.sol\":1289:1398  function _min(uint256 x, uint256 y) private pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_298\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_301\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_301:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_302)\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_306)\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_307\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_308:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_309:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_310:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_311:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_312:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_364\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_308\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":711:782   */\n      tag_365\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_309\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_366\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_310\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":881:910   */\n      tag_367\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_311\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_28:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_369\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_312\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_314:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_316:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_317:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_375\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_316\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_318:\n        /* \"#utility.yul\":1876:1900   */\n      tag_377\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_317\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_378:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_319:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_380\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_318\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_320:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_321:\n        /* \"#utility.yul\":2232:2256   */\n      tag_383\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_320\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_384:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_322:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_386\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_321\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_31:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_389\n      tag_314\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2525:2644   */\n    tag_388:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_390\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_319\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_391\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_322\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_323:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_324:\n        /* \"#utility.yul\":3089:3110   */\n      tag_394\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_323\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_34:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_396\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_324\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3399   */\n    tag_325:\n        /* \"#utility.yul\":3367:3370   */\n      0x00\n        /* \"#utility.yul\":3388:3393   */\n      dup2\n        /* \"#utility.yul\":3381:3393   */\n      swap1\n      pop\n        /* \"#utility.yul\":3339:3399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3405:3547   */\n    tag_326:\n        /* \"#utility.yul\":3455:3464   */\n      0x00\n        /* \"#utility.yul\":3488:3541   */\n      tag_399\n        /* \"#utility.yul\":3506:3540   */\n      tag_400\n        /* \"#utility.yul\":3515:3539   */\n      tag_401\n        /* \"#utility.yul\":3533:3538   */\n      dup5\n        /* \"#utility.yul\":3515:3539   */\n      tag_316\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3506:3540   */\n      tag_325\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3488:3541   */\n      tag_316\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3475:3541   */\n      swap1\n      pop\n        /* \"#utility.yul\":3405:3547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3553:3679   */\n    tag_327:\n        /* \"#utility.yul\":3603:3612   */\n      0x00\n        /* \"#utility.yul\":3636:3673   */\n      tag_403\n        /* \"#utility.yul\":3667:3672   */\n      dup3\n        /* \"#utility.yul\":3636:3673   */\n      tag_326\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3623:3673   */\n      swap1\n      pop\n        /* \"#utility.yul\":3553:3679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3685:3825   */\n    tag_328:\n        /* \"#utility.yul\":3749:3758   */\n      0x00\n        /* \"#utility.yul\":3782:3819   */\n      tag_405\n        /* \"#utility.yul\":3813:3818   */\n      dup3\n        /* \"#utility.yul\":3782:3819   */\n      tag_327\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3769:3819   */\n      swap1\n      pop\n        /* \"#utility.yul\":3685:3825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3831:3990   */\n    tag_329:\n        /* \"#utility.yul\":3932:3983   */\n      tag_407\n        /* \"#utility.yul\":3977:3982   */\n      dup2\n        /* \"#utility.yul\":3932:3983   */\n      tag_328\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3927:3930   */\n      dup3\n        /* \"#utility.yul\":3920:3984   */\n      mstore\n        /* \"#utility.yul\":3831:3990   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3996:4246   */\n    tag_38:\n        /* \"#utility.yul\":4103:4107   */\n      0x00\n        /* \"#utility.yul\":4141:4143   */\n      0x20\n        /* \"#utility.yul\":4130:4139   */\n      dup3\n        /* \"#utility.yul\":4126:4144   */\n      add\n        /* \"#utility.yul\":4118:4144   */\n      swap1\n      pop\n        /* \"#utility.yul\":4154:4239   */\n      tag_409\n        /* \"#utility.yul\":4236:4237   */\n      0x00\n        /* \"#utility.yul\":4225:4234   */\n      dup4\n        /* \"#utility.yul\":4221:4238   */\n      add\n        /* \"#utility.yul\":4212:4218   */\n      dup5\n        /* \"#utility.yul\":4154:4239   */\n      tag_329\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":3996:4246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4252:4370   */\n    tag_330:\n        /* \"#utility.yul\":4339:4363   */\n      tag_411\n        /* \"#utility.yul\":4357:4362   */\n      dup2\n        /* \"#utility.yul\":4339:4363   */\n      tag_320\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4334:4337   */\n      dup3\n        /* \"#utility.yul\":4327:4364   */\n      mstore\n        /* \"#utility.yul\":4252:4370   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4376:4598   */\n    tag_42:\n        /* \"#utility.yul\":4469:4473   */\n      0x00\n        /* \"#utility.yul\":4507:4509   */\n      0x20\n        /* \"#utility.yul\":4496:4505   */\n      dup3\n        /* \"#utility.yul\":4492:4510   */\n      add\n        /* \"#utility.yul\":4484:4510   */\n      swap1\n      pop\n        /* \"#utility.yul\":4520:4591   */\n      tag_413\n        /* \"#utility.yul\":4588:4589   */\n      0x00\n        /* \"#utility.yul\":4577:4586   */\n      dup4\n        /* \"#utility.yul\":4573:4590   */\n      add\n        /* \"#utility.yul\":4564:4570   */\n      dup5\n        /* \"#utility.yul\":4520:4591   */\n      tag_330\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4376:4598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4604:5223   */\n    tag_48:\n        /* \"#utility.yul\":4681:4687   */\n      0x00\n        /* \"#utility.yul\":4689:4695   */\n      dup1\n        /* \"#utility.yul\":4697:4703   */\n      0x00\n        /* \"#utility.yul\":4746:4748   */\n      0x60\n        /* \"#utility.yul\":4734:4743   */\n      dup5\n        /* \"#utility.yul\":4725:4732   */\n      dup7\n        /* \"#utility.yul\":4721:4744   */\n      sub\n        /* \"#utility.yul\":4717:4749   */\n      slt\n        /* \"#utility.yul\":4714:4833   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":4752:4831   */\n      tag_416\n      tag_314\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4714:4833   */\n    tag_415:\n        /* \"#utility.yul\":4872:4873   */\n      0x00\n        /* \"#utility.yul\":4897:4950   */\n      tag_417\n        /* \"#utility.yul\":4942:4949   */\n      dup7\n        /* \"#utility.yul\":4933:4939   */\n      dup3\n        /* \"#utility.yul\":4922:4931   */\n      dup8\n        /* \"#utility.yul\":4918:4940   */\n      add\n        /* \"#utility.yul\":4897:4950   */\n      tag_319\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4887:4950   */\n      swap4\n      pop\n        /* \"#utility.yul\":4843:4960   */\n      pop\n        /* \"#utility.yul\":4999:5001   */\n      0x20\n        /* \"#utility.yul\":5025:5078   */\n      tag_418\n        /* \"#utility.yul\":5070:5077   */\n      dup7\n        /* \"#utility.yul\":5061:5067   */\n      dup3\n        /* \"#utility.yul\":5050:5059   */\n      dup8\n        /* \"#utility.yul\":5046:5068   */\n      add\n        /* \"#utility.yul\":5025:5078   */\n      tag_319\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":5015:5078   */\n      swap3\n      pop\n        /* \"#utility.yul\":4970:5088   */\n      pop\n        /* \"#utility.yul\":5127:5129   */\n      0x40\n        /* \"#utility.yul\":5153:5206   */\n      tag_419\n        /* \"#utility.yul\":5198:5205   */\n      dup7\n        /* \"#utility.yul\":5189:5195   */\n      dup3\n        /* \"#utility.yul\":5178:5187   */\n      dup8\n        /* \"#utility.yul\":5174:5196   */\n      add\n        /* \"#utility.yul\":5153:5206   */\n      tag_322\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5143:5206   */\n      swap2\n      pop\n        /* \"#utility.yul\":5098:5216   */\n      pop\n        /* \"#utility.yul\":4604:5223   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5229:5315   */\n    tag_331:\n        /* \"#utility.yul\":5264:5271   */\n      0x00\n        /* \"#utility.yul\":5304:5308   */\n      0xff\n        /* \"#utility.yul\":5297:5302   */\n      dup3\n        /* \"#utility.yul\":5293:5309   */\n      and\n        /* \"#utility.yul\":5282:5309   */\n      swap1\n      pop\n        /* \"#utility.yul\":5229:5315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5321:5433   */\n    tag_332:\n        /* \"#utility.yul\":5404:5426   */\n      tag_422\n        /* \"#utility.yul\":5420:5425   */\n      dup2\n        /* \"#utility.yul\":5404:5426   */\n      tag_331\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":5399:5402   */\n      dup3\n        /* \"#utility.yul\":5392:5427   */\n      mstore\n        /* \"#utility.yul\":5321:5433   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5439:5653   */\n    tag_54:\n        /* \"#utility.yul\":5528:5532   */\n      0x00\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5555:5564   */\n      dup3\n        /* \"#utility.yul\":5551:5569   */\n      add\n        /* \"#utility.yul\":5543:5569   */\n      swap1\n      pop\n        /* \"#utility.yul\":5579:5646   */\n      tag_424\n        /* \"#utility.yul\":5643:5644   */\n      0x00\n        /* \"#utility.yul\":5632:5641   */\n      dup4\n        /* \"#utility.yul\":5628:5645   */\n      add\n        /* \"#utility.yul\":5619:5625   */\n      dup5\n        /* \"#utility.yul\":5579:5646   */\n      tag_332\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5439:5653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5659:5988   */\n    tag_63:\n        /* \"#utility.yul\":5718:5724   */\n      0x00\n        /* \"#utility.yul\":5767:5769   */\n      0x20\n        /* \"#utility.yul\":5755:5764   */\n      dup3\n        /* \"#utility.yul\":5746:5753   */\n      dup5\n        /* \"#utility.yul\":5742:5765   */\n      sub\n        /* \"#utility.yul\":5738:5770   */\n      slt\n        /* \"#utility.yul\":5735:5854   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":5773:5852   */\n      tag_427\n      tag_314\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5735:5854   */\n    tag_426:\n        /* \"#utility.yul\":5893:5894   */\n      0x00\n        /* \"#utility.yul\":5918:5971   */\n      tag_428\n        /* \"#utility.yul\":5963:5970   */\n      dup5\n        /* \"#utility.yul\":5954:5960   */\n      dup3\n        /* \"#utility.yul\":5943:5952   */\n      dup6\n        /* \"#utility.yul\":5939:5961   */\n      add\n        /* \"#utility.yul\":5918:5971   */\n      tag_319\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5908:5971   */\n      swap2\n      pop\n        /* \"#utility.yul\":5864:5981   */\n      pop\n        /* \"#utility.yul\":5659:5988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5994:6148   */\n    tag_333:\n        /* \"#utility.yul\":6072:6081   */\n      0x00\n        /* \"#utility.yul\":6105:6142   */\n      tag_430\n        /* \"#utility.yul\":6136:6141   */\n      dup3\n        /* \"#utility.yul\":6105:6142   */\n      tag_327\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6092:6142   */\n      swap1\n      pop\n        /* \"#utility.yul\":5994:6148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6154:6341   */\n    tag_334:\n        /* \"#utility.yul\":6269:6334   */\n      tag_432\n        /* \"#utility.yul\":6328:6333   */\n      dup2\n        /* \"#utility.yul\":6269:6334   */\n      tag_333\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6264:6267   */\n      dup3\n        /* \"#utility.yul\":6257:6335   */\n      mstore\n        /* \"#utility.yul\":6154:6341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6347:6625   */\n    tag_69:\n        /* \"#utility.yul\":6468:6472   */\n      0x00\n        /* \"#utility.yul\":6506:6508   */\n      0x20\n        /* \"#utility.yul\":6495:6504   */\n      dup3\n        /* \"#utility.yul\":6491:6509   */\n      add\n        /* \"#utility.yul\":6483:6509   */\n      swap1\n      pop\n        /* \"#utility.yul\":6519:6618   */\n      tag_434\n        /* \"#utility.yul\":6615:6616   */\n      0x00\n        /* \"#utility.yul\":6604:6613   */\n      dup4\n        /* \"#utility.yul\":6600:6617   */\n      add\n        /* \"#utility.yul\":6591:6597   */\n      dup5\n        /* \"#utility.yul\":6519:6618   */\n      tag_334\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6347:6625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6631:6960   */\n    tag_75:\n        /* \"#utility.yul\":6690:6696   */\n      0x00\n        /* \"#utility.yul\":6739:6741   */\n      0x20\n        /* \"#utility.yul\":6727:6736   */\n      dup3\n        /* \"#utility.yul\":6718:6725   */\n      dup5\n        /* \"#utility.yul\":6714:6737   */\n      sub\n        /* \"#utility.yul\":6710:6742   */\n      slt\n        /* \"#utility.yul\":6707:6826   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":6745:6824   */\n      tag_437\n      tag_314\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":6707:6826   */\n    tag_436:\n        /* \"#utility.yul\":6865:6866   */\n      0x00\n        /* \"#utility.yul\":6890:6943   */\n      tag_438\n        /* \"#utility.yul\":6935:6942   */\n      dup5\n        /* \"#utility.yul\":6926:6932   */\n      dup3\n        /* \"#utility.yul\":6915:6924   */\n      dup6\n        /* \"#utility.yul\":6911:6933   */\n      add\n        /* \"#utility.yul\":6890:6943   */\n      tag_322\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":6880:6943   */\n      swap2\n      pop\n        /* \"#utility.yul\":6836:6953   */\n      pop\n        /* \"#utility.yul\":6631:6960   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6966:7298   */\n    tag_78:\n        /* \"#utility.yul\":7087:7091   */\n      0x00\n        /* \"#utility.yul\":7125:7127   */\n      0x40\n        /* \"#utility.yul\":7114:7123   */\n      dup3\n        /* \"#utility.yul\":7110:7128   */\n      add\n        /* \"#utility.yul\":7102:7128   */\n      swap1\n      pop\n        /* \"#utility.yul\":7138:7209   */\n      tag_440\n        /* \"#utility.yul\":7206:7207   */\n      0x00\n        /* \"#utility.yul\":7195:7204   */\n      dup4\n        /* \"#utility.yul\":7191:7208   */\n      add\n        /* \"#utility.yul\":7182:7188   */\n      dup6\n        /* \"#utility.yul\":7138:7209   */\n      tag_330\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7219:7291   */\n      tag_441\n        /* \"#utility.yul\":7287:7289   */\n      0x20\n        /* \"#utility.yul\":7276:7285   */\n      dup4\n        /* \"#utility.yul\":7272:7290   */\n      add\n        /* \"#utility.yul\":7263:7269   */\n      dup5\n        /* \"#utility.yul\":7219:7291   */\n      tag_330\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6966:7298   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7304:7778   */\n    tag_81:\n        /* \"#utility.yul\":7372:7378   */\n      0x00\n        /* \"#utility.yul\":7380:7386   */\n      dup1\n        /* \"#utility.yul\":7429:7431   */\n      0x40\n        /* \"#utility.yul\":7417:7426   */\n      dup4\n        /* \"#utility.yul\":7408:7415   */\n      dup6\n        /* \"#utility.yul\":7404:7427   */\n      sub\n        /* \"#utility.yul\":7400:7432   */\n      slt\n        /* \"#utility.yul\":7397:7516   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":7435:7514   */\n      tag_444\n      tag_314\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7397:7516   */\n    tag_443:\n        /* \"#utility.yul\":7555:7556   */\n      0x00\n        /* \"#utility.yul\":7580:7633   */\n      tag_445\n        /* \"#utility.yul\":7625:7632   */\n      dup6\n        /* \"#utility.yul\":7616:7622   */\n      dup3\n        /* \"#utility.yul\":7605:7614   */\n      dup7\n        /* \"#utility.yul\":7601:7623   */\n      add\n        /* \"#utility.yul\":7580:7633   */\n      tag_322\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7570:7633   */\n      swap3\n      pop\n        /* \"#utility.yul\":7526:7643   */\n      pop\n        /* \"#utility.yul\":7682:7684   */\n      0x20\n        /* \"#utility.yul\":7708:7761   */\n      tag_446\n        /* \"#utility.yul\":7753:7760   */\n      dup6\n        /* \"#utility.yul\":7744:7750   */\n      dup3\n        /* \"#utility.yul\":7733:7742   */\n      dup7\n        /* \"#utility.yul\":7729:7751   */\n      add\n        /* \"#utility.yul\":7708:7761   */\n      tag_322\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7698:7761   */\n      swap2\n      pop\n        /* \"#utility.yul\":7653:7771   */\n      pop\n        /* \"#utility.yul\":7304:7778   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7784:8258   */\n    tag_97:\n        /* \"#utility.yul\":7852:7858   */\n      0x00\n        /* \"#utility.yul\":7860:7866   */\n      dup1\n        /* \"#utility.yul\":7909:7911   */\n      0x40\n        /* \"#utility.yul\":7897:7906   */\n      dup4\n        /* \"#utility.yul\":7888:7895   */\n      dup6\n        /* \"#utility.yul\":7884:7907   */\n      sub\n        /* \"#utility.yul\":7880:7912   */\n      slt\n        /* \"#utility.yul\":7877:7996   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":7915:7994   */\n      tag_449\n      tag_314\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":7877:7996   */\n    tag_448:\n        /* \"#utility.yul\":8035:8036   */\n      0x00\n        /* \"#utility.yul\":8060:8113   */\n      tag_450\n        /* \"#utility.yul\":8105:8112   */\n      dup6\n        /* \"#utility.yul\":8096:8102   */\n      dup3\n        /* \"#utility.yul\":8085:8094   */\n      dup7\n        /* \"#utility.yul\":8081:8103   */\n      add\n        /* \"#utility.yul\":8060:8113   */\n      tag_319\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":8050:8113   */\n      swap3\n      pop\n        /* \"#utility.yul\":8006:8123   */\n      pop\n        /* \"#utility.yul\":8162:8164   */\n      0x20\n        /* \"#utility.yul\":8188:8241   */\n      tag_451\n        /* \"#utility.yul\":8233:8240   */\n      dup6\n        /* \"#utility.yul\":8224:8230   */\n      dup3\n        /* \"#utility.yul\":8213:8222   */\n      dup7\n        /* \"#utility.yul\":8209:8231   */\n      add\n        /* \"#utility.yul\":8188:8241   */\n      tag_319\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":8178:8241   */\n      swap2\n      pop\n        /* \"#utility.yul\":8133:8251   */\n      pop\n        /* \"#utility.yul\":7784:8258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8264:8444   */\n    tag_335:\n        /* \"#utility.yul\":8312:8389   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8309:8310   */\n      0x00\n        /* \"#utility.yul\":8302:8390   */\n      mstore\n        /* \"#utility.yul\":8409:8413   */\n      0x22\n        /* \"#utility.yul\":8406:8407   */\n      0x04\n        /* \"#utility.yul\":8399:8414   */\n      mstore\n        /* \"#utility.yul\":8433:8437   */\n      0x24\n        /* \"#utility.yul\":8430:8431   */\n      0x00\n        /* \"#utility.yul\":8423:8438   */\n      revert\n        /* \"#utility.yul\":8450:8770   */\n    tag_105:\n        /* \"#utility.yul\":8494:8500   */\n      0x00\n        /* \"#utility.yul\":8531:8532   */\n      0x02\n        /* \"#utility.yul\":8525:8529   */\n      dup3\n        /* \"#utility.yul\":8521:8533   */\n      div\n        /* \"#utility.yul\":8511:8533   */\n      swap1\n      pop\n        /* \"#utility.yul\":8578:8579   */\n      0x01\n        /* \"#utility.yul\":8572:8576   */\n      dup3\n        /* \"#utility.yul\":8568:8580   */\n      and\n        /* \"#utility.yul\":8599:8617   */\n      dup1\n        /* \"#utility.yul\":8589:8670   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":8655:8659   */\n      0x7f\n        /* \"#utility.yul\":8647:8653   */\n      dup3\n        /* \"#utility.yul\":8643:8660   */\n      and\n        /* \"#utility.yul\":8633:8660   */\n      swap2\n      pop\n        /* \"#utility.yul\":8589:8670   */\n    tag_454:\n        /* \"#utility.yul\":8717:8719   */\n      0x20\n        /* \"#utility.yul\":8709:8715   */\n      dup3\n        /* \"#utility.yul\":8706:8720   */\n      lt\n        /* \"#utility.yul\":8686:8704   */\n      dup2\n        /* \"#utility.yul\":8683:8721   */\n      sub\n        /* \"#utility.yul\":8680:8764   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":8736:8754   */\n      tag_456\n      tag_335\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8680:8764   */\n    tag_455:\n        /* \"#utility.yul\":8501:8770   */\n      pop\n        /* \"#utility.yul\":8450:8770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8776:8881   */\n    tag_336:\n        /* \"#utility.yul\":8812:8819   */\n      0x00\n        /* \"#utility.yul\":8852:8874   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":8845:8850   */\n      dup3\n        /* \"#utility.yul\":8841:8875   */\n      and\n        /* \"#utility.yul\":8830:8875   */\n      swap1\n      pop\n        /* \"#utility.yul\":8776:8881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8887:9007   */\n    tag_337:\n        /* \"#utility.yul\":8959:8982   */\n      tag_459\n        /* \"#utility.yul\":8976:8981   */\n      dup2\n        /* \"#utility.yul\":8959:8982   */\n      tag_336\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":8952:8957   */\n      dup2\n        /* \"#utility.yul\":8949:8983   */\n      eq\n        /* \"#utility.yul\":8939:9001   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":8997:8998   */\n      0x00\n        /* \"#utility.yul\":8994:8995   */\n      dup1\n        /* \"#utility.yul\":8987:8999   */\n      revert\n        /* \"#utility.yul\":8939:9001   */\n    tag_460:\n        /* \"#utility.yul\":8887:9007   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9013:9154   */\n    tag_338:\n        /* \"#utility.yul\":9069:9074   */\n      0x00\n        /* \"#utility.yul\":9100:9106   */\n      dup2\n        /* \"#utility.yul\":9094:9107   */\n      mload\n        /* \"#utility.yul\":9085:9107   */\n      swap1\n      pop\n        /* \"#utility.yul\":9116:9148   */\n      tag_462\n        /* \"#utility.yul\":9142:9147   */\n      dup2\n        /* \"#utility.yul\":9116:9148   */\n      tag_337\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9013:9154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9160:9236   */\n    tag_339:\n        /* \"#utility.yul\":9196:9203   */\n      0x00\n        /* \"#utility.yul\":9225:9230   */\n      dup2\n        /* \"#utility.yul\":9214:9230   */\n      swap1\n      pop\n        /* \"#utility.yul\":9160:9236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9242:9362   */\n    tag_340:\n        /* \"#utility.yul\":9314:9337   */\n      tag_465\n        /* \"#utility.yul\":9331:9336   */\n      dup2\n        /* \"#utility.yul\":9314:9337   */\n      tag_339\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":9307:9312   */\n      dup2\n        /* \"#utility.yul\":9304:9338   */\n      eq\n        /* \"#utility.yul\":9294:9356   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":9352:9353   */\n      0x00\n        /* \"#utility.yul\":9349:9350   */\n      dup1\n        /* \"#utility.yul\":9342:9354   */\n      revert\n        /* \"#utility.yul\":9294:9356   */\n    tag_466:\n        /* \"#utility.yul\":9242:9362   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9368:9509   */\n    tag_341:\n        /* \"#utility.yul\":9424:9429   */\n      0x00\n        /* \"#utility.yul\":9455:9461   */\n      dup2\n        /* \"#utility.yul\":9449:9462   */\n      mload\n        /* \"#utility.yul\":9440:9462   */\n      swap1\n      pop\n        /* \"#utility.yul\":9471:9503   */\n      tag_468\n        /* \"#utility.yul\":9497:9502   */\n      dup2\n        /* \"#utility.yul\":9471:9503   */\n      tag_340\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9368:9509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9515:9658   */\n    tag_342:\n        /* \"#utility.yul\":9572:9577   */\n      0x00\n        /* \"#utility.yul\":9603:9609   */\n      dup2\n        /* \"#utility.yul\":9597:9610   */\n      mload\n        /* \"#utility.yul\":9588:9610   */\n      swap1\n      pop\n        /* \"#utility.yul\":9619:9652   */\n      tag_470\n        /* \"#utility.yul\":9646:9651   */\n      dup2\n        /* \"#utility.yul\":9619:9652   */\n      tag_321\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9515:9658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9664:10635   */\n    tag_120:\n        /* \"#utility.yul\":9767:9773   */\n      0x00\n        /* \"#utility.yul\":9775:9781   */\n      dup1\n        /* \"#utility.yul\":9783:9789   */\n      0x00\n        /* \"#utility.yul\":9791:9797   */\n      dup1\n        /* \"#utility.yul\":9799:9805   */\n      0x00\n        /* \"#utility.yul\":9848:9851   */\n      0xa0\n        /* \"#utility.yul\":9836:9845   */\n      dup7\n        /* \"#utility.yul\":9827:9834   */\n      dup9\n        /* \"#utility.yul\":9823:9846   */\n      sub\n        /* \"#utility.yul\":9819:9852   */\n      slt\n        /* \"#utility.yul\":9816:9936   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":9855:9934   */\n      tag_473\n      tag_314\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":9816:9936   */\n    tag_472:\n        /* \"#utility.yul\":9975:9976   */\n      0x00\n        /* \"#utility.yul\":10000:10063   */\n      tag_474\n        /* \"#utility.yul\":10055:10062   */\n      dup9\n        /* \"#utility.yul\":10046:10052   */\n      dup3\n        /* \"#utility.yul\":10035:10044   */\n      dup10\n        /* \"#utility.yul\":10031:10053   */\n      add\n        /* \"#utility.yul\":10000:10063   */\n      tag_338\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9990:10063   */\n      swap6\n      pop\n        /* \"#utility.yul\":9946:10073   */\n      pop\n        /* \"#utility.yul\":10112:10114   */\n      0x20\n        /* \"#utility.yul\":10138:10201   */\n      tag_475\n        /* \"#utility.yul\":10193:10200   */\n      dup9\n        /* \"#utility.yul\":10184:10190   */\n      dup3\n        /* \"#utility.yul\":10173:10182   */\n      dup10\n        /* \"#utility.yul\":10169:10191   */\n      add\n        /* \"#utility.yul\":10138:10201   */\n      tag_341\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10128:10201   */\n      swap5\n      pop\n        /* \"#utility.yul\":10083:10211   */\n      pop\n        /* \"#utility.yul\":10250:10252   */\n      0x40\n        /* \"#utility.yul\":10276:10340   */\n      tag_476\n        /* \"#utility.yul\":10332:10339   */\n      dup9\n        /* \"#utility.yul\":10323:10329   */\n      dup3\n        /* \"#utility.yul\":10312:10321   */\n      dup10\n        /* \"#utility.yul\":10308:10330   */\n      add\n        /* \"#utility.yul\":10276:10340   */\n      tag_342\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10266:10340   */\n      swap4\n      pop\n        /* \"#utility.yul\":10221:10350   */\n      pop\n        /* \"#utility.yul\":10389:10391   */\n      0x60\n        /* \"#utility.yul\":10415:10479   */\n      tag_477\n        /* \"#utility.yul\":10471:10478   */\n      dup9\n        /* \"#utility.yul\":10462:10468   */\n      dup3\n        /* \"#utility.yul\":10451:10460   */\n      dup10\n        /* \"#utility.yul\":10447:10469   */\n      add\n        /* \"#utility.yul\":10415:10479   */\n      tag_342\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":10405:10479   */\n      swap3\n      pop\n        /* \"#utility.yul\":10360:10489   */\n      pop\n        /* \"#utility.yul\":10528:10531   */\n      0x80\n        /* \"#utility.yul\":10555:10618   */\n      tag_478\n        /* \"#utility.yul\":10610:10617   */\n      dup9\n        /* \"#utility.yul\":10601:10607   */\n      dup3\n        /* \"#utility.yul\":10590:10599   */\n      dup10\n        /* \"#utility.yul\":10586:10608   */\n      add\n        /* \"#utility.yul\":10555:10618   */\n      tag_338\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":10545:10618   */\n      swap2\n      pop\n        /* \"#utility.yul\":10499:10628   */\n      pop\n        /* \"#utility.yul\":9664:10635   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10641:10804   */\n    tag_343:\n        /* \"#utility.yul\":10781:10796   */\n      0x496e76616c696420707269636500000000000000000000000000000000000000\n        /* \"#utility.yul\":10777:10778   */\n      0x00\n        /* \"#utility.yul\":10769:10775   */\n      dup3\n        /* \"#utility.yul\":10765:10779   */\n      add\n        /* \"#utility.yul\":10758:10797   */\n      mstore\n        /* \"#utility.yul\":10641:10804   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10810:11176   */\n    tag_344:\n        /* \"#utility.yul\":10952:10955   */\n      0x00\n        /* \"#utility.yul\":10973:11040   */\n      tag_481\n        /* \"#utility.yul\":11037:11039   */\n      0x0d\n        /* \"#utility.yul\":11032:11035   */\n      dup4\n        /* \"#utility.yul\":10973:11040   */\n      tag_309\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":10966:11040   */\n      swap2\n      pop\n        /* \"#utility.yul\":11049:11142   */\n      tag_482\n        /* \"#utility.yul\":11138:11141   */\n      dup3\n        /* \"#utility.yul\":11049:11142   */\n      tag_343\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11167:11169   */\n      0x20\n        /* \"#utility.yul\":11162:11165   */\n      dup3\n        /* \"#utility.yul\":11158:11170   */\n      add\n        /* \"#utility.yul\":11151:11170   */\n      swap1\n      pop\n        /* \"#utility.yul\":10810:11176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11182:11601   */\n    tag_123:\n        /* \"#utility.yul\":11348:11352   */\n      0x00\n        /* \"#utility.yul\":11386:11388   */\n      0x20\n        /* \"#utility.yul\":11375:11384   */\n      dup3\n        /* \"#utility.yul\":11371:11389   */\n      add\n        /* \"#utility.yul\":11363:11389   */\n      swap1\n      pop\n        /* \"#utility.yul\":11435:11444   */\n      dup2\n        /* \"#utility.yul\":11429:11433   */\n      dup2\n        /* \"#utility.yul\":11425:11445   */\n      sub\n        /* \"#utility.yul\":11421:11422   */\n      0x00\n        /* \"#utility.yul\":11410:11419   */\n      dup4\n        /* \"#utility.yul\":11406:11423   */\n      add\n        /* \"#utility.yul\":11399:11446   */\n      mstore\n        /* \"#utility.yul\":11463:11594   */\n      tag_484\n        /* \"#utility.yul\":11589:11593   */\n      dup2\n        /* \"#utility.yul\":11463:11594   */\n      tag_344\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11455:11594   */\n      swap1\n      pop\n        /* \"#utility.yul\":11182:11601   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11607:11787   */\n    tag_345:\n        /* \"#utility.yul\":11655:11732   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11652:11653   */\n      0x00\n        /* \"#utility.yul\":11645:11733   */\n      mstore\n        /* \"#utility.yul\":11752:11756   */\n      0x12\n        /* \"#utility.yul\":11749:11750   */\n      0x04\n        /* \"#utility.yul\":11742:11757   */\n      mstore\n        /* \"#utility.yul\":11776:11780   */\n      0x24\n        /* \"#utility.yul\":11773:11774   */\n      0x00\n        /* \"#utility.yul\":11766:11781   */\n      revert\n        /* \"#utility.yul\":11793:11973   */\n    tag_346:\n        /* \"#utility.yul\":11841:11918   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11838:11839   */\n      0x00\n        /* \"#utility.yul\":11831:11919   */\n      mstore\n        /* \"#utility.yul\":11938:11942   */\n      0x11\n        /* \"#utility.yul\":11935:11936   */\n      0x04\n        /* \"#utility.yul\":11928:11943   */\n      mstore\n        /* \"#utility.yul\":11962:11966   */\n      0x24\n        /* \"#utility.yul\":11959:11960   */\n      0x00\n        /* \"#utility.yul\":11952:11967   */\n      revert\n        /* \"#utility.yul\":11979:12364   */\n    tag_125:\n        /* \"#utility.yul\":12018:12019   */\n      0x00\n        /* \"#utility.yul\":12035:12054   */\n      tag_488\n        /* \"#utility.yul\":12052:12053   */\n      dup3\n        /* \"#utility.yul\":12035:12054   */\n      tag_339\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12030:12054   */\n      swap2\n      pop\n        /* \"#utility.yul\":12068:12087   */\n      tag_489\n        /* \"#utility.yul\":12085:12086   */\n      dup4\n        /* \"#utility.yul\":12068:12087   */\n      tag_339\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":12063:12087   */\n      swap3\n      pop\n        /* \"#utility.yul\":12106:12107   */\n      dup3\n        /* \"#utility.yul\":12096:12131   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":12111:12129   */\n      tag_491\n      tag_345\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12096:12131   */\n    tag_490:\n        /* \"#utility.yul\":12297:12298   */\n      0x01\n        /* \"#utility.yul\":12294:12295   */\n      0x00\n        /* \"#utility.yul\":12290:12299   */\n      sub\n        /* \"#utility.yul\":12287:12288   */\n      dup4\n        /* \"#utility.yul\":12284:12300   */\n      eq\n        /* \"#utility.yul\":12203:12269   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12200:12201   */\n      dup4\n        /* \"#utility.yul\":12197:12270   */\n      eq\n        /* \"#utility.yul\":12180:12310   */\n      and\n        /* \"#utility.yul\":12177:12333   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":12313:12331   */\n      tag_493\n      tag_346\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12177:12333   */\n    tag_492:\n        /* \"#utility.yul\":12356:12357   */\n      dup3\n        /* \"#utility.yul\":12353:12354   */\n      dup3\n        /* \"#utility.yul\":12348:12358   */\n      sdiv\n        /* \"#utility.yul\":12343:12358   */\n      swap1\n      pop\n        /* \"#utility.yul\":11979:12364   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12370:12780   */\n    tag_143:\n        /* \"#utility.yul\":12410:12417   */\n      0x00\n        /* \"#utility.yul\":12433:12453   */\n      tag_495\n        /* \"#utility.yul\":12451:12452   */\n      dup3\n        /* \"#utility.yul\":12433:12453   */\n      tag_320\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":12428:12453   */\n      swap2\n      pop\n        /* \"#utility.yul\":12467:12487   */\n      tag_496\n        /* \"#utility.yul\":12485:12486   */\n      dup4\n        /* \"#utility.yul\":12467:12487   */\n      tag_320\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":12462:12487   */\n      swap3\n      pop\n        /* \"#utility.yul\":12522:12523   */\n      dup3\n        /* \"#utility.yul\":12519:12520   */\n      dup3\n        /* \"#utility.yul\":12515:12524   */\n      mul\n        /* \"#utility.yul\":12544:12574   */\n      tag_497\n        /* \"#utility.yul\":12562:12573   */\n      dup2\n        /* \"#utility.yul\":12544:12574   */\n      tag_320\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":12533:12574   */\n      swap2\n      pop\n        /* \"#utility.yul\":12723:12724   */\n      dup3\n        /* \"#utility.yul\":12714:12721   */\n      dup3\n        /* \"#utility.yul\":12710:12725   */\n      div\n        /* \"#utility.yul\":12707:12708   */\n      dup5\n        /* \"#utility.yul\":12704:12726   */\n      eq\n        /* \"#utility.yul\":12684:12685   */\n      dup4\n        /* \"#utility.yul\":12677:12686   */\n      iszero\n        /* \"#utility.yul\":12657:12740   */\n      or\n        /* \"#utility.yul\":12634:12773   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":12753:12771   */\n      tag_499\n      tag_346\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":12634:12773   */\n    tag_498:\n        /* \"#utility.yul\":12418:12780   */\n      pop\n        /* \"#utility.yul\":12370:12780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12786:12971   */\n    tag_145:\n        /* \"#utility.yul\":12826:12827   */\n      0x00\n        /* \"#utility.yul\":12843:12863   */\n      tag_501\n        /* \"#utility.yul\":12861:12862   */\n      dup3\n        /* \"#utility.yul\":12843:12863   */\n      tag_320\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":12838:12863   */\n      swap2\n      pop\n        /* \"#utility.yul\":12877:12897   */\n      tag_502\n        /* \"#utility.yul\":12895:12896   */\n      dup4\n        /* \"#utility.yul\":12877:12897   */\n      tag_320\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":12872:12897   */\n      swap3\n      pop\n        /* \"#utility.yul\":12916:12917   */\n      dup3\n        /* \"#utility.yul\":12906:12941   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":12921:12939   */\n      tag_504\n      tag_345\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":12906:12941   */\n    tag_503:\n        /* \"#utility.yul\":12963:12964   */\n      dup3\n        /* \"#utility.yul\":12960:12961   */\n      dup3\n        /* \"#utility.yul\":12956:12965   */\n      div\n        /* \"#utility.yul\":12951:12965   */\n      swap1\n      pop\n        /* \"#utility.yul\":12786:12971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12977:13138   */\n    tag_347:\n        /* \"#utility.yul\":13117:13130   */\n      0x5a45524f20414d4f554e54000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13113:13114   */\n      0x00\n        /* \"#utility.yul\":13105:13111   */\n      dup3\n        /* \"#utility.yul\":13101:13115   */\n      add\n        /* \"#utility.yul\":13094:13131   */\n      mstore\n        /* \"#utility.yul\":12977:13138   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13144:13510   */\n    tag_348:\n        /* \"#utility.yul\":13286:13289   */\n      0x00\n        /* \"#utility.yul\":13307:13374   */\n      tag_507\n        /* \"#utility.yul\":13371:13373   */\n      0x0b\n        /* \"#utility.yul\":13366:13369   */\n      dup4\n        /* \"#utility.yul\":13307:13374   */\n      tag_309\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":13300:13374   */\n      swap2\n      pop\n        /* \"#utility.yul\":13383:13476   */\n      tag_508\n        /* \"#utility.yul\":13472:13475   */\n      dup3\n        /* \"#utility.yul\":13383:13476   */\n      tag_347\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":13501:13503   */\n      0x20\n        /* \"#utility.yul\":13496:13499   */\n      dup3\n        /* \"#utility.yul\":13492:13504   */\n      add\n        /* \"#utility.yul\":13485:13504   */\n      swap1\n      pop\n        /* \"#utility.yul\":13144:13510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13516:13935   */\n    tag_152:\n        /* \"#utility.yul\":13682:13686   */\n      0x00\n        /* \"#utility.yul\":13720:13722   */\n      0x20\n        /* \"#utility.yul\":13709:13718   */\n      dup3\n        /* \"#utility.yul\":13705:13723   */\n      add\n        /* \"#utility.yul\":13697:13723   */\n      swap1\n      pop\n        /* \"#utility.yul\":13769:13778   */\n      dup2\n        /* \"#utility.yul\":13763:13767   */\n      dup2\n        /* \"#utility.yul\":13759:13779   */\n      sub\n        /* \"#utility.yul\":13755:13756   */\n      0x00\n        /* \"#utility.yul\":13744:13753   */\n      dup4\n        /* \"#utility.yul\":13740:13757   */\n      add\n        /* \"#utility.yul\":13733:13780   */\n      mstore\n        /* \"#utility.yul\":13797:13928   */\n      tag_510\n        /* \"#utility.yul\":13923:13927   */\n      dup2\n        /* \"#utility.yul\":13797:13928   */\n      tag_348\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":13789:13928   */\n      swap1\n      pop\n        /* \"#utility.yul\":13516:13935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13941:14135   */\n    tag_158:\n        /* \"#utility.yul\":13981:13985   */\n      0x00\n        /* \"#utility.yul\":14001:14021   */\n      tag_512\n        /* \"#utility.yul\":14019:14020   */\n      dup3\n        /* \"#utility.yul\":14001:14021   */\n      tag_320\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":13996:14021   */\n      swap2\n      pop\n        /* \"#utility.yul\":14035:14055   */\n      tag_513\n        /* \"#utility.yul\":14053:14054   */\n      dup4\n        /* \"#utility.yul\":14035:14055   */\n      tag_320\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":14030:14055   */\n      swap3\n      pop\n        /* \"#utility.yul\":14079:14080   */\n      dup3\n        /* \"#utility.yul\":14076:14077   */\n      dup3\n        /* \"#utility.yul\":14072:14081   */\n      sub\n        /* \"#utility.yul\":14064:14081   */\n      swap1\n      pop\n        /* \"#utility.yul\":14103:14104   */\n      dup2\n        /* \"#utility.yul\":14097:14101   */\n      dup2\n        /* \"#utility.yul\":14094:14105   */\n      gt\n        /* \"#utility.yul\":14091:14128   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":14108:14126   */\n      tag_515\n      tag_346\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":14091:14128   */\n    tag_514:\n        /* \"#utility.yul\":13941:14135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14141:14259   */\n    tag_349:\n        /* \"#utility.yul\":14228:14252   */\n      tag_517\n        /* \"#utility.yul\":14246:14251   */\n      dup2\n        /* \"#utility.yul\":14228:14252   */\n      tag_317\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":14223:14226   */\n      dup3\n        /* \"#utility.yul\":14216:14253   */\n      mstore\n        /* \"#utility.yul\":14141:14259   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14265:14597   */\n    tag_162:\n        /* \"#utility.yul\":14386:14390   */\n      0x00\n        /* \"#utility.yul\":14424:14426   */\n      0x40\n        /* \"#utility.yul\":14413:14422   */\n      dup3\n        /* \"#utility.yul\":14409:14427   */\n      add\n        /* \"#utility.yul\":14401:14427   */\n      swap1\n      pop\n        /* \"#utility.yul\":14437:14508   */\n      tag_519\n        /* \"#utility.yul\":14505:14506   */\n      0x00\n        /* \"#utility.yul\":14494:14503   */\n      dup4\n        /* \"#utility.yul\":14490:14507   */\n      add\n        /* \"#utility.yul\":14481:14487   */\n      dup6\n        /* \"#utility.yul\":14437:14508   */\n      tag_349\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":14518:14590   */\n      tag_520\n        /* \"#utility.yul\":14586:14588   */\n      0x20\n        /* \"#utility.yul\":14575:14584   */\n      dup4\n        /* \"#utility.yul\":14571:14589   */\n      add\n        /* \"#utility.yul\":14562:14568   */\n      dup5\n        /* \"#utility.yul\":14518:14590   */\n      tag_330\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":14265:14597   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14603:14719   */\n    tag_350:\n        /* \"#utility.yul\":14673:14694   */\n      tag_522\n        /* \"#utility.yul\":14688:14693   */\n      dup2\n        /* \"#utility.yul\":14673:14694   */\n      tag_323\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":14666:14671   */\n      dup2\n        /* \"#utility.yul\":14663:14695   */\n      eq\n        /* \"#utility.yul\":14653:14713   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":14709:14710   */\n      0x00\n        /* \"#utility.yul\":14706:14707   */\n      dup1\n        /* \"#utility.yul\":14699:14711   */\n      revert\n        /* \"#utility.yul\":14653:14713   */\n    tag_523:\n        /* \"#utility.yul\":14603:14719   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14725:14862   */\n    tag_351:\n        /* \"#utility.yul\":14779:14784   */\n      0x00\n        /* \"#utility.yul\":14810:14816   */\n      dup2\n        /* \"#utility.yul\":14804:14817   */\n      mload\n        /* \"#utility.yul\":14795:14817   */\n      swap1\n      pop\n        /* \"#utility.yul\":14826:14856   */\n      tag_525\n        /* \"#utility.yul\":14850:14855   */\n      dup2\n        /* \"#utility.yul\":14826:14856   */\n      tag_350\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":14725:14862   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14868:15213   */\n    tag_166:\n        /* \"#utility.yul\":14935:14941   */\n      0x00\n        /* \"#utility.yul\":14984:14986   */\n      0x20\n        /* \"#utility.yul\":14972:14981   */\n      dup3\n        /* \"#utility.yul\":14963:14970   */\n      dup5\n        /* \"#utility.yul\":14959:14982   */\n      sub\n        /* \"#utility.yul\":14955:14987   */\n      slt\n        /* \"#utility.yul\":14952:15071   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":14990:15069   */\n      tag_528\n      tag_314\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14952:15071   */\n    tag_527:\n        /* \"#utility.yul\":15110:15111   */\n      0x00\n        /* \"#utility.yul\":15135:15196   */\n      tag_529\n        /* \"#utility.yul\":15188:15195   */\n      dup5\n        /* \"#utility.yul\":15179:15185   */\n      dup3\n        /* \"#utility.yul\":15168:15177   */\n      dup6\n        /* \"#utility.yul\":15164:15186   */\n      add\n        /* \"#utility.yul\":15135:15196   */\n      tag_351\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":15125:15196   */\n      swap2\n      pop\n        /* \"#utility.yul\":15081:15206   */\n      pop\n        /* \"#utility.yul\":14868:15213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15219:15394   */\n    tag_352:\n        /* \"#utility.yul\":15359:15386   */\n      0x564e5354206d757374206d617463682042544320707269636500000000000000\n        /* \"#utility.yul\":15355:15356   */\n      0x00\n        /* \"#utility.yul\":15347:15353   */\n      dup3\n        /* \"#utility.yul\":15343:15357   */\n      add\n        /* \"#utility.yul\":15336:15387   */\n      mstore\n        /* \"#utility.yul\":15219:15394   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15400:15766   */\n    tag_353:\n        /* \"#utility.yul\":15542:15545   */\n      0x00\n        /* \"#utility.yul\":15563:15630   */\n      tag_532\n        /* \"#utility.yul\":15627:15629   */\n      0x19\n        /* \"#utility.yul\":15622:15625   */\n      dup4\n        /* \"#utility.yul\":15563:15630   */\n      tag_309\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":15556:15630   */\n      swap2\n      pop\n        /* \"#utility.yul\":15639:15732   */\n      tag_533\n        /* \"#utility.yul\":15728:15731   */\n      dup3\n        /* \"#utility.yul\":15639:15732   */\n      tag_352\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15757:15759   */\n      0x20\n        /* \"#utility.yul\":15752:15755   */\n      dup3\n        /* \"#utility.yul\":15748:15760   */\n      add\n        /* \"#utility.yul\":15741:15760   */\n      swap1\n      pop\n        /* \"#utility.yul\":15400:15766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15772:16191   */\n    tag_176:\n        /* \"#utility.yul\":15938:15942   */\n      0x00\n        /* \"#utility.yul\":15976:15978   */\n      0x20\n        /* \"#utility.yul\":15965:15974   */\n      dup3\n        /* \"#utility.yul\":15961:15979   */\n      add\n        /* \"#utility.yul\":15953:15979   */\n      swap1\n      pop\n        /* \"#utility.yul\":16025:16034   */\n      dup2\n        /* \"#utility.yul\":16019:16023   */\n      dup2\n        /* \"#utility.yul\":16015:16035   */\n      sub\n        /* \"#utility.yul\":16011:16012   */\n      0x00\n        /* \"#utility.yul\":16000:16009   */\n      dup4\n        /* \"#utility.yul\":15996:16013   */\n      add\n        /* \"#utility.yul\":15989:16036   */\n      mstore\n        /* \"#utility.yul\":16053:16184   */\n      tag_535\n        /* \"#utility.yul\":16179:16183   */\n      dup2\n        /* \"#utility.yul\":16053:16184   */\n      tag_353\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":16045:16184   */\n      swap1\n      pop\n        /* \"#utility.yul\":15772:16191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16197:16639   */\n    tag_178:\n        /* \"#utility.yul\":16346:16350   */\n      0x00\n        /* \"#utility.yul\":16384:16386   */\n      0x60\n        /* \"#utility.yul\":16373:16382   */\n      dup3\n        /* \"#utility.yul\":16369:16387   */\n      add\n        /* \"#utility.yul\":16361:16387   */\n      swap1\n      pop\n        /* \"#utility.yul\":16397:16468   */\n      tag_537\n        /* \"#utility.yul\":16465:16466   */\n      0x00\n        /* \"#utility.yul\":16454:16463   */\n      dup4\n        /* \"#utility.yul\":16450:16467   */\n      add\n        /* \"#utility.yul\":16441:16447   */\n      dup7\n        /* \"#utility.yul\":16397:16468   */\n      tag_349\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":16478:16550   */\n      tag_538\n        /* \"#utility.yul\":16546:16548   */\n      0x20\n        /* \"#utility.yul\":16535:16544   */\n      dup4\n        /* \"#utility.yul\":16531:16549   */\n      add\n        /* \"#utility.yul\":16522:16528   */\n      dup6\n        /* \"#utility.yul\":16478:16550   */\n      tag_349\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":16560:16632   */\n      tag_539\n        /* \"#utility.yul\":16628:16630   */\n      0x40\n        /* \"#utility.yul\":16617:16626   */\n      dup4\n        /* \"#utility.yul\":16613:16631   */\n      add\n        /* \"#utility.yul\":16604:16610   */\n      dup5\n        /* \"#utility.yul\":16560:16632   */\n      tag_330\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":16197:16639   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16645:16806   */\n    tag_354:\n        /* \"#utility.yul\":16785:16798   */\n      0x5a45524f5f534841524553000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16781:16782   */\n      0x00\n        /* \"#utility.yul\":16773:16779   */\n      dup3\n        /* \"#utility.yul\":16769:16783   */\n      add\n        /* \"#utility.yul\":16762:16799   */\n      mstore\n        /* \"#utility.yul\":16645:16806   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16812:17178   */\n    tag_355:\n        /* \"#utility.yul\":16954:16957   */\n      0x00\n        /* \"#utility.yul\":16975:17042   */\n      tag_542\n        /* \"#utility.yul\":17039:17041   */\n      0x0b\n        /* \"#utility.yul\":17034:17037   */\n      dup4\n        /* \"#utility.yul\":16975:17042   */\n      tag_309\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":16968:17042   */\n      swap2\n      pop\n        /* \"#utility.yul\":17051:17144   */\n      tag_543\n        /* \"#utility.yul\":17140:17143   */\n      dup3\n        /* \"#utility.yul\":17051:17144   */\n      tag_354\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":17169:17171   */\n      0x20\n        /* \"#utility.yul\":17164:17167   */\n      dup3\n        /* \"#utility.yul\":17160:17172   */\n      add\n        /* \"#utility.yul\":17153:17172   */\n      swap1\n      pop\n        /* \"#utility.yul\":16812:17178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17184:17603   */\n    tag_202:\n        /* \"#utility.yul\":17350:17354   */\n      0x00\n        /* \"#utility.yul\":17388:17390   */\n      0x20\n        /* \"#utility.yul\":17377:17386   */\n      dup3\n        /* \"#utility.yul\":17373:17391   */\n      add\n        /* \"#utility.yul\":17365:17391   */\n      swap1\n      pop\n        /* \"#utility.yul\":17437:17446   */\n      dup2\n        /* \"#utility.yul\":17431:17435   */\n      dup2\n        /* \"#utility.yul\":17427:17447   */\n      sub\n        /* \"#utility.yul\":17423:17424   */\n      0x00\n        /* \"#utility.yul\":17412:17421   */\n      dup4\n        /* \"#utility.yul\":17408:17425   */\n      add\n        /* \"#utility.yul\":17401:17448   */\n      mstore\n        /* \"#utility.yul\":17465:17596   */\n      tag_545\n        /* \"#utility.yul\":17591:17595   */\n      dup2\n        /* \"#utility.yul\":17465:17596   */\n      tag_355\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":17457:17596   */\n      swap1\n      pop\n        /* \"#utility.yul\":17184:17603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17609:17800   */\n    tag_208:\n        /* \"#utility.yul\":17649:17652   */\n      0x00\n        /* \"#utility.yul\":17668:17688   */\n      tag_547\n        /* \"#utility.yul\":17686:17687   */\n      dup3\n        /* \"#utility.yul\":17668:17688   */\n      tag_320\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":17663:17688   */\n      swap2\n      pop\n        /* \"#utility.yul\":17702:17722   */\n      tag_548\n        /* \"#utility.yul\":17720:17721   */\n      dup4\n        /* \"#utility.yul\":17702:17722   */\n      tag_320\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":17697:17722   */\n      swap3\n      pop\n        /* \"#utility.yul\":17745:17746   */\n      dup3\n        /* \"#utility.yul\":17742:17743   */\n      dup3\n        /* \"#utility.yul\":17738:17747   */\n      add\n        /* \"#utility.yul\":17731:17747   */\n      swap1\n      pop\n        /* \"#utility.yul\":17766:17769   */\n      dup1\n        /* \"#utility.yul\":17763:17764   */\n      dup3\n        /* \"#utility.yul\":17760:17770   */\n      gt\n        /* \"#utility.yul\":17757:17793   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":17773:17791   */\n      tag_550\n      tag_346\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":17757:17793   */\n    tag_549:\n        /* \"#utility.yul\":17609:17800   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17806:17968   */\n    tag_356:\n        /* \"#utility.yul\":17946:17960   */\n      0x5a45524f20414444524553530000000000000000000000000000000000000000\n        /* \"#utility.yul\":17942:17943   */\n      0x00\n        /* \"#utility.yul\":17934:17940   */\n      dup3\n        /* \"#utility.yul\":17930:17944   */\n      add\n        /* \"#utility.yul\":17923:17961   */\n      mstore\n        /* \"#utility.yul\":17806:17968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17974:18340   */\n    tag_357:\n        /* \"#utility.yul\":18116:18119   */\n      0x00\n        /* \"#utility.yul\":18137:18204   */\n      tag_553\n        /* \"#utility.yul\":18201:18203   */\n      0x0c\n        /* \"#utility.yul\":18196:18199   */\n      dup4\n        /* \"#utility.yul\":18137:18204   */\n      tag_309\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":18130:18204   */\n      swap2\n      pop\n        /* \"#utility.yul\":18213:18306   */\n      tag_554\n        /* \"#utility.yul\":18302:18305   */\n      dup3\n        /* \"#utility.yul\":18213:18306   */\n      tag_356\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":18331:18333   */\n      0x20\n        /* \"#utility.yul\":18326:18329   */\n      dup3\n        /* \"#utility.yul\":18322:18334   */\n      add\n        /* \"#utility.yul\":18315:18334   */\n      swap1\n      pop\n        /* \"#utility.yul\":17974:18340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18346:18765   */\n    tag_216:\n        /* \"#utility.yul\":18512:18516   */\n      0x00\n        /* \"#utility.yul\":18550:18552   */\n      0x20\n        /* \"#utility.yul\":18539:18548   */\n      dup3\n        /* \"#utility.yul\":18535:18553   */\n      add\n        /* \"#utility.yul\":18527:18553   */\n      swap1\n      pop\n        /* \"#utility.yul\":18599:18608   */\n      dup2\n        /* \"#utility.yul\":18593:18597   */\n      dup2\n        /* \"#utility.yul\":18589:18609   */\n      sub\n        /* \"#utility.yul\":18585:18586   */\n      0x00\n        /* \"#utility.yul\":18574:18583   */\n      dup4\n        /* \"#utility.yul\":18570:18587   */\n      add\n        /* \"#utility.yul\":18563:18610   */\n      mstore\n        /* \"#utility.yul\":18627:18758   */\n      tag_556\n        /* \"#utility.yul\":18753:18757   */\n      dup2\n        /* \"#utility.yul\":18627:18758   */\n      tag_357\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":18619:18758   */\n      swap1\n      pop\n        /* \"#utility.yul\":18346:18765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18771:19213   */\n    tag_259:\n        /* \"#utility.yul\":18920:18924   */\n      0x00\n        /* \"#utility.yul\":18958:18960   */\n      0x60\n        /* \"#utility.yul\":18947:18956   */\n      dup3\n        /* \"#utility.yul\":18943:18961   */\n      add\n        /* \"#utility.yul\":18935:18961   */\n      swap1\n      pop\n        /* \"#utility.yul\":18971:19042   */\n      tag_558\n        /* \"#utility.yul\":19039:19040   */\n      0x00\n        /* \"#utility.yul\":19028:19037   */\n      dup4\n        /* \"#utility.yul\":19024:19041   */\n      add\n        /* \"#utility.yul\":19015:19021   */\n      dup7\n        /* \"#utility.yul\":18971:19042   */\n      tag_349\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":19052:19124   */\n      tag_559\n        /* \"#utility.yul\":19120:19122   */\n      0x20\n        /* \"#utility.yul\":19109:19118   */\n      dup4\n        /* \"#utility.yul\":19105:19123   */\n      add\n        /* \"#utility.yul\":19096:19102   */\n      dup6\n        /* \"#utility.yul\":19052:19124   */\n      tag_330\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":19134:19206   */\n      tag_560\n        /* \"#utility.yul\":19202:19204   */\n      0x40\n        /* \"#utility.yul\":19191:19200   */\n      dup4\n        /* \"#utility.yul\":19187:19205   */\n      add\n        /* \"#utility.yul\":19178:19184   */\n      dup5\n        /* \"#utility.yul\":19134:19206   */\n      tag_330\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":18771:19213   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19219:19441   */\n    tag_264:\n        /* \"#utility.yul\":19312:19316   */\n      0x00\n        /* \"#utility.yul\":19350:19352   */\n      0x20\n        /* \"#utility.yul\":19339:19348   */\n      dup3\n        /* \"#utility.yul\":19335:19353   */\n      add\n        /* \"#utility.yul\":19327:19353   */\n      swap1\n      pop\n        /* \"#utility.yul\":19363:19434   */\n      tag_562\n        /* \"#utility.yul\":19431:19432   */\n      0x00\n        /* \"#utility.yul\":19420:19429   */\n      dup4\n        /* \"#utility.yul\":19416:19433   */\n      add\n        /* \"#utility.yul\":19407:19413   */\n      dup5\n        /* \"#utility.yul\":19363:19434   */\n      tag_349\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":19219:19441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122001ba2baeb0ac6f3c71d1f741cf1a475e8bbe155b7359e076be4b164fb7b784e664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_893": {
									"entryPoint": null,
									"id": 893,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6738:7",
										"nodeType": "YulBlock",
										"src": "0:6738:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "956:552:7",
													"nodeType": "YulBlock",
													"src": "956:552:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:7",
																"nodeType": "YulBlock",
																"src": "1002:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:7"
																			},
																			"nativeSrc": "1004:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:7"
																		},
																		"nativeSrc": "1004:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:7"
																		},
																		"nativeSrc": "973:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:7",
																		"nodeType": "YulLiteral",
																		"src": "998:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:7"
																},
																"nativeSrc": "969:32:7",
																"nodeType": "YulFunctionCall",
																"src": "969:32:7"
															},
															"nativeSrc": "966:119:7",
															"nodeType": "YulIf",
															"src": "966:119:7"
														},
														{
															"nativeSrc": "1095:128:7",
															"nodeType": "YulBlock",
															"src": "1095:128:7",
															"statements": [
																{
																	"nativeSrc": "1110:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:7"
																				},
																				"nativeSrc": "1181:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:7"
																		},
																		"nativeSrc": "1149:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:7",
															"nodeType": "YulBlock",
															"src": "1233:129:7",
															"statements": [
																{
																	"nativeSrc": "1248:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:7"
																				},
																				"nativeSrc": "1320:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:7"
																		},
																		"nativeSrc": "1288:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:7",
															"nodeType": "YulBlock",
															"src": "1372:129:7",
															"statements": [
																{
																	"nativeSrc": "1387:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:7"
																				},
																				"nativeSrc": "1459:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:7"
																		},
																		"nativeSrc": "1427:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:7",
														"nodeType": "YulTypedName",
														"src": "910:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:7",
														"nodeType": "YulTypedName",
														"src": "921:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:7",
														"nodeType": "YulTypedName",
														"src": "933:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:7",
														"nodeType": "YulTypedName",
														"src": "941:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:7",
														"nodeType": "YulTypedName",
														"src": "949:6:7",
														"type": ""
													}
												],
												"src": "845:663:7"
											},
											{
												"body": {
													"nativeSrc": "1573:40:7",
													"nodeType": "YulBlock",
													"src": "1573:40:7",
													"statements": [
														{
															"nativeSrc": "1584:22:7",
															"nodeType": "YulAssignment",
															"src": "1584:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1600:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1600:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1594:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1594:5:7"
																},
																"nativeSrc": "1594:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1594:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1584:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1514:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1556:5:7",
														"nodeType": "YulTypedName",
														"src": "1556:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1566:6:7",
														"nodeType": "YulTypedName",
														"src": "1566:6:7",
														"type": ""
													}
												],
												"src": "1514:99:7"
											},
											{
												"body": {
													"nativeSrc": "1647:152:7",
													"nodeType": "YulBlock",
													"src": "1647:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1667:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1657:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:7"
																},
																"nativeSrc": "1657:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1657:88:7"
															},
															"nativeSrc": "1657:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1657:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1761:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1761:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1764:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1754:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:7"
																},
																"nativeSrc": "1754:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1754:15:7"
															},
															"nativeSrc": "1754:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1754:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1785:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1785:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1788:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1788:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1778:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1778:6:7"
																},
																"nativeSrc": "1778:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1778:15:7"
															},
															"nativeSrc": "1778:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1778:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1619:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1619:180:7"
											},
											{
												"body": {
													"nativeSrc": "1833:152:7",
													"nodeType": "YulBlock",
													"src": "1833:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1850:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1850:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1853:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1853:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1843:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:7"
																},
																"nativeSrc": "1843:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1843:88:7"
															},
															"nativeSrc": "1843:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1843:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1947:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1947:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1950:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1950:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1940:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1940:6:7"
																},
																"nativeSrc": "1940:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1940:15:7"
															},
															"nativeSrc": "1940:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1940:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1971:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1971:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1974:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1964:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:7"
																},
																"nativeSrc": "1964:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1964:15:7"
															},
															"nativeSrc": "1964:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1964:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1805:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1805:180:7"
											},
											{
												"body": {
													"nativeSrc": "2042:269:7",
													"nodeType": "YulBlock",
													"src": "2042:269:7",
													"statements": [
														{
															"nativeSrc": "2052:22:7",
															"nodeType": "YulAssignment",
															"src": "2052:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2066:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2066:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2072:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2072:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2062:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:7"
																},
																"nativeSrc": "2062:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2062:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2052:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:7"
																}
															]
														},
														{
															"nativeSrc": "2083:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2083:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2113:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2113:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2119:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2119:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2109:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2109:3:7"
																},
																"nativeSrc": "2109:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2109:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2087:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2087:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2160:51:7",
																"nodeType": "YulBlock",
																"src": "2160:51:7",
																"statements": [
																	{
																		"nativeSrc": "2174:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2174:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2188:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2188:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2196:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2196:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2184:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2184:3:7"
																			},
																			"nativeSrc": "2184:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2184:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2174:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2174:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2140:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2140:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2133:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:7"
																},
																"nativeSrc": "2133:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2133:26:7"
															},
															"nativeSrc": "2130:81:7",
															"nodeType": "YulIf",
															"src": "2130:81:7"
														},
														{
															"body": {
																"nativeSrc": "2263:42:7",
																"nodeType": "YulBlock",
																"src": "2263:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2277:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2277:16:7"
																			},
																			"nativeSrc": "2277:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:18:7"
																		},
																		"nativeSrc": "2277:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2277:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2227:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2227:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2250:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2250:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2258:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2258:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2247:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2247:2:7"
																		},
																		"nativeSrc": "2247:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2247:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2224:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2224:2:7"
																},
																"nativeSrc": "2224:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2224:38:7"
															},
															"nativeSrc": "2221:84:7",
															"nodeType": "YulIf",
															"src": "2221:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1991:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2026:4:7",
														"nodeType": "YulTypedName",
														"src": "2026:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2035:6:7",
														"nodeType": "YulTypedName",
														"src": "2035:6:7",
														"type": ""
													}
												],
												"src": "1991:320:7"
											},
											{
												"body": {
													"nativeSrc": "2371:87:7",
													"nodeType": "YulBlock",
													"src": "2371:87:7",
													"statements": [
														{
															"nativeSrc": "2381:11:7",
															"nodeType": "YulAssignment",
															"src": "2381:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2389:3:7",
																"nodeType": "YulIdentifier",
																"src": "2389:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2381:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2381:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2409:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2409:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2412:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2412:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2402:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:7"
																},
																"nativeSrc": "2402:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2402:14:7"
															},
															"nativeSrc": "2402:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2402:14:7"
														},
														{
															"nativeSrc": "2425:26:7",
															"nodeType": "YulAssignment",
															"src": "2425:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2443:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2443:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2446:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2446:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2433:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2433:9:7"
																},
																"nativeSrc": "2433:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2433:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2425:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2425:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2317:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2358:3:7",
														"nodeType": "YulTypedName",
														"src": "2358:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2366:4:7",
														"nodeType": "YulTypedName",
														"src": "2366:4:7",
														"type": ""
													}
												],
												"src": "2317:141:7"
											},
											{
												"body": {
													"nativeSrc": "2508:49:7",
													"nodeType": "YulBlock",
													"src": "2508:49:7",
													"statements": [
														{
															"nativeSrc": "2518:33:7",
															"nodeType": "YulAssignment",
															"src": "2518:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2536:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2543:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2543:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2548:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2548:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2518:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2464:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2491:5:7",
														"nodeType": "YulTypedName",
														"src": "2491:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2501:6:7",
														"nodeType": "YulTypedName",
														"src": "2501:6:7",
														"type": ""
													}
												],
												"src": "2464:93:7"
											},
											{
												"body": {
													"nativeSrc": "2616:54:7",
													"nodeType": "YulBlock",
													"src": "2616:54:7",
													"statements": [
														{
															"nativeSrc": "2626:37:7",
															"nodeType": "YulAssignment",
															"src": "2626:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2651:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2651:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2657:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2657:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2647:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2647:3:7"
																},
																"nativeSrc": "2647:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2647:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2626:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2626:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2563:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2591:4:7",
														"nodeType": "YulTypedName",
														"src": "2591:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2597:5:7",
														"nodeType": "YulTypedName",
														"src": "2597:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2607:8:7",
														"nodeType": "YulTypedName",
														"src": "2607:8:7",
														"type": ""
													}
												],
												"src": "2563:107:7"
											},
											{
												"body": {
													"nativeSrc": "2752:317:7",
													"nodeType": "YulBlock",
													"src": "2752:317:7",
													"statements": [
														{
															"nativeSrc": "2762:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2762:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2783:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2795:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2795:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2779:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2779:3:7"
																},
																"nativeSrc": "2779:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2779:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2766:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2766:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2806:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2806:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2837:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2848:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2848:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2818:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2818:18:7"
																},
																"nativeSrc": "2818:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2818:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2810:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2810:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2924:51:7",
															"nodeType": "YulAssignment",
															"src": "2924:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2955:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2955:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2966:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2966:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2936:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2936:18:7"
																},
																"nativeSrc": "2936:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2936:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2924:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2924:8:7"
																}
															]
														},
														{
															"nativeSrc": "2984:30:7",
															"nodeType": "YulAssignment",
															"src": "2984:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2997:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2997:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3008:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3008:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3004:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:7"
																		},
																		"nativeSrc": "3004:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2993:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:7"
																},
																"nativeSrc": "2993:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2993:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2984:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2984:5:7"
																}
															]
														},
														{
															"nativeSrc": "3023:40:7",
															"nodeType": "YulAssignment",
															"src": "3023:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3036:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3036:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3047:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "3047:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3057:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3057:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3043:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3043:3:7"
																		},
																		"nativeSrc": "3043:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3043:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3033:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3033:2:7"
																},
																"nativeSrc": "3033:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3033:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3023:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2676:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2713:5:7",
														"nodeType": "YulTypedName",
														"src": "2713:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2720:10:7",
														"nodeType": "YulTypedName",
														"src": "2720:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2732:8:7",
														"nodeType": "YulTypedName",
														"src": "2732:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2745:6:7",
														"nodeType": "YulTypedName",
														"src": "2745:6:7",
														"type": ""
													}
												],
												"src": "2676:393:7"
											},
											{
												"body": {
													"nativeSrc": "3120:32:7",
													"nodeType": "YulBlock",
													"src": "3120:32:7",
													"statements": [
														{
															"nativeSrc": "3130:16:7",
															"nodeType": "YulAssignment",
															"src": "3130:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "3141:5:7",
																"nodeType": "YulIdentifier",
																"src": "3141:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3130:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3130:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3075:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3102:5:7",
														"nodeType": "YulTypedName",
														"src": "3102:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3112:7:7",
														"nodeType": "YulTypedName",
														"src": "3112:7:7",
														"type": ""
													}
												],
												"src": "3075:77:7"
											},
											{
												"body": {
													"nativeSrc": "3190:28:7",
													"nodeType": "YulBlock",
													"src": "3190:28:7",
													"statements": [
														{
															"nativeSrc": "3200:12:7",
															"nodeType": "YulAssignment",
															"src": "3200:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3207:5:7",
																"nodeType": "YulIdentifier",
																"src": "3207:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3200:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3158:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3176:5:7",
														"nodeType": "YulTypedName",
														"src": "3176:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3186:3:7",
														"nodeType": "YulTypedName",
														"src": "3186:3:7",
														"type": ""
													}
												],
												"src": "3158:60:7"
											},
											{
												"body": {
													"nativeSrc": "3284:82:7",
													"nodeType": "YulBlock",
													"src": "3284:82:7",
													"statements": [
														{
															"nativeSrc": "3294:66:7",
															"nodeType": "YulAssignment",
															"src": "3294:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3352:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3352:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3334:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3334:17:7"
																				},
																				"nativeSrc": "3334:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3334:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3325:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3325:8:7"
																		},
																		"nativeSrc": "3325:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3325:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3307:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3307:17:7"
																},
																"nativeSrc": "3307:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3307:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3294:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3294:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3224:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3264:5:7",
														"nodeType": "YulTypedName",
														"src": "3264:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3274:9:7",
														"nodeType": "YulTypedName",
														"src": "3274:9:7",
														"type": ""
													}
												],
												"src": "3224:142:7"
											},
											{
												"body": {
													"nativeSrc": "3419:28:7",
													"nodeType": "YulBlock",
													"src": "3419:28:7",
													"statements": [
														{
															"nativeSrc": "3429:12:7",
															"nodeType": "YulAssignment",
															"src": "3429:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3436:5:7",
																"nodeType": "YulIdentifier",
																"src": "3436:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3429:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3429:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3372:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3405:5:7",
														"nodeType": "YulTypedName",
														"src": "3405:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3415:3:7",
														"nodeType": "YulTypedName",
														"src": "3415:3:7",
														"type": ""
													}
												],
												"src": "3372:75:7"
											},
											{
												"body": {
													"nativeSrc": "3529:193:7",
													"nodeType": "YulBlock",
													"src": "3529:193:7",
													"statements": [
														{
															"nativeSrc": "3539:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3539:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3594:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3594:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3563:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3563:30:7"
																},
																"nativeSrc": "3563:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3563:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3543:16:7",
																	"nodeType": "YulTypedName",
																	"src": "3543:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3618:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3618:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3658:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3658:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3652:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3652:5:7"
																				},
																				"nativeSrc": "3652:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3652:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3665:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3665:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3697:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3697:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3673:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3673:23:7"
																				},
																				"nativeSrc": "3673:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3673:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3624:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3624:27:7"
																		},
																		"nativeSrc": "3624:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3624:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3611:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3611:6:7"
																},
																"nativeSrc": "3611:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3611:105:7"
															},
															"nativeSrc": "3611:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3611:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3453:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3506:4:7",
														"nodeType": "YulTypedName",
														"src": "3506:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3512:6:7",
														"nodeType": "YulTypedName",
														"src": "3512:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3520:7:7",
														"nodeType": "YulTypedName",
														"src": "3520:7:7",
														"type": ""
													}
												],
												"src": "3453:269:7"
											},
											{
												"body": {
													"nativeSrc": "3777:24:7",
													"nodeType": "YulBlock",
													"src": "3777:24:7",
													"statements": [
														{
															"nativeSrc": "3787:8:7",
															"nodeType": "YulAssignment",
															"src": "3787:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3794:1:7",
																"nodeType": "YulLiteral",
																"src": "3794:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3787:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3728:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3773:3:7",
														"nodeType": "YulTypedName",
														"src": "3773:3:7",
														"type": ""
													}
												],
												"src": "3728:73:7"
											},
											{
												"body": {
													"nativeSrc": "3860:136:7",
													"nodeType": "YulBlock",
													"src": "3860:136:7",
													"statements": [
														{
															"nativeSrc": "3870:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3870:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3884:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3884:30:7"
																},
																"nativeSrc": "3884:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3884:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3874:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3874:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3969:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3969:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3975:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3975:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3983:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3925:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3925:43:7"
																},
																"nativeSrc": "3925:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3925:65:7"
															},
															"nativeSrc": "3925:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3925:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3807:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3846:4:7",
														"nodeType": "YulTypedName",
														"src": "3846:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3852:6:7",
														"nodeType": "YulTypedName",
														"src": "3852:6:7",
														"type": ""
													}
												],
												"src": "3807:189:7"
											},
											{
												"body": {
													"nativeSrc": "4052:136:7",
													"nodeType": "YulBlock",
													"src": "4052:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4119:63:7",
																"nodeType": "YulBlock",
																"src": "4119:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4163:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4163:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4170:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4170:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4133:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "4133:29:7"
																			},
																			"nativeSrc": "4133:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4133:39:7"
																		},
																		"nativeSrc": "4133:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4133:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4072:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4072:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4079:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4079:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4069:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4069:2:7"
																},
																"nativeSrc": "4069:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4069:14:7"
															},
															"nativeSrc": "4062:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4084:26:7",
																"nodeType": "YulBlock",
																"src": "4084:26:7",
																"statements": [
																	{
																		"nativeSrc": "4086:22:7",
																		"nodeType": "YulAssignment",
																		"src": "4086:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4099:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4099:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4106:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4106:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4095:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4095:3:7"
																			},
																			"nativeSrc": "4095:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4095:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4086:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4086:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4066:2:7",
																"nodeType": "YulBlock",
																"src": "4066:2:7",
																"statements": []
															},
															"src": "4062:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4002:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4040:5:7",
														"nodeType": "YulTypedName",
														"src": "4040:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4047:3:7",
														"nodeType": "YulTypedName",
														"src": "4047:3:7",
														"type": ""
													}
												],
												"src": "4002:186:7"
											},
											{
												"body": {
													"nativeSrc": "4273:464:7",
													"nodeType": "YulBlock",
													"src": "4273:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4299:431:7",
																"nodeType": "YulBlock",
																"src": "4299:431:7",
																"statements": [
																	{
																		"nativeSrc": "4313:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4313:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4361:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4361:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4329:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "4329:31:7"
																			},
																			"nativeSrc": "4329:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4329:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4317:8:7",
																				"nodeType": "YulTypedName",
																				"src": "4317:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4380:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4380:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4403:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4403:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4431:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4431:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4413:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4413:17:7"
																					},
																					"nativeSrc": "4413:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4413:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4399:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4399:3:7"
																			},
																			"nativeSrc": "4399:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4399:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4384:11:7",
																				"nodeType": "YulTypedName",
																				"src": "4384:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4600:27:7",
																			"nodeType": "YulBlock",
																			"src": "4600:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4602:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4602:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4617:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4617:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4602:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4602:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4584:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4584:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4596:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4596:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4581:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4581:2:7"
																			},
																			"nativeSrc": "4581:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4581:18:7"
																		},
																		"nativeSrc": "4578:49:7",
																		"nodeType": "YulIf",
																		"src": "4578:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4669:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4669:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4686:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4686:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4714:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4714:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4696:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4696:17:7"
																							},
																							"nativeSrc": "4696:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4696:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4682:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4682:3:7"
																					},
																					"nativeSrc": "4682:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4682:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4640:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4640:28:7"
																			},
																			"nativeSrc": "4640:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4640:80:7"
																		},
																		"nativeSrc": "4640:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4640:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4290:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4290:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4295:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4295:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4287:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4287:2:7"
																},
																"nativeSrc": "4287:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4287:11:7"
															},
															"nativeSrc": "4284:446:7",
															"nodeType": "YulIf",
															"src": "4284:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4194:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4249:5:7",
														"nodeType": "YulTypedName",
														"src": "4249:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4256:3:7",
														"nodeType": "YulTypedName",
														"src": "4256:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4261:10:7",
														"nodeType": "YulTypedName",
														"src": "4261:10:7",
														"type": ""
													}
												],
												"src": "4194:543:7"
											},
											{
												"body": {
													"nativeSrc": "4806:54:7",
													"nodeType": "YulBlock",
													"src": "4806:54:7",
													"statements": [
														{
															"nativeSrc": "4816:37:7",
															"nodeType": "YulAssignment",
															"src": "4816:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4841:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4841:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4847:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4847:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4837:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4837:3:7"
																},
																"nativeSrc": "4837:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4837:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4816:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4816:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4743:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4781:4:7",
														"nodeType": "YulTypedName",
														"src": "4781:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4787:5:7",
														"nodeType": "YulTypedName",
														"src": "4787:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4797:8:7",
														"nodeType": "YulTypedName",
														"src": "4797:8:7",
														"type": ""
													}
												],
												"src": "4743:117:7"
											},
											{
												"body": {
													"nativeSrc": "4917:118:7",
													"nodeType": "YulBlock",
													"src": "4917:118:7",
													"statements": [
														{
															"nativeSrc": "4927:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4927:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4976:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4976:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4979:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4979:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4972:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4972:3:7"
																				},
																				"nativeSrc": "4972:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4972:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4991:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4991:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4987:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4987:3:7"
																				},
																				"nativeSrc": "4987:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4987:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4943:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4943:28:7"
																		},
																		"nativeSrc": "4943:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4943:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4939:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:7"
																},
																"nativeSrc": "4939:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4939:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4931:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4931:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5004:25:7",
															"nodeType": "YulAssignment",
															"src": "5004:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5018:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5018:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5024:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5024:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5014:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5014:3:7"
																},
																"nativeSrc": "5014:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5014:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5004:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4866:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4894:4:7",
														"nodeType": "YulTypedName",
														"src": "4894:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4900:5:7",
														"nodeType": "YulTypedName",
														"src": "4900:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4910:6:7",
														"nodeType": "YulTypedName",
														"src": "4910:6:7",
														"type": ""
													}
												],
												"src": "4866:169:7"
											},
											{
												"body": {
													"nativeSrc": "5121:214:7",
													"nodeType": "YulBlock",
													"src": "5121:214:7",
													"statements": [
														{
															"nativeSrc": "5254:37:7",
															"nodeType": "YulAssignment",
															"src": "5254:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5281:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5281:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5287:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5287:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5262:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5262:18:7"
																},
																"nativeSrc": "5262:29:7",
																"nodeType": "YulFunctionCall",
																"src": "5262:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5254:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5254:4:7"
																}
															]
														},
														{
															"nativeSrc": "5300:29:7",
															"nodeType": "YulAssignment",
															"src": "5300:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5311:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5311:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5321:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5321:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5324:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5324:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5317:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5317:3:7"
																		},
																		"nativeSrc": "5317:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5317:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5308:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5308:2:7"
																},
																"nativeSrc": "5308:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5308:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5300:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5300:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5040:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5102:4:7",
														"nodeType": "YulTypedName",
														"src": "5102:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5108:3:7",
														"nodeType": "YulTypedName",
														"src": "5108:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5116:4:7",
														"nodeType": "YulTypedName",
														"src": "5116:4:7",
														"type": ""
													}
												],
												"src": "5040:295:7"
											},
											{
												"body": {
													"nativeSrc": "5432:1303:7",
													"nodeType": "YulBlock",
													"src": "5432:1303:7",
													"statements": [
														{
															"nativeSrc": "5443:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5443:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5490:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5490:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5457:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5457:32:7"
																},
																"nativeSrc": "5457:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5457:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5447:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5447:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5579:22:7",
																"nodeType": "YulBlock",
																"src": "5579:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5581:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5581:16:7"
																			},
																			"nativeSrc": "5581:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5581:18:7"
																		},
																		"nativeSrc": "5581:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5581:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5551:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5551:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5559:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5559:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5548:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5548:2:7"
																},
																"nativeSrc": "5548:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5548:30:7"
															},
															"nativeSrc": "5545:56:7",
															"nodeType": "YulIf",
															"src": "5545:56:7"
														},
														{
															"nativeSrc": "5611:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5611:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5657:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5657:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5651:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5651:5:7"
																		},
																		"nativeSrc": "5651:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5651:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5625:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5625:25:7"
																},
																"nativeSrc": "5625:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5625:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5615:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5615:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5756:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5756:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5762:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5762:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5770:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5710:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5710:45:7"
																},
																"nativeSrc": "5710:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5710:67:7"
															},
															"nativeSrc": "5710:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5710:67:7"
														},
														{
															"nativeSrc": "5787:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5787:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5804:1:7",
																"nodeType": "YulLiteral",
																"src": "5804:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5791:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5791:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5815:17:7",
															"nodeType": "YulAssignment",
															"src": "5815:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5828:4:7",
																"nodeType": "YulLiteral",
																"src": "5828:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5815:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5815:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5879:611:7",
																		"nodeType": "YulBlock",
																		"src": "5879:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5893:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5893:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5912:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5912:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5924:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5924:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5920:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5920:3:7"
																							},
																							"nativeSrc": "5920:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5920:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5908:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5908:3:7"
																					},
																					"nativeSrc": "5908:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5908:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5897:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5897:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5944:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5944:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5990:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5990:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5958:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5958:31:7"
																					},
																					"nativeSrc": "5958:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5958:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5948:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5948:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6008:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6008:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6017:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6017:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6012:1:7",
																						"nodeType": "YulTypedName",
																						"src": "6012:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6076:163:7",
																					"nodeType": "YulBlock",
																					"src": "6076:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6101:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6101:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6119:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "6119:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6124:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "6124:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6115:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6115:3:7"
																												},
																												"nativeSrc": "6115:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6115:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6109:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "6109:5:7"
																										},
																										"nativeSrc": "6109:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6109:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6094:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6094:6:7"
																								},
																								"nativeSrc": "6094:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6094:42:7"
																							},
																							"nativeSrc": "6094:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6094:42:7"
																						},
																						{
																							"nativeSrc": "6153:24:7",
																							"nodeType": "YulAssignment",
																							"src": "6153:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6167:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6167:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6175:1:7",
																										"nodeType": "YulLiteral",
																										"src": "6175:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6163:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6163:3:7"
																								},
																								"nativeSrc": "6163:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6163:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6153:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6153:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6194:31:7",
																							"nodeType": "YulAssignment",
																							"src": "6194:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6211:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "6211:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6222:2:7",
																										"nodeType": "YulLiteral",
																										"src": "6222:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6207:3:7"
																								},
																								"nativeSrc": "6207:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6207:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6194:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "6194:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6042:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "6042:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6045:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6045:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6039:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6039:2:7"
																					},
																					"nativeSrc": "6039:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6039:14:7"
																				},
																				"nativeSrc": "6031:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6054:21:7",
																					"nodeType": "YulBlock",
																					"src": "6054:21:7",
																					"statements": [
																						{
																							"nativeSrc": "6056:17:7",
																							"nodeType": "YulAssignment",
																							"src": "6056:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6065:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "6065:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6068:4:7",
																										"nodeType": "YulLiteral",
																										"src": "6068:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6061:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6061:3:7"
																								},
																								"nativeSrc": "6061:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6061:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6056:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "6056:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6035:3:7",
																					"nodeType": "YulBlock",
																					"src": "6035:3:7",
																					"statements": []
																				},
																				"src": "6031:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "6275:156:7",
																					"nodeType": "YulBlock",
																					"src": "6275:156:7",
																					"statements": [
																						{
																							"nativeSrc": "6293:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6293:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6320:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6320:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6325:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6325:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6316:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6316:3:7"
																										},
																										"nativeSrc": "6316:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6316:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6310:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6310:5:7"
																								},
																								"nativeSrc": "6310:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6310:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6297:9:7",
																									"nodeType": "YulTypedName",
																									"src": "6297:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6360:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6360:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6387:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6387:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6402:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6402:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6410:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6410:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6398:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6398:3:7"
																												},
																												"nativeSrc": "6398:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6398:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6368:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "6368:18:7"
																										},
																										"nativeSrc": "6368:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6368:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6353:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6353:6:7"
																								},
																								"nativeSrc": "6353:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6353:64:7"
																							},
																							"nativeSrc": "6353:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6353:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6258:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6258:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6267:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6267:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6255:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6255:2:7"
																					},
																					"nativeSrc": "6255:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6255:19:7"
																				},
																				"nativeSrc": "6252:179:7",
																				"nodeType": "YulIf",
																				"src": "6252:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6451:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6451:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6465:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6465:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6473:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6473:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6461:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6461:3:7"
																									},
																									"nativeSrc": "6461:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6461:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6477:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6477:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6457:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6457:3:7"
																							},
																							"nativeSrc": "6457:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6457:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6444:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6444:6:7"
																					},
																					"nativeSrc": "6444:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6444:36:7"
																				},
																				"nativeSrc": "6444:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6444:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5872:618:7",
																	"nodeType": "YulCase",
																	"src": "5872:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5877:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5877:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6507:222:7",
																		"nodeType": "YulBlock",
																		"src": "6507:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6521:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6521:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6534:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6534:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6525:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6525:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6558:67:7",
																					"nodeType": "YulBlock",
																					"src": "6558:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6576:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6576:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6595:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6595:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6600:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6600:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6591:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6591:3:7"
																										},
																										"nativeSrc": "6591:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6591:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6585:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6585:5:7"
																								},
																								"nativeSrc": "6585:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6585:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6576:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6576:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6551:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6551:6:7"
																				},
																				"nativeSrc": "6548:77:7",
																				"nodeType": "YulIf",
																				"src": "6548:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6645:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6645:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6704:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6704:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6711:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6711:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6651:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6651:52:7"
																							},
																							"nativeSrc": "6651:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6651:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6638:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6638:6:7"
																					},
																					"nativeSrc": "6638:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6638:81:7"
																				},
																				"nativeSrc": "6638:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6638:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6499:230:7",
																	"nodeType": "YulCase",
																	"src": "6499:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5852:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5860:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5860:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5849:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5849:2:7"
																},
																"nativeSrc": "5849:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5849:14:7"
															},
															"nativeSrc": "5842:887:7",
															"nodeType": "YulSwitch",
															"src": "5842:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5340:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5421:4:7",
														"nodeType": "YulTypedName",
														"src": "5421:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5427:3:7",
														"nodeType": "YulTypedName",
														"src": "5427:3:7",
														"type": ""
													}
												],
												"src": "5340:1395:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e06040526003600555348015610014575f80fd5b5060405161288138038061288183398181016040528101906100369190610206565b6040518060400160405280600381526020017f56495300000000000000000000000000000000000000000000000000000000008152506040518060400160405280600881526020017f566965745377617000000000000000000000000000000000000000000000000081525081600390816100b19190610490565b5080600490816100c19190610490565b5050508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250503360085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505061055f565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101d5826101ac565b9050919050565b6101e5816101cb565b81146101ef575f80fd5b50565b5f81519050610200816101dc565b92915050565b5f805f6060848603121561021d5761021c6101a8565b5b5f61022a868287016101f2565b935050602061023b868287016101f2565b925050604061024c868287016101f2565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102d157607f821691505b6020821081036102e4576102e361028d565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103467fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261030b565b610350868361030b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61039461038f61038a84610368565b610371565b610368565b9050919050565b5f819050919050565b6103ad8361037a565b6103c16103b98261039b565b848454610317565b825550505050565b5f90565b6103d56103c9565b6103e08184846103a4565b505050565b5b81811015610403576103f85f826103cd565b6001810190506103e6565b5050565b601f82111561044857610419816102ea565b610422846102fc565b81016020851015610431578190505b61044561043d856102fc565b8301826103e5565b50505b505050565b5f82821c905092915050565b5f6104685f198460080261044d565b1980831691505092915050565b5f6104808383610459565b9150826002028217905092915050565b61049982610256565b67ffffffffffffffff8111156104b2576104b1610260565b5b6104bc82546102ba565b6104c7828285610407565b5f60209050601f8311600181146104f8575f84156104e6578287015190505b6104f08582610475565b865550610557565b601f198416610506866102ea565b5f5b8281101561052d57848901518255600182019150602085019450602081019050610508565b8683101561054a5784890151610546601f891682610459565b8355505b6001600288020188555050505b505050505050565b60805160a05160c05161229d6105e45f395f81816104d1015261064301525f818161086701528181610a0301528181610cc801528181610d7701528181610de501526110ac01525f81816104a2015281816107cb0152818161096501528181610c7301528181610d2401528181610d9801528181610dc40152611008015261229d5ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c806370a08231116100ab578063a9059cbb1161006f578063a9059cbb14610322578063d004f0f714610352578063d21220a714610382578063dd62ed3e146103a0578063ddca3f43146103d05761011f565b806370a0823114610255578063741bef1a1461028557806395d89b41146102a35780639c8f9f23146102c15780639cd441da146102f25761011f565b80631b712739116100f25780631b712739146101ad57806323b872dd146101cb578063313ce567146101fb578063443cb4bc146102195780635a76f25e146102375761011f565b806306fdde0314610123578063095ea7b3146101415780630dfe16811461017157806318160ddd1461018f575b5f80fd5b61012b6103ee565b60405161013891906118ea565b60405180910390f35b61015b6004803603810190610156919061199b565b61047e565b60405161016891906119f3565b60405180910390f35b6101796104a0565b6040516101869190611a67565b60405180910390f35b6101976104c4565b6040516101a49190611a8f565b60405180910390f35b6101b56104cd565b6040516101c29190611a8f565b60405180910390f35b6101e560048036038101906101e09190611aa8565b6105ba565b6040516101f291906119f3565b60405180910390f35b6102036105e8565b6040516102109190611b13565b60405180910390f35b6102216105f0565b60405161022e9190611a8f565b60405180910390f35b61023f6105f6565b60405161024c9190611a8f565b60405180910390f35b61026f600480360381019061026a9190611b2c565b6105fc565b60405161027c9190611a8f565b60405180910390f35b61028d610641565b60405161029a9190611b77565b60405180910390f35b6102ab610665565b6040516102b891906118ea565b60405180910390f35b6102db60048036038101906102d69190611b90565b6106f5565b6040516102e9929190611bbb565b60405180910390f35b61030c60048036038101906103079190611be2565b610906565b6040516103199190611a8f565b60405180910390f35b61033c6004803603810190610337919061199b565b610b9e565b60405161034991906119f3565b60405180910390f35b61036c6004803603810190610367919061199b565b610bc0565b6040516103799190611a8f565b60405180910390f35b61038a6110aa565b6040516103979190611a67565b60405180910390f35b6103ba60048036038101906103b59190611c20565b6110ce565b6040516103c79190611a8f565b60405180910390f35b6103d8611150565b6040516103e59190611a8f565b60405180910390f35b6060600380546103fd90611c8b565b80601f016020809104026020016040519081016040528092919081815260200182805461042990611c8b565b80156104745780601f1061044b57610100808354040283529160200191610474565b820191905f5260205f20905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b5f80610488611156565b905061049581858561115d565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600254905090565b5f807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610538573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055c9190611d41565b5050509150505f81136105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b90611e02565b60405180910390fd5b6305f5e100816105b49190611e7a565b91505090565b5f806105c4611156565b90506105d185828561116f565b6105dc858585611202565b60019150509392505050565b5f6012905090565b60065481565b60075481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60606004805461067490611c8b565b80601f01602080910402602001604051908101604052809291908181526020018280546106a090611c8b565b80156106eb5780601f106106c2576101008083540402835291602001916106eb565b820191905f5260205f20905b8154815290600101906020018083116106ce57829003601f168201915b5050505050905090565b5f806106ff6104c4565b6006548461070d9190611ee2565b6107179190611f23565b91506107216104c4565b6007548461072f9190611ee2565b6107399190611f23565b90505f8211801561074957505f81115b610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f90611f9d565b60405180910390fd5b6107a533670de0b6b3a7640000856107a09190611ee2565b6112f2565b6107c9826006546107b69190611fbb565b826007546107c49190611fbb565b611371565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610824929190611ffd565b6020604051808303815f875af1158015610840573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610864919061204e565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108c0929190611ffd565b6020604051808303815f875af11580156108dc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610900919061204e565b50915091565b5f806109106104cd565b90505f818461091f9190611ee2565b9050808514610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095a906120c3565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016109c0939291906120e1565b6020604051808303815f875af11580156109dc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a00919061204e565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610a5e939291906120e1565b6020604051808303815f875af1158015610a7a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a9e919061204e565b505f610aa86104c4565b03610ac857610ac18486610abc9190611ee2565b611383565b9250610b13565b610b10600654610ad66104c4565b87610ae19190611ee2565b610aeb9190611f23565b600754610af66104c4565b87610b019190611ee2565b610b0b9190611f23565b6113fa565b92505b5f8311610b55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4c90612160565b60405180910390fd5b610b7233670de0b6b3a764000085610b6d9190611ee2565b611413565b610b9685600654610b83919061217e565b85600754610b91919061217e565b611371565b505092915050565b5f80610ba8611156565b9050610bb5818585611202565b600191505092915050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c26906121fb565b60405180910390fd5b5f8211610c71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6890611f9d565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610d1657507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b610d1e575f80fd5b5f805f807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610dc2577f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000600754600654610e0b565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006006546007545b93509350935093508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b8152600401610e50939291906120e1565b6020604051808303815f875af1158015610e6c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e90919061204e565b505f6103e86005546103e8610ea59190611fbb565b88610eb09190611ee2565b610eba9190611f23565b90508082610ec8919061217e565b8184610ed49190611ee2565b610ede9190611f23565b95508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838a610f2a9190611fbb565b6040518363ffffffff1660e01b8152600401610f47929190611ffd565b6020604051808303815f875af1158015610f63573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f87919061204e565b508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33886040518363ffffffff1660e01b8152600401610fc3929190611ffd565b6020604051808303815f875af1158015610fdf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611003919061204e565b505f807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146110765787846110659190611fbb565b8386611071919061217e565b61108f565b8885611082919061217e565b888561108e9190611fbb565b5b9150915061109d8282611371565b5050505050505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60055481565b5f33905090565b61116a8383836001611492565b505050565b5f61117a84846110ce565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156111fc57818110156111ed578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111e493929190612219565b60405180910390fd5b6111fb84848484035f611492565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611272575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611269919061224e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112e2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112d9919061224e565b60405180910390fd5b6112ed838383611661565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611362575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611359919061224e565b60405180910390fd5b61136d825f83611661565b5050565b81600681905550806007819055505050565b5f60038211156113e8578190505f60016002846113a09190611f23565b6113aa919061217e565b90505b818110156113e25780915060028182856113c79190611f23565b6113d1919061217e565b6113db9190611f23565b90506113ad565b506113f5565b5f82146113f457600190505b5b919050565b5f81831115611409578161140b565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611483575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161147a919061224e565b60405180910390fd5b61148e5f8383611661565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611502575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114f9919061224e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611572575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611569919061224e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561165b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516116529190611a8f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116b1578060025f8282546116a5919061217e565b9250508190555061177f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561173a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161173193929190612219565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117c6578060025f8282540392505081905550611810565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161186d9190611a8f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6118bc8261187a565b6118c68185611884565b93506118d6818560208601611894565b6118df816118a2565b840191505092915050565b5f6020820190508181035f83015261190281846118b2565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119378261190e565b9050919050565b6119478161192d565b8114611951575f80fd5b50565b5f813590506119628161193e565b92915050565b5f819050919050565b61197a81611968565b8114611984575f80fd5b50565b5f8135905061199581611971565b92915050565b5f80604083850312156119b1576119b061190a565b5b5f6119be85828601611954565b92505060206119cf85828601611987565b9150509250929050565b5f8115159050919050565b6119ed816119d9565b82525050565b5f602082019050611a065f8301846119e4565b92915050565b5f819050919050565b5f611a2f611a2a611a258461190e565b611a0c565b61190e565b9050919050565b5f611a4082611a15565b9050919050565b5f611a5182611a36565b9050919050565b611a6181611a47565b82525050565b5f602082019050611a7a5f830184611a58565b92915050565b611a8981611968565b82525050565b5f602082019050611aa25f830184611a80565b92915050565b5f805f60608486031215611abf57611abe61190a565b5b5f611acc86828701611954565b9350506020611add86828701611954565b9250506040611aee86828701611987565b9150509250925092565b5f60ff82169050919050565b611b0d81611af8565b82525050565b5f602082019050611b265f830184611b04565b92915050565b5f60208284031215611b4157611b4061190a565b5b5f611b4e84828501611954565b91505092915050565b5f611b6182611a36565b9050919050565b611b7181611b57565b82525050565b5f602082019050611b8a5f830184611b68565b92915050565b5f60208284031215611ba557611ba461190a565b5b5f611bb284828501611987565b91505092915050565b5f604082019050611bce5f830185611a80565b611bdb6020830184611a80565b9392505050565b5f8060408385031215611bf857611bf761190a565b5b5f611c0585828601611987565b9250506020611c1685828601611987565b9150509250929050565b5f8060408385031215611c3657611c3561190a565b5b5f611c4385828601611954565b9250506020611c5485828601611954565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ca257607f821691505b602082108103611cb557611cb4611c5e565b5b50919050565b5f69ffffffffffffffffffff82169050919050565b611cd981611cbb565b8114611ce3575f80fd5b50565b5f81519050611cf481611cd0565b92915050565b5f819050919050565b611d0c81611cfa565b8114611d16575f80fd5b50565b5f81519050611d2781611d03565b92915050565b5f81519050611d3b81611971565b92915050565b5f805f805f60a08688031215611d5a57611d5961190a565b5b5f611d6788828901611ce6565b9550506020611d7888828901611d19565b9450506040611d8988828901611d2d565b9350506060611d9a88828901611d2d565b9250506080611dab88828901611ce6565b9150509295509295909350565b7f496e76616c6964207072696365000000000000000000000000000000000000005f82015250565b5f611dec600d83611884565b9150611df782611db8565b602082019050919050565b5f6020820190508181035f830152611e1981611de0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e8482611cfa565b9150611e8f83611cfa565b925082611e9f57611e9e611e20565b5b60015f0383147f800000000000000000000000000000000000000000000000000000000000000083141615611ed757611ed6611e4d565b5b828205905092915050565b5f611eec82611968565b9150611ef783611968565b9250828202611f0581611968565b91508282048414831517611f1c57611f1b611e4d565b5b5092915050565b5f611f2d82611968565b9150611f3883611968565b925082611f4857611f47611e20565b5b828204905092915050565b7f5a45524f20414d4f554e540000000000000000000000000000000000000000005f82015250565b5f611f87600b83611884565b9150611f9282611f53565b602082019050919050565b5f6020820190508181035f830152611fb481611f7b565b9050919050565b5f611fc582611968565b9150611fd083611968565b9250828203905081811115611fe857611fe7611e4d565b5b92915050565b611ff78161192d565b82525050565b5f6040820190506120105f830185611fee565b61201d6020830184611a80565b9392505050565b61202d816119d9565b8114612037575f80fd5b50565b5f8151905061204881612024565b92915050565b5f602082840312156120635761206261190a565b5b5f6120708482850161203a565b91505092915050565b7f564e5354206d757374206d6174636820425443207072696365000000000000005f82015250565b5f6120ad601983611884565b91506120b882612079565b602082019050919050565b5f6020820190508181035f8301526120da816120a1565b9050919050565b5f6060820190506120f45f830186611fee565b6121016020830185611fee565b61210e6040830184611a80565b949350505050565b7f5a45524f5f5348415245530000000000000000000000000000000000000000005f82015250565b5f61214a600b83611884565b915061215582612116565b602082019050919050565b5f6020820190508181035f8301526121778161213e565b9050919050565b5f61218882611968565b915061219383611968565b92508282019050808211156121ab576121aa611e4d565b5b92915050565b7f5a45524f204144445245535300000000000000000000000000000000000000005f82015250565b5f6121e5600c83611884565b91506121f0826121b1565b602082019050919050565b5f6020820190508181035f830152612212816121d9565b9050919050565b5f60608201905061222c5f830186611fee565b6122396020830185611a80565b6122466040830184611a80565b949350505050565b5f6020820190506122615f830184611fee565b9291505056fea264697066735822122001ba2baeb0ac6f3c71d1f741cf1a475e8bbe155b7359e076be4b164fb7b784e664736f6c634300081a0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x3 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2881 CODESIZE SUB DUP1 PUSH2 0x2881 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5649530000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5669657453776170000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x490 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x490 JUMP JUMPDEST POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x55F JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D5 DUP3 PUSH2 0x1AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E5 DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP2 EQ PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x200 DUP2 PUSH2 0x1DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21D JUMPI PUSH2 0x21C PUSH2 0x1A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22A DUP7 DUP3 DUP8 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x23B DUP7 DUP3 DUP8 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x24C DUP7 DUP3 DUP8 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E4 JUMPI PUSH2 0x2E3 PUSH2 0x28D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x346 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x30B JUMP JUMPDEST PUSH2 0x350 DUP7 DUP4 PUSH2 0x30B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x394 PUSH2 0x38F PUSH2 0x38A DUP5 PUSH2 0x368 JUMP JUMPDEST PUSH2 0x371 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AD DUP4 PUSH2 0x37A JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x3B9 DUP3 PUSH2 0x39B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x317 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3D5 PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x3E0 DUP2 DUP5 DUP5 PUSH2 0x3A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x403 JUMPI PUSH2 0x3F8 PUSH0 DUP3 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x419 DUP2 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x422 DUP5 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x431 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x445 PUSH2 0x43D DUP6 PUSH2 0x2FC JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3E5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x468 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x44D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x480 DUP4 DUP4 PUSH2 0x459 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x499 DUP3 PUSH2 0x256 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B2 JUMPI PUSH2 0x4B1 PUSH2 0x260 JUMP JUMPDEST JUMPDEST PUSH2 0x4BC DUP3 SLOAD PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x4C7 DUP3 DUP3 DUP6 PUSH2 0x407 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4F8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4E6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4F0 DUP6 DUP3 PUSH2 0x475 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x557 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x506 DUP7 PUSH2 0x2EA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x52D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x508 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x54A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x546 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x459 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x229D PUSH2 0x5E4 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x4D1 ADD MSTORE PUSH2 0x643 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x867 ADD MSTORE DUP2 DUP2 PUSH2 0xA03 ADD MSTORE DUP2 DUP2 PUSH2 0xCC8 ADD MSTORE DUP2 DUP2 PUSH2 0xD77 ADD MSTORE DUP2 DUP2 PUSH2 0xDE5 ADD MSTORE PUSH2 0x10AC ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x4A2 ADD MSTORE DUP2 DUP2 PUSH2 0x7CB ADD MSTORE DUP2 DUP2 PUSH2 0x965 ADD MSTORE DUP2 DUP2 PUSH2 0xC73 ADD MSTORE DUP2 DUP2 PUSH2 0xD24 ADD MSTORE DUP2 DUP2 PUSH2 0xD98 ADD MSTORE DUP2 DUP2 PUSH2 0xDC4 ADD MSTORE PUSH2 0x1008 ADD MSTORE PUSH2 0x229D PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD004F0F7 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x3D0 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x2F2 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1B712739 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x1B712739 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x237 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1B13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1B2C JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP3 SWAP2 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1C20 JUMP JUMPDEST PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FD SWAP1 PUSH2 0x1C8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x429 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x488 PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP PUSH2 0x495 DUP2 DUP6 DUP6 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x538 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x1D41 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59B SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x5F5E100 DUP2 PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x1E7A JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5C4 PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D1 DUP6 DUP3 DUP6 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x5DC DUP6 DUP6 DUP6 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x674 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A0 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6FF PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP5 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0x717 SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST SWAP2 POP PUSH2 0x721 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP5 PUSH2 0x72F SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0x739 SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x749 JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP1 PUSH2 0x1F9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 CALLER PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x7C9 DUP3 PUSH1 0x6 SLOAD PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST DUP3 PUSH1 0x7 SLOAD PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH2 0x1371 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x840 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x864 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C0 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x910 PUSH2 0x4CD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 PUSH2 0x91F SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 EQ PUSH2 0x963 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95A SWAP1 PUSH2 0x20C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9DC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH0 PUSH2 0xAA8 PUSH2 0x4C4 JUMP JUMPDEST SUB PUSH2 0xAC8 JUMPI PUSH2 0xAC1 DUP5 DUP7 PUSH2 0xABC SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST SWAP3 POP PUSH2 0xB13 JUMP JUMPDEST PUSH2 0xB10 PUSH1 0x6 SLOAD PUSH2 0xAD6 PUSH2 0x4C4 JUMP JUMPDEST DUP8 PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xAF6 PUSH2 0x4C4 JUMP JUMPDEST DUP8 PUSH2 0xB01 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0xB0B SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x13FA JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 DUP4 GT PUSH2 0xB55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP1 PUSH2 0x2160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB72 CALLER PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0x1413 JUMP JUMPDEST PUSH2 0xB96 DUP6 PUSH1 0x6 SLOAD PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST DUP6 PUSH1 0x7 SLOAD PUSH2 0xB91 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH2 0x1371 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBA8 PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP PUSH2 0xBB5 DUP2 DUP6 DUP6 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC26 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC68 SWAP1 PUSH2 0x1F9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD16 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xD1E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDC2 JUMPI PUSH32 0x0 PUSH32 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0xE0B JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE50 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE6C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE90 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH0 PUSH2 0x3E8 PUSH1 0x5 SLOAD PUSH2 0x3E8 PUSH2 0xEA5 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST DUP9 PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0xEBA SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0xEC8 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST DUP2 DUP5 PUSH2 0xED4 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0xEDE SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST SWAP6 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP11 PUSH2 0xF2A SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF47 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF63 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF87 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFDF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1003 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1076 JUMPI DUP8 DUP5 PUSH2 0x1065 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST DUP4 DUP7 PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH2 0x108F JUMP JUMPDEST DUP9 DUP6 PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST DUP9 DUP6 PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x109D DUP3 DUP3 PUSH2 0x1371 JUMP JUMPDEST POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x116A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1492 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x117A DUP5 DUP5 PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x11FC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11ED JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11FB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1272 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1269 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D9 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12ED DUP4 DUP4 DUP4 PUSH2 0x1661 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1362 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1359 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x136D DUP3 PUSH0 DUP4 PUSH2 0x1661 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x13E8 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x13A0 SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x13AA SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13E2 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x13C7 SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x13D1 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH2 0x13DB SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST SWAP1 POP PUSH2 0x13AD JUMP JUMPDEST POP PUSH2 0x13F5 JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x13F4 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT ISZERO PUSH2 0x1409 JUMPI DUP2 PUSH2 0x140B JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1483 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147A SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148E PUSH0 DUP4 DUP4 PUSH2 0x1661 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1502 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F9 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1572 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1569 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x165B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1652 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x16A5 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x177F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x173A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1731 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17C6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1810 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x186D SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18BC DUP3 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x18C6 DUP2 DUP6 PUSH2 0x1884 JUMP JUMPDEST SWAP4 POP PUSH2 0x18D6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x18DF DUP2 PUSH2 0x18A2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1902 DUP2 DUP5 PUSH2 0x18B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1937 DUP3 PUSH2 0x190E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1947 DUP2 PUSH2 0x192D JUMP JUMPDEST DUP2 EQ PUSH2 0x1951 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1962 DUP2 PUSH2 0x193E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197A DUP2 PUSH2 0x1968 JUMP JUMPDEST DUP2 EQ PUSH2 0x1984 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1995 DUP2 PUSH2 0x1971 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B0 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19BE DUP6 DUP3 DUP7 ADD PUSH2 0x1954 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19CF DUP6 DUP3 DUP7 ADD PUSH2 0x1987 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19ED DUP2 PUSH2 0x19D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A06 PUSH0 DUP4 ADD DUP5 PUSH2 0x19E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2F PUSH2 0x1A2A PUSH2 0x1A25 DUP5 PUSH2 0x190E JUMP JUMPDEST PUSH2 0x1A0C JUMP JUMPDEST PUSH2 0x190E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A40 DUP3 PUSH2 0x1A15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A51 DUP3 PUSH2 0x1A36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A61 DUP2 PUSH2 0x1A47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A7A PUSH0 DUP4 ADD DUP5 PUSH2 0x1A58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A89 DUP2 PUSH2 0x1968 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ABF JUMPI PUSH2 0x1ABE PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACC DUP7 DUP3 DUP8 ADD PUSH2 0x1954 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1ADD DUP7 DUP3 DUP8 ADD PUSH2 0x1954 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AEE DUP7 DUP3 DUP8 ADD PUSH2 0x1987 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B0D DUP2 PUSH2 0x1AF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B26 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4E DUP5 DUP3 DUP6 ADD PUSH2 0x1954 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B61 DUP3 PUSH2 0x1A36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B71 DUP2 PUSH2 0x1B57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B8A PUSH0 DUP4 ADD DUP5 PUSH2 0x1B68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA5 JUMPI PUSH2 0x1BA4 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BB2 DUP5 DUP3 DUP6 ADD PUSH2 0x1987 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BCE PUSH0 DUP4 ADD DUP6 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x1BDB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BF8 JUMPI PUSH2 0x1BF7 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C05 DUP6 DUP3 DUP7 ADD PUSH2 0x1987 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C16 DUP6 DUP3 DUP7 ADD PUSH2 0x1987 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C36 JUMPI PUSH2 0x1C35 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C43 DUP6 DUP3 DUP7 ADD PUSH2 0x1954 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C54 DUP6 DUP3 DUP7 ADD PUSH2 0x1954 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CA2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CB5 JUMPI PUSH2 0x1CB4 PUSH2 0x1C5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD9 DUP2 PUSH2 0x1CBB JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF4 DUP2 PUSH2 0x1CD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0C DUP2 PUSH2 0x1CFA JUMP JUMPDEST DUP2 EQ PUSH2 0x1D16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D27 DUP2 PUSH2 0x1D03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D3B DUP2 PUSH2 0x1971 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D5A JUMPI PUSH2 0x1D59 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D67 DUP9 DUP3 DUP10 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D78 DUP9 DUP3 DUP10 ADD PUSH2 0x1D19 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1D89 DUP9 DUP3 DUP10 ADD PUSH2 0x1D2D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1D9A DUP9 DUP3 DUP10 ADD PUSH2 0x1D2D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1DAB DUP9 DUP3 DUP10 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DEC PUSH1 0xD DUP4 PUSH2 0x1884 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF7 DUP3 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E19 DUP2 PUSH2 0x1DE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E84 DUP3 PUSH2 0x1CFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E8F DUP4 PUSH2 0x1CFA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E9F JUMPI PUSH2 0x1E9E PUSH2 0x1E20 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x1ED7 JUMPI PUSH2 0x1ED6 PUSH2 0x1E4D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEC DUP3 PUSH2 0x1968 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF7 DUP4 PUSH2 0x1968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F05 DUP2 PUSH2 0x1968 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F1C JUMPI PUSH2 0x1F1B PUSH2 0x1E4D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F2D DUP3 PUSH2 0x1968 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F38 DUP4 PUSH2 0x1968 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F48 JUMPI PUSH2 0x1F47 PUSH2 0x1E20 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5A45524F20414D4F554E54000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F87 PUSH1 0xB DUP4 PUSH2 0x1884 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F92 DUP3 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FB4 DUP2 PUSH2 0x1F7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC5 DUP3 PUSH2 0x1968 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD0 DUP4 PUSH2 0x1968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1FE8 JUMPI PUSH2 0x1FE7 PUSH2 0x1E4D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FF7 DUP2 PUSH2 0x192D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2010 PUSH0 DUP4 ADD DUP6 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x201D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x202D DUP2 PUSH2 0x19D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2037 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2048 DUP2 PUSH2 0x2024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2063 JUMPI PUSH2 0x2062 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2070 DUP5 DUP3 DUP6 ADD PUSH2 0x203A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x564E5354206D757374206D617463682042544320707269636500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20AD PUSH1 0x19 DUP4 PUSH2 0x1884 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B8 DUP3 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20DA DUP2 PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20F4 PUSH0 DUP4 ADD DUP7 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x2101 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x210E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A45524F5F534841524553000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x214A PUSH1 0xB DUP4 PUSH2 0x1884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2155 DUP3 PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2177 DUP2 PUSH2 0x213E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2188 DUP3 PUSH2 0x1968 JUMP JUMPDEST SWAP2 POP PUSH2 0x2193 DUP4 PUSH2 0x1968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x21AB JUMPI PUSH2 0x21AA PUSH2 0x1E4D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5A45524F20414444524553530000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21E5 PUSH1 0xC DUP4 PUSH2 0x1884 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F0 DUP3 PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2212 DUP2 PUSH2 0x21D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x222C PUSH0 DUP4 ADD DUP7 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x2239 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x2246 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2261 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xBA 0x2B 0xAE 0xB0 0xAC PUSH16 0x3C71D1F741CF1A475E8BBE155B7359E0 PUSH23 0xBE4B164FB7B784E664736F6C634300081A003300000000 ",
							"sourceMap": "255:3827:6:-:0;;;472:1;451:22;;574:255;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;693:7:6::1;677:24;;;;;;;;::::0;::::1;728:7;712:24;;;;;;;;::::0;::::1;781:10;747:45;;;;;;;;::::0;::::1;811:10;803:5;;:18;;;;;;;;;;;;;;;;;;574:255:::0;;;255:3827;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:99::-;1566:6;1600:5;1594:12;1584:22;;1514:99;;;:::o;1619:180::-;1667:77;1664:1;1657:88;1764:4;1761:1;1754:15;1788:4;1785:1;1778:15;1805:180;1853:77;1850:1;1843:88;1950:4;1947:1;1940:15;1974:4;1971:1;1964:15;1991:320;2035:6;2072:1;2066:4;2062:12;2052:22;;2119:1;2113:4;2109:12;2140:18;2130:81;;2196:4;2188:6;2184:17;2174:27;;2130:81;2258:2;2250:6;2247:14;2227:18;2224:38;2221:84;;2277:18;;:::i;:::-;2221:84;2042:269;1991:320;;;:::o;2317:141::-;2366:4;2389:3;2381:11;;2412:3;2409:1;2402:14;2446:4;2443:1;2433:18;2425:26;;2317:141;;;:::o;2464:93::-;2501:6;2548:2;2543;2536:5;2532:14;2528:23;2518:33;;2464:93;;;:::o;2563:107::-;2607:8;2657:5;2651:4;2647:16;2626:37;;2563:107;;;;:::o;2676:393::-;2745:6;2795:1;2783:10;2779:18;2818:97;2848:66;2837:9;2818:97;:::i;:::-;2936:39;2966:8;2955:9;2936:39;:::i;:::-;2924:51;;3008:4;3004:9;2997:5;2993:21;2984:30;;3057:4;3047:8;3043:19;3036:5;3033:30;3023:40;;2752:317;;2676:393;;;;;:::o;3075:77::-;3112:7;3141:5;3130:16;;3075:77;;;:::o;3158:60::-;3186:3;3207:5;3200:12;;3158:60;;;:::o;3224:142::-;3274:9;3307:53;3325:34;3334:24;3352:5;3334:24;:::i;:::-;3325:34;:::i;:::-;3307:53;:::i;:::-;3294:66;;3224:142;;;:::o;3372:75::-;3415:3;3436:5;3429:12;;3372:75;;;:::o;3453:269::-;3563:39;3594:7;3563:39;:::i;:::-;3624:91;3673:41;3697:16;3673:41;:::i;:::-;3665:6;3658:4;3652:11;3624:91;:::i;:::-;3618:4;3611:105;3529:193;3453:269;;;:::o;3728:73::-;3773:3;3728:73;:::o;3807:189::-;3884:32;;:::i;:::-;3925:65;3983:6;3975;3969:4;3925:65;:::i;:::-;3860:136;3807:189;;:::o;4002:186::-;4062:120;4079:3;4072:5;4069:14;4062:120;;;4133:39;4170:1;4163:5;4133:39;:::i;:::-;4106:1;4099:5;4095:13;4086:22;;4062:120;;;4002:186;;:::o;4194:543::-;4295:2;4290:3;4287:11;4284:446;;;4329:38;4361:5;4329:38;:::i;:::-;4413:29;4431:10;4413:29;:::i;:::-;4403:8;4399:44;4596:2;4584:10;4581:18;4578:49;;;4617:8;4602:23;;4578:49;4640:80;4696:22;4714:3;4696:22;:::i;:::-;4686:8;4682:37;4669:11;4640:80;:::i;:::-;4299:431;;4284:446;4194:543;;;:::o;4743:117::-;4797:8;4847:5;4841:4;4837:16;4816:37;;4743:117;;;;:::o;4866:169::-;4910:6;4943:51;4991:1;4987:6;4979:5;4976:1;4972:13;4943:51;:::i;:::-;4939:56;5024:4;5018;5014:15;5004:25;;4917:118;4866:169;;;;:::o;5040:295::-;5116:4;5262:29;5287:3;5281:4;5262:29;:::i;:::-;5254:37;;5324:3;5321:1;5317:11;5311:4;5308:21;5300:29;;5040:295;;;;:::o;5340:1395::-;5457:37;5490:3;5457:37;:::i;:::-;5559:18;5551:6;5548:30;5545:56;;;5581:18;;:::i;:::-;5545:56;5625:38;5657:4;5651:11;5625:38;:::i;:::-;5710:67;5770:6;5762;5756:4;5710:67;:::i;:::-;5804:1;5828:4;5815:17;;5860:2;5852:6;5849:14;5877:1;5872:618;;;;6534:1;6551:6;6548:77;;;6600:9;6595:3;6591:19;6585:26;6576:35;;6548:77;6651:67;6711:6;6704:5;6651:67;:::i;:::-;6645:4;6638:81;6507:222;5842:887;;5872:618;5924:4;5920:9;5912:6;5908:22;5958:37;5990:4;5958:37;:::i;:::-;6017:1;6031:208;6045:7;6042:1;6039:14;6031:208;;;6124:9;6119:3;6115:19;6109:26;6101:6;6094:42;6175:1;6167:6;6163:14;6153:24;;6222:2;6211:9;6207:18;6194:31;;6068:4;6065:1;6061:12;6056:17;;6031:208;;;6267:6;6258:7;6255:19;6252:179;;;6325:9;6320:3;6316:19;6310:26;6368:48;6410:4;6402:6;6398:17;6387:9;6368:48;:::i;:::-;6360:6;6353:64;6275:156;6252:179;6477:1;6473;6465:6;6461:14;6457:22;6451:4;6444:36;5879:611;;;5842:887;;5432:1303;;;5340:1395;;:::o;255:3827:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_588": {
									"entryPoint": 4445,
									"id": 588,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_648": {
									"entryPoint": 5266,
									"id": 648,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_570": {
									"entryPoint": 4850,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_min_980": {
									"entryPoint": 5114,
									"id": 980,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_537": {
									"entryPoint": 5139,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_813": {
									"entryPoint": 4438,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_696": {
									"entryPoint": 4463,
									"id": 696,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_sqrt_963": {
									"entryPoint": 4995,
									"id": 963,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_transfer_427": {
									"entryPoint": 4610,
									"id": 427,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_504": {
									"entryPoint": 5729,
									"id": 504,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_909": {
									"entryPoint": 4977,
									"id": 909,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addLiquidity_1276": {
									"entryPoint": 2310,
									"id": 1276,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_324": {
									"entryPoint": 4302,
									"id": 324,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_348": {
									"entryPoint": 1150,
									"id": 348,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_283": {
									"entryPoint": 1532,
									"id": 283,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_261": {
									"entryPoint": 1512,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fee_850": {
									"entryPoint": 4432,
									"id": 850,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getLatestBTCPrice_1006": {
									"entryPoint": 1229,
									"id": 1006,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_243": {
									"entryPoint": 1006,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@priceFeed_847": {
									"entryPoint": 1601,
									"id": 847,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeLiquidity_1352": {
									"entryPoint": 1781,
									"id": 1352,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@reserve0_852": {
									"entryPoint": 1520,
									"id": 852,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_854": {
									"entryPoint": 1526,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swap_1163": {
									"entryPoint": 3008,
									"id": 1163,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_252": {
									"entryPoint": 1637,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@token0_841": {
									"entryPoint": 1184,
									"id": 841,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_844": {
									"entryPoint": 4266,
									"id": 844,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_270": {
									"entryPoint": 1220,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_380": {
									"entryPoint": 1466,
									"id": 380,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_307": {
									"entryPoint": 2974,
									"id": 307,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 7449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 7489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack": {
									"entryPoint": 7016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$775_to_t_address_fromStack": {
									"entryPoint": 6744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8417,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8189,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8729,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": 7031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$775__to_t_address__fromStack_reversed": {
									"entryPoint": 6759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 7802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 7418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AggregatorV3Interface_$45_to_t_address": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$775_to_t_address": {
									"entryPoint": 6727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7757,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7712,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6410,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f": {
									"entryPoint": 8470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd": {
									"entryPoint": 8313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd": {
									"entryPoint": 8625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a": {
									"entryPoint": 8019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7": {
									"entryPoint": 7608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 7427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 7376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19444:7",
										"nodeType": "YulBlock",
										"src": "0:19444:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3371:28:7",
													"nodeType": "YulBlock",
													"src": "3371:28:7",
													"statements": [
														{
															"nativeSrc": "3381:12:7",
															"nodeType": "YulAssignment",
															"src": "3381:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3388:5:7",
																"nodeType": "YulIdentifier",
																"src": "3388:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3381:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3381:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3339:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3357:5:7",
														"nodeType": "YulTypedName",
														"src": "3357:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3367:3:7",
														"nodeType": "YulTypedName",
														"src": "3367:3:7",
														"type": ""
													}
												],
												"src": "3339:60:7"
											},
											{
												"body": {
													"nativeSrc": "3465:82:7",
													"nodeType": "YulBlock",
													"src": "3465:82:7",
													"statements": [
														{
															"nativeSrc": "3475:66:7",
															"nodeType": "YulAssignment",
															"src": "3475:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3533:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3533:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3515:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3515:17:7"
																				},
																				"nativeSrc": "3515:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3515:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3506:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3506:8:7"
																		},
																		"nativeSrc": "3506:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3506:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3488:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3488:17:7"
																},
																"nativeSrc": "3488:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3488:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3475:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3475:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3405:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3445:5:7",
														"nodeType": "YulTypedName",
														"src": "3445:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3455:9:7",
														"nodeType": "YulTypedName",
														"src": "3455:9:7",
														"type": ""
													}
												],
												"src": "3405:142:7"
											},
											{
												"body": {
													"nativeSrc": "3613:66:7",
													"nodeType": "YulBlock",
													"src": "3613:66:7",
													"statements": [
														{
															"nativeSrc": "3623:50:7",
															"nodeType": "YulAssignment",
															"src": "3623:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3667:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3667:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3636:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3636:30:7"
																},
																"nativeSrc": "3636:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3636:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3623:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3623:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3553:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3593:5:7",
														"nodeType": "YulTypedName",
														"src": "3593:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3603:9:7",
														"nodeType": "YulTypedName",
														"src": "3603:9:7",
														"type": ""
													}
												],
												"src": "3553:126:7"
											},
											{
												"body": {
													"nativeSrc": "3759:66:7",
													"nodeType": "YulBlock",
													"src": "3759:66:7",
													"statements": [
														{
															"nativeSrc": "3769:50:7",
															"nodeType": "YulAssignment",
															"src": "3769:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3813:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3813:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3782:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3782:30:7"
																},
																"nativeSrc": "3782:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3782:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3769:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3769:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$775_to_t_address",
												"nativeSrc": "3685:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3739:5:7",
														"nodeType": "YulTypedName",
														"src": "3739:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3749:9:7",
														"nodeType": "YulTypedName",
														"src": "3749:9:7",
														"type": ""
													}
												],
												"src": "3685:140:7"
											},
											{
												"body": {
													"nativeSrc": "3910:80:7",
													"nodeType": "YulBlock",
													"src": "3910:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3927:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3927:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3977:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3977:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$775_to_t_address",
																			"nativeSrc": "3932:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "3932:44:7"
																		},
																		"nativeSrc": "3932:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3932:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3920:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:7"
																},
																"nativeSrc": "3920:64:7",
																"nodeType": "YulFunctionCall",
																"src": "3920:64:7"
															},
															"nativeSrc": "3920:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "3920:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$775_to_t_address_fromStack",
												"nativeSrc": "3831:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3898:5:7",
														"nodeType": "YulTypedName",
														"src": "3898:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3905:3:7",
														"nodeType": "YulTypedName",
														"src": "3905:3:7",
														"type": ""
													}
												],
												"src": "3831:159:7"
											},
											{
												"body": {
													"nativeSrc": "4108:138:7",
													"nodeType": "YulBlock",
													"src": "4108:138:7",
													"statements": [
														{
															"nativeSrc": "4118:26:7",
															"nodeType": "YulAssignment",
															"src": "4118:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4130:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4130:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4141:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4141:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4126:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4126:3:7"
																},
																"nativeSrc": "4126:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4126:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4118:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4212:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4212:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4225:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4225:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4236:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4236:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4221:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4221:3:7"
																		},
																		"nativeSrc": "4221:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4221:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$775_to_t_address_fromStack",
																	"nativeSrc": "4154:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "4154:57:7"
																},
																"nativeSrc": "4154:85:7",
																"nodeType": "YulFunctionCall",
																"src": "4154:85:7"
															},
															"nativeSrc": "4154:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "4154:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$775__to_t_address__fromStack_reversed",
												"nativeSrc": "3996:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:7",
														"nodeType": "YulTypedName",
														"src": "4080:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4092:6:7",
														"nodeType": "YulTypedName",
														"src": "4092:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4103:4:7",
														"nodeType": "YulTypedName",
														"src": "4103:4:7",
														"type": ""
													}
												],
												"src": "3996:250:7"
											},
											{
												"body": {
													"nativeSrc": "4317:53:7",
													"nodeType": "YulBlock",
													"src": "4317:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4334:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4334:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4357:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4357:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4339:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "4339:17:7"
																		},
																		"nativeSrc": "4339:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4339:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4327:6:7"
																},
																"nativeSrc": "4327:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4327:37:7"
															},
															"nativeSrc": "4327:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "4327:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4252:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4305:5:7",
														"nodeType": "YulTypedName",
														"src": "4305:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4312:3:7",
														"nodeType": "YulTypedName",
														"src": "4312:3:7",
														"type": ""
													}
												],
												"src": "4252:118:7"
											},
											{
												"body": {
													"nativeSrc": "4474:124:7",
													"nodeType": "YulBlock",
													"src": "4474:124:7",
													"statements": [
														{
															"nativeSrc": "4484:26:7",
															"nodeType": "YulAssignment",
															"src": "4484:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4496:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4496:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4507:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4507:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4492:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4492:3:7"
																},
																"nativeSrc": "4492:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4492:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4484:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4484:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4564:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4564:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4577:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4577:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4588:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4588:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4573:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4573:3:7"
																		},
																		"nativeSrc": "4573:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4573:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4520:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4520:43:7"
																},
																"nativeSrc": "4520:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4520:71:7"
															},
															"nativeSrc": "4520:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4520:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4376:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4446:9:7",
														"nodeType": "YulTypedName",
														"src": "4446:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4458:6:7",
														"nodeType": "YulTypedName",
														"src": "4458:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4469:4:7",
														"nodeType": "YulTypedName",
														"src": "4469:4:7",
														"type": ""
													}
												],
												"src": "4376:222:7"
											},
											{
												"body": {
													"nativeSrc": "4704:519:7",
													"nodeType": "YulBlock",
													"src": "4704:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4750:83:7",
																"nodeType": "YulBlock",
																"src": "4750:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4752:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4752:77:7"
																			},
																			"nativeSrc": "4752:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4752:79:7"
																		},
																		"nativeSrc": "4752:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4752:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4725:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4725:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4734:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4734:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4721:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4721:3:7"
																		},
																		"nativeSrc": "4721:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4721:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4746:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4746:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4717:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4717:3:7"
																},
																"nativeSrc": "4717:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4717:32:7"
															},
															"nativeSrc": "4714:119:7",
															"nodeType": "YulIf",
															"src": "4714:119:7"
														},
														{
															"nativeSrc": "4843:117:7",
															"nodeType": "YulBlock",
															"src": "4843:117:7",
															"statements": [
																{
																	"nativeSrc": "4858:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4858:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4872:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4862:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4862:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4887:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4887:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4922:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4922:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4933:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4933:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4918:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4918:3:7"
																				},
																				"nativeSrc": "4918:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4918:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4942:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4942:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4897:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4897:20:7"
																		},
																		"nativeSrc": "4897:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4897:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4887:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4887:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4970:118:7",
															"nodeType": "YulBlock",
															"src": "4970:118:7",
															"statements": [
																{
																	"nativeSrc": "4985:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4985:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4999:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4999:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4989:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4989:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5015:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5015:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5050:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5050:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5061:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5061:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5046:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5046:3:7"
																				},
																				"nativeSrc": "5046:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5046:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5070:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5070:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5025:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5025:20:7"
																		},
																		"nativeSrc": "5025:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5025:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5015:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5015:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5098:118:7",
															"nodeType": "YulBlock",
															"src": "5098:118:7",
															"statements": [
																{
																	"nativeSrc": "5113:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5113:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5127:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5127:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5117:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5117:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5143:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5143:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5178:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5178:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5189:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5189:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5174:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5174:3:7"
																				},
																				"nativeSrc": "5174:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5174:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5198:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5198:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5153:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5153:20:7"
																		},
																		"nativeSrc": "5153:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5153:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5143:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5143:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4604:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4658:9:7",
														"nodeType": "YulTypedName",
														"src": "4658:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4669:7:7",
														"nodeType": "YulTypedName",
														"src": "4669:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4681:6:7",
														"nodeType": "YulTypedName",
														"src": "4681:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4689:6:7",
														"nodeType": "YulTypedName",
														"src": "4689:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4697:6:7",
														"nodeType": "YulTypedName",
														"src": "4697:6:7",
														"type": ""
													}
												],
												"src": "4604:619:7"
											},
											{
												"body": {
													"nativeSrc": "5272:43:7",
													"nodeType": "YulBlock",
													"src": "5272:43:7",
													"statements": [
														{
															"nativeSrc": "5282:27:7",
															"nodeType": "YulAssignment",
															"src": "5282:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5297:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5297:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5304:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5304:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5293:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5293:3:7"
																},
																"nativeSrc": "5293:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5293:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5282:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5282:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5229:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5254:5:7",
														"nodeType": "YulTypedName",
														"src": "5254:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5264:7:7",
														"nodeType": "YulTypedName",
														"src": "5264:7:7",
														"type": ""
													}
												],
												"src": "5229:86:7"
											},
											{
												"body": {
													"nativeSrc": "5382:51:7",
													"nodeType": "YulBlock",
													"src": "5382:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5399:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5399:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5420:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5420:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5404:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "5404:15:7"
																		},
																		"nativeSrc": "5404:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5404:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5392:6:7"
																},
																"nativeSrc": "5392:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5392:35:7"
															},
															"nativeSrc": "5392:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "5392:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5321:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5370:5:7",
														"nodeType": "YulTypedName",
														"src": "5370:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5377:3:7",
														"nodeType": "YulTypedName",
														"src": "5377:3:7",
														"type": ""
													}
												],
												"src": "5321:112:7"
											},
											{
												"body": {
													"nativeSrc": "5533:120:7",
													"nodeType": "YulBlock",
													"src": "5533:120:7",
													"statements": [
														{
															"nativeSrc": "5543:26:7",
															"nodeType": "YulAssignment",
															"src": "5543:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5555:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5555:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5566:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5551:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5551:3:7"
																},
																"nativeSrc": "5551:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5551:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5543:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5543:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5619:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5619:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5643:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5643:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5628:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5628:3:7"
																		},
																		"nativeSrc": "5628:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5628:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5579:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5579:39:7"
																},
																"nativeSrc": "5579:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5579:67:7"
															},
															"nativeSrc": "5579:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5579:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5439:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5505:9:7",
														"nodeType": "YulTypedName",
														"src": "5505:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5517:6:7",
														"nodeType": "YulTypedName",
														"src": "5517:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5528:4:7",
														"nodeType": "YulTypedName",
														"src": "5528:4:7",
														"type": ""
													}
												],
												"src": "5439:214:7"
											},
											{
												"body": {
													"nativeSrc": "5725:263:7",
													"nodeType": "YulBlock",
													"src": "5725:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5771:83:7",
																"nodeType": "YulBlock",
																"src": "5771:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5773:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5773:77:7"
																			},
																			"nativeSrc": "5773:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5773:79:7"
																		},
																		"nativeSrc": "5773:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5746:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5746:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5755:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5742:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:7"
																		},
																		"nativeSrc": "5742:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5742:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5767:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5767:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5738:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:7"
																},
																"nativeSrc": "5738:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5738:32:7"
															},
															"nativeSrc": "5735:119:7",
															"nodeType": "YulIf",
															"src": "5735:119:7"
														},
														{
															"nativeSrc": "5864:117:7",
															"nodeType": "YulBlock",
															"src": "5864:117:7",
															"statements": [
																{
																	"nativeSrc": "5879:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5879:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5893:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5893:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5883:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5883:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5908:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5908:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5943:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5943:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5954:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5954:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5939:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5939:3:7"
																				},
																				"nativeSrc": "5939:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5939:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5963:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5963:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5918:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5918:20:7"
																		},
																		"nativeSrc": "5918:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5918:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5908:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5908:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5659:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5695:9:7",
														"nodeType": "YulTypedName",
														"src": "5695:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5706:7:7",
														"nodeType": "YulTypedName",
														"src": "5706:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5718:6:7",
														"nodeType": "YulTypedName",
														"src": "5718:6:7",
														"type": ""
													}
												],
												"src": "5659:329:7"
											},
											{
												"body": {
													"nativeSrc": "6082:66:7",
													"nodeType": "YulBlock",
													"src": "6082:66:7",
													"statements": [
														{
															"nativeSrc": "6092:50:7",
															"nodeType": "YulAssignment",
															"src": "6092:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6136:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6136:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6105:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6105:30:7"
																},
																"nativeSrc": "6105:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6105:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6092:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6092:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
												"nativeSrc": "5994:154:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6062:5:7",
														"nodeType": "YulTypedName",
														"src": "6062:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6072:9:7",
														"nodeType": "YulTypedName",
														"src": "6072:9:7",
														"type": ""
													}
												],
												"src": "5994:154:7"
											},
											{
												"body": {
													"nativeSrc": "6247:94:7",
													"nodeType": "YulBlock",
													"src": "6247:94:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6264:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6264:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6328:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6328:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
																			"nativeSrc": "6269:58:7",
																			"nodeType": "YulIdentifier",
																			"src": "6269:58:7"
																		},
																		"nativeSrc": "6269:65:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6269:65:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6257:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6257:6:7"
																},
																"nativeSrc": "6257:78:7",
																"nodeType": "YulFunctionCall",
																"src": "6257:78:7"
															},
															"nativeSrc": "6257:78:7",
															"nodeType": "YulExpressionStatement",
															"src": "6257:78:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
												"nativeSrc": "6154:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:7",
														"nodeType": "YulTypedName",
														"src": "6235:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6242:3:7",
														"nodeType": "YulTypedName",
														"src": "6242:3:7",
														"type": ""
													}
												],
												"src": "6154:187:7"
											},
											{
												"body": {
													"nativeSrc": "6473:152:7",
													"nodeType": "YulBlock",
													"src": "6473:152:7",
													"statements": [
														{
															"nativeSrc": "6483:26:7",
															"nodeType": "YulAssignment",
															"src": "6483:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6495:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6495:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6506:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6506:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6491:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6491:3:7"
																},
																"nativeSrc": "6491:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6491:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6483:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6483:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6591:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6591:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6604:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6604:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6615:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6615:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6600:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:7"
																		},
																		"nativeSrc": "6600:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6600:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
																	"nativeSrc": "6519:71:7",
																	"nodeType": "YulIdentifier",
																	"src": "6519:71:7"
																},
																"nativeSrc": "6519:99:7",
																"nodeType": "YulFunctionCall",
																"src": "6519:99:7"
															},
															"nativeSrc": "6519:99:7",
															"nodeType": "YulExpressionStatement",
															"src": "6519:99:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "6347:278:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6445:9:7",
														"nodeType": "YulTypedName",
														"src": "6445:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6457:6:7",
														"nodeType": "YulTypedName",
														"src": "6457:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6468:4:7",
														"nodeType": "YulTypedName",
														"src": "6468:4:7",
														"type": ""
													}
												],
												"src": "6347:278:7"
											},
											{
												"body": {
													"nativeSrc": "6697:263:7",
													"nodeType": "YulBlock",
													"src": "6697:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6743:83:7",
																"nodeType": "YulBlock",
																"src": "6743:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6745:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6745:77:7"
																			},
																			"nativeSrc": "6745:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6745:79:7"
																		},
																		"nativeSrc": "6745:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6745:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6718:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6718:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6727:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6727:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6714:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6714:3:7"
																		},
																		"nativeSrc": "6714:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6714:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6739:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6739:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6710:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6710:3:7"
																},
																"nativeSrc": "6710:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6710:32:7"
															},
															"nativeSrc": "6707:119:7",
															"nodeType": "YulIf",
															"src": "6707:119:7"
														},
														{
															"nativeSrc": "6836:117:7",
															"nodeType": "YulBlock",
															"src": "6836:117:7",
															"statements": [
																{
																	"nativeSrc": "6851:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6851:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6865:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6865:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6855:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6855:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6880:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6880:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6915:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6915:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6926:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6926:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6911:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6911:3:7"
																				},
																				"nativeSrc": "6911:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6911:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6935:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6935:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6890:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6890:20:7"
																		},
																		"nativeSrc": "6890:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6890:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6880:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6880:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6631:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6667:9:7",
														"nodeType": "YulTypedName",
														"src": "6667:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6678:7:7",
														"nodeType": "YulTypedName",
														"src": "6678:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6690:6:7",
														"nodeType": "YulTypedName",
														"src": "6690:6:7",
														"type": ""
													}
												],
												"src": "6631:329:7"
											},
											{
												"body": {
													"nativeSrc": "7092:206:7",
													"nodeType": "YulBlock",
													"src": "7092:206:7",
													"statements": [
														{
															"nativeSrc": "7102:26:7",
															"nodeType": "YulAssignment",
															"src": "7102:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7114:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7114:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7125:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7110:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7110:3:7"
																},
																"nativeSrc": "7110:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7110:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7102:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7102:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7182:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7182:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7195:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7195:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7206:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7206:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7191:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7191:3:7"
																		},
																		"nativeSrc": "7191:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7191:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7138:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7138:43:7"
																},
																"nativeSrc": "7138:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7138:71:7"
															},
															"nativeSrc": "7138:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7138:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7263:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7276:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7276:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7287:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7287:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7272:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7272:3:7"
																		},
																		"nativeSrc": "7272:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7272:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7219:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7219:43:7"
																},
																"nativeSrc": "7219:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7219:72:7"
															},
															"nativeSrc": "7219:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7219:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6966:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7056:9:7",
														"nodeType": "YulTypedName",
														"src": "7056:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7068:6:7",
														"nodeType": "YulTypedName",
														"src": "7068:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7076:6:7",
														"nodeType": "YulTypedName",
														"src": "7076:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7087:4:7",
														"nodeType": "YulTypedName",
														"src": "7087:4:7",
														"type": ""
													}
												],
												"src": "6966:332:7"
											},
											{
												"body": {
													"nativeSrc": "7387:391:7",
													"nodeType": "YulBlock",
													"src": "7387:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7433:83:7",
																"nodeType": "YulBlock",
																"src": "7433:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7435:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7435:77:7"
																			},
																			"nativeSrc": "7435:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7435:79:7"
																		},
																		"nativeSrc": "7435:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7435:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7408:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7408:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7417:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7417:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7404:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7404:3:7"
																		},
																		"nativeSrc": "7404:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7404:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7429:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7429:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7400:3:7"
																},
																"nativeSrc": "7400:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7400:32:7"
															},
															"nativeSrc": "7397:119:7",
															"nodeType": "YulIf",
															"src": "7397:119:7"
														},
														{
															"nativeSrc": "7526:117:7",
															"nodeType": "YulBlock",
															"src": "7526:117:7",
															"statements": [
																{
																	"nativeSrc": "7541:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7541:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7555:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7545:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7545:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7570:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7570:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7605:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7605:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7616:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7616:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7601:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7601:3:7"
																				},
																				"nativeSrc": "7601:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7601:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7625:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7625:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7580:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7580:20:7"
																		},
																		"nativeSrc": "7580:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7580:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7570:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7570:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7653:118:7",
															"nodeType": "YulBlock",
															"src": "7653:118:7",
															"statements": [
																{
																	"nativeSrc": "7668:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7668:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7682:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7682:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7672:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7672:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7729:3:7"
																				},
																				"nativeSrc": "7729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7708:20:7"
																		},
																		"nativeSrc": "7708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7698:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "7304:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7349:9:7",
														"nodeType": "YulTypedName",
														"src": "7349:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7360:7:7",
														"nodeType": "YulTypedName",
														"src": "7360:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7372:6:7",
														"nodeType": "YulTypedName",
														"src": "7372:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7380:6:7",
														"nodeType": "YulTypedName",
														"src": "7380:6:7",
														"type": ""
													}
												],
												"src": "7304:474:7"
											},
											{
												"body": {
													"nativeSrc": "7867:391:7",
													"nodeType": "YulBlock",
													"src": "7867:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7913:83:7",
																"nodeType": "YulBlock",
																"src": "7913:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7915:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7915:77:7"
																			},
																			"nativeSrc": "7915:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7915:79:7"
																		},
																		"nativeSrc": "7915:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7915:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7888:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7888:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7897:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7897:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7884:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7884:3:7"
																		},
																		"nativeSrc": "7884:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7884:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7909:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7909:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7880:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7880:3:7"
																},
																"nativeSrc": "7880:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7880:32:7"
															},
															"nativeSrc": "7877:119:7",
															"nodeType": "YulIf",
															"src": "7877:119:7"
														},
														{
															"nativeSrc": "8006:117:7",
															"nodeType": "YulBlock",
															"src": "8006:117:7",
															"statements": [
																{
																	"nativeSrc": "8021:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8021:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8035:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8035:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8025:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8025:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8050:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8050:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8085:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8085:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8096:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8096:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8081:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8081:3:7"
																				},
																				"nativeSrc": "8081:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8081:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8105:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8105:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8060:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8060:20:7"
																		},
																		"nativeSrc": "8060:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8060:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8050:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8050:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8133:118:7",
															"nodeType": "YulBlock",
															"src": "8133:118:7",
															"statements": [
																{
																	"nativeSrc": "8148:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8148:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8162:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8162:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8152:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8152:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8178:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8178:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8213:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8213:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8224:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8224:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8209:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8209:3:7"
																				},
																				"nativeSrc": "8209:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8209:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8233:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8233:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8188:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8188:20:7"
																		},
																		"nativeSrc": "8188:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8188:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8178:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8178:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7784:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7829:9:7",
														"nodeType": "YulTypedName",
														"src": "7829:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7840:7:7",
														"nodeType": "YulTypedName",
														"src": "7840:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7852:6:7",
														"nodeType": "YulTypedName",
														"src": "7852:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7860:6:7",
														"nodeType": "YulTypedName",
														"src": "7860:6:7",
														"type": ""
													}
												],
												"src": "7784:474:7"
											},
											{
												"body": {
													"nativeSrc": "8292:152:7",
													"nodeType": "YulBlock",
													"src": "8292:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8309:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8309:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8312:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8312:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8302:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8302:6:7"
																},
																"nativeSrc": "8302:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8302:88:7"
															},
															"nativeSrc": "8302:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8302:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8406:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8406:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8409:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8409:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8399:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8399:6:7"
																},
																"nativeSrc": "8399:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8399:15:7"
															},
															"nativeSrc": "8399:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8399:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8430:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8430:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8433:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8433:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8423:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8423:6:7"
																},
																"nativeSrc": "8423:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8423:15:7"
															},
															"nativeSrc": "8423:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8423:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8264:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8264:180:7"
											},
											{
												"body": {
													"nativeSrc": "8501:269:7",
													"nodeType": "YulBlock",
													"src": "8501:269:7",
													"statements": [
														{
															"nativeSrc": "8511:22:7",
															"nodeType": "YulAssignment",
															"src": "8511:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8525:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8525:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8531:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8531:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8521:3:7"
																},
																"nativeSrc": "8521:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8521:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8511:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8511:6:7"
																}
															]
														},
														{
															"nativeSrc": "8542:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8542:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8572:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8572:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8578:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8578:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8568:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8568:3:7"
																},
																"nativeSrc": "8568:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8568:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8546:18:7",
																	"nodeType": "YulTypedName",
																	"src": "8546:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8619:51:7",
																"nodeType": "YulBlock",
																"src": "8619:51:7",
																"statements": [
																	{
																		"nativeSrc": "8633:27:7",
																		"nodeType": "YulAssignment",
																		"src": "8633:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8647:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8647:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8655:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8655:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8643:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8643:3:7"
																			},
																			"nativeSrc": "8643:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8643:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8633:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8633:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8599:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8599:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8592:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8592:6:7"
																},
																"nativeSrc": "8592:26:7",
																"nodeType": "YulFunctionCall",
																"src": "8592:26:7"
															},
															"nativeSrc": "8589:81:7",
															"nodeType": "YulIf",
															"src": "8589:81:7"
														},
														{
															"body": {
																"nativeSrc": "8722:42:7",
																"nodeType": "YulBlock",
																"src": "8722:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8736:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8736:16:7"
																			},
																			"nativeSrc": "8736:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8736:18:7"
																		},
																		"nativeSrc": "8736:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8736:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8686:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8686:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8709:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8709:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8717:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8717:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8706:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8706:2:7"
																		},
																		"nativeSrc": "8706:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8706:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8683:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8683:2:7"
																},
																"nativeSrc": "8683:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8683:38:7"
															},
															"nativeSrc": "8680:84:7",
															"nodeType": "YulIf",
															"src": "8680:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8450:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8485:4:7",
														"nodeType": "YulTypedName",
														"src": "8485:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8494:6:7",
														"nodeType": "YulTypedName",
														"src": "8494:6:7",
														"type": ""
													}
												],
												"src": "8450:320:7"
											},
											{
												"body": {
													"nativeSrc": "8820:61:7",
													"nodeType": "YulBlock",
													"src": "8820:61:7",
													"statements": [
														{
															"nativeSrc": "8830:45:7",
															"nodeType": "YulAssignment",
															"src": "8830:45:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8845:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8845:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8852:22:7",
																		"nodeType": "YulLiteral",
																		"src": "8852:22:7",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8841:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8841:3:7"
																},
																"nativeSrc": "8841:34:7",
																"nodeType": "YulFunctionCall",
																"src": "8841:34:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8830:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8830:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "8776:105:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8802:5:7",
														"nodeType": "YulTypedName",
														"src": "8802:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8812:7:7",
														"nodeType": "YulTypedName",
														"src": "8812:7:7",
														"type": ""
													}
												],
												"src": "8776:105:7"
											},
											{
												"body": {
													"nativeSrc": "8929:78:7",
													"nodeType": "YulBlock",
													"src": "8929:78:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8985:16:7",
																"nodeType": "YulBlock",
																"src": "8985:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8994:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8994:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8997:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8997:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8987:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8987:6:7"
																			},
																			"nativeSrc": "8987:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8987:12:7"
																		},
																		"nativeSrc": "8987:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8987:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8952:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8952:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8976:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8976:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "8959:16:7",
																					"nodeType": "YulIdentifier",
																					"src": "8959:16:7"
																				},
																				"nativeSrc": "8959:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8959:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8949:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8949:2:7"
																		},
																		"nativeSrc": "8949:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8949:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8942:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8942:6:7"
																},
																"nativeSrc": "8942:42:7",
																"nodeType": "YulFunctionCall",
																"src": "8942:42:7"
															},
															"nativeSrc": "8939:62:7",
															"nodeType": "YulIf",
															"src": "8939:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "8887:120:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8922:5:7",
														"nodeType": "YulTypedName",
														"src": "8922:5:7",
														"type": ""
													}
												],
												"src": "8887:120:7"
											},
											{
												"body": {
													"nativeSrc": "9075:79:7",
													"nodeType": "YulBlock",
													"src": "9075:79:7",
													"statements": [
														{
															"nativeSrc": "9085:22:7",
															"nodeType": "YulAssignment",
															"src": "9085:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9100:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9100:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9094:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9094:5:7"
																},
																"nativeSrc": "9094:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9094:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9085:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9085:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9142:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9142:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "9116:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "9116:25:7"
																},
																"nativeSrc": "9116:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9116:32:7"
															},
															"nativeSrc": "9116:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "9116:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "9013:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9053:6:7",
														"nodeType": "YulTypedName",
														"src": "9053:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9061:3:7",
														"nodeType": "YulTypedName",
														"src": "9061:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9069:5:7",
														"nodeType": "YulTypedName",
														"src": "9069:5:7",
														"type": ""
													}
												],
												"src": "9013:141:7"
											},
											{
												"body": {
													"nativeSrc": "9204:32:7",
													"nodeType": "YulBlock",
													"src": "9204:32:7",
													"statements": [
														{
															"nativeSrc": "9214:16:7",
															"nodeType": "YulAssignment",
															"src": "9214:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "9225:5:7",
																"nodeType": "YulIdentifier",
																"src": "9225:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9214:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9214:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "9160:76:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9186:5:7",
														"nodeType": "YulTypedName",
														"src": "9186:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9196:7:7",
														"nodeType": "YulTypedName",
														"src": "9196:7:7",
														"type": ""
													}
												],
												"src": "9160:76:7"
											},
											{
												"body": {
													"nativeSrc": "9284:78:7",
													"nodeType": "YulBlock",
													"src": "9284:78:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9340:16:7",
																"nodeType": "YulBlock",
																"src": "9340:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9349:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9349:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9352:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9352:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9342:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9342:6:7"
																			},
																			"nativeSrc": "9342:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9342:12:7"
																		},
																		"nativeSrc": "9342:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9342:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9307:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9307:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9331:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "9331:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "9314:16:7",
																					"nodeType": "YulIdentifier",
																					"src": "9314:16:7"
																				},
																				"nativeSrc": "9314:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9314:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9304:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9304:2:7"
																		},
																		"nativeSrc": "9304:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9304:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9297:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9297:6:7"
																},
																"nativeSrc": "9297:42:7",
																"nodeType": "YulFunctionCall",
																"src": "9297:42:7"
															},
															"nativeSrc": "9294:62:7",
															"nodeType": "YulIf",
															"src": "9294:62:7"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "9242:120:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9277:5:7",
														"nodeType": "YulTypedName",
														"src": "9277:5:7",
														"type": ""
													}
												],
												"src": "9242:120:7"
											},
											{
												"body": {
													"nativeSrc": "9430:79:7",
													"nodeType": "YulBlock",
													"src": "9430:79:7",
													"statements": [
														{
															"nativeSrc": "9440:22:7",
															"nodeType": "YulAssignment",
															"src": "9440:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9455:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9455:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9449:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9449:5:7"
																},
																"nativeSrc": "9449:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9449:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9440:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9440:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9497:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9497:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "9471:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "9471:25:7"
																},
																"nativeSrc": "9471:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9471:32:7"
															},
															"nativeSrc": "9471:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "9471:32:7"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "9368:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9408:6:7",
														"nodeType": "YulTypedName",
														"src": "9408:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9416:3:7",
														"nodeType": "YulTypedName",
														"src": "9416:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9424:5:7",
														"nodeType": "YulTypedName",
														"src": "9424:5:7",
														"type": ""
													}
												],
												"src": "9368:141:7"
											},
											{
												"body": {
													"nativeSrc": "9578:80:7",
													"nodeType": "YulBlock",
													"src": "9578:80:7",
													"statements": [
														{
															"nativeSrc": "9588:22:7",
															"nodeType": "YulAssignment",
															"src": "9588:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9603:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9603:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9597:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9597:5:7"
																},
																"nativeSrc": "9597:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9597:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9588:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9588:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9646:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9646:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "9619:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "9619:26:7"
																},
																"nativeSrc": "9619:33:7",
																"nodeType": "YulFunctionCall",
																"src": "9619:33:7"
															},
															"nativeSrc": "9619:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "9619:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "9515:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9556:6:7",
														"nodeType": "YulTypedName",
														"src": "9556:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9564:3:7",
														"nodeType": "YulTypedName",
														"src": "9564:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9572:5:7",
														"nodeType": "YulTypedName",
														"src": "9572:5:7",
														"type": ""
													}
												],
												"src": "9515:143:7"
											},
											{
												"body": {
													"nativeSrc": "9806:829:7",
													"nodeType": "YulBlock",
													"src": "9806:829:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9853:83:7",
																"nodeType": "YulBlock",
																"src": "9853:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9855:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9855:77:7"
																			},
																			"nativeSrc": "9855:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9855:79:7"
																		},
																		"nativeSrc": "9855:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9855:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9827:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9827:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9836:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9836:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9823:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9823:3:7"
																		},
																		"nativeSrc": "9823:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9823:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9848:3:7",
																		"nodeType": "YulLiteral",
																		"src": "9848:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9819:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9819:3:7"
																},
																"nativeSrc": "9819:33:7",
																"nodeType": "YulFunctionCall",
																"src": "9819:33:7"
															},
															"nativeSrc": "9816:120:7",
															"nodeType": "YulIf",
															"src": "9816:120:7"
														},
														{
															"nativeSrc": "9946:127:7",
															"nodeType": "YulBlock",
															"src": "9946:127:7",
															"statements": [
																{
																	"nativeSrc": "9961:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9961:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9975:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9975:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9965:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9965:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9990:73:7",
																	"nodeType": "YulAssignment",
																	"src": "9990:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10035:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10035:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10046:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10046:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10031:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10031:3:7"
																				},
																				"nativeSrc": "10031:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10031:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10055:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10055:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "10000:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "10000:30:7"
																		},
																		"nativeSrc": "10000:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10000:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9990:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9990:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10083:128:7",
															"nodeType": "YulBlock",
															"src": "10083:128:7",
															"statements": [
																{
																	"nativeSrc": "10098:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10098:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10112:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10112:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10102:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10102:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10128:73:7",
																	"nodeType": "YulAssignment",
																	"src": "10128:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10173:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10173:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10184:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10184:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10169:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10169:3:7"
																				},
																				"nativeSrc": "10169:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10169:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10193:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10193:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "10138:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "10138:30:7"
																		},
																		"nativeSrc": "10138:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10138:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10128:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10128:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10221:129:7",
															"nodeType": "YulBlock",
															"src": "10221:129:7",
															"statements": [
																{
																	"nativeSrc": "10236:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10236:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10250:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10250:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10240:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10240:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10266:74:7",
																	"nodeType": "YulAssignment",
																	"src": "10266:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10312:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10312:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10323:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10323:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10308:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10308:3:7"
																				},
																				"nativeSrc": "10308:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10308:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10332:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10332:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10276:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "10276:31:7"
																		},
																		"nativeSrc": "10276:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10276:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10266:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10266:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10360:129:7",
															"nodeType": "YulBlock",
															"src": "10360:129:7",
															"statements": [
																{
																	"nativeSrc": "10375:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10375:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10389:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10389:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10379:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10379:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10405:74:7",
																	"nodeType": "YulAssignment",
																	"src": "10405:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10451:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10451:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10462:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10462:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10447:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10447:3:7"
																				},
																				"nativeSrc": "10447:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10447:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10471:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10471:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10415:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "10415:31:7"
																		},
																		"nativeSrc": "10415:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10415:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10405:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10405:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10499:129:7",
															"nodeType": "YulBlock",
															"src": "10499:129:7",
															"statements": [
																{
																	"nativeSrc": "10514:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10514:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10528:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10528:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10518:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10518:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10545:73:7",
																	"nodeType": "YulAssignment",
																	"src": "10545:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10590:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10590:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10601:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10601:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10586:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10586:3:7"
																				},
																				"nativeSrc": "10586:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10586:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10610:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10610:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "10555:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "10555:30:7"
																		},
																		"nativeSrc": "10555:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10555:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10545:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10545:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "9664:971:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9744:9:7",
														"nodeType": "YulTypedName",
														"src": "9744:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9755:7:7",
														"nodeType": "YulTypedName",
														"src": "9755:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9767:6:7",
														"nodeType": "YulTypedName",
														"src": "9767:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9775:6:7",
														"nodeType": "YulTypedName",
														"src": "9775:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9783:6:7",
														"nodeType": "YulTypedName",
														"src": "9783:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9791:6:7",
														"nodeType": "YulTypedName",
														"src": "9791:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9799:6:7",
														"nodeType": "YulTypedName",
														"src": "9799:6:7",
														"type": ""
													}
												],
												"src": "9664:971:7"
											},
											{
												"body": {
													"nativeSrc": "10747:57:7",
													"nodeType": "YulBlock",
													"src": "10747:57:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10769:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10769:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10777:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10777:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10765:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10765:3:7"
																		},
																		"nativeSrc": "10765:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10765:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964207072696365",
																		"kind": "string",
																		"nativeSrc": "10781:15:7",
																		"nodeType": "YulLiteral",
																		"src": "10781:15:7",
																		"type": "",
																		"value": "Invalid price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10758:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10758:6:7"
																},
																"nativeSrc": "10758:39:7",
																"nodeType": "YulFunctionCall",
																"src": "10758:39:7"
															},
															"nativeSrc": "10758:39:7",
															"nodeType": "YulExpressionStatement",
															"src": "10758:39:7"
														}
													]
												},
												"name": "store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
												"nativeSrc": "10641:163:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10739:6:7",
														"nodeType": "YulTypedName",
														"src": "10739:6:7",
														"type": ""
													}
												],
												"src": "10641:163:7"
											},
											{
												"body": {
													"nativeSrc": "10956:220:7",
													"nodeType": "YulBlock",
													"src": "10956:220:7",
													"statements": [
														{
															"nativeSrc": "10966:74:7",
															"nodeType": "YulAssignment",
															"src": "10966:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11032:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11032:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11037:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11037:2:7",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10973:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10973:58:7"
																},
																"nativeSrc": "10973:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10973:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10966:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10966:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11138:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11138:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																	"nativeSrc": "11049:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11049:88:7"
																},
																"nativeSrc": "11049:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11049:93:7"
															},
															"nativeSrc": "11049:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11049:93:7"
														},
														{
															"nativeSrc": "11151:19:7",
															"nodeType": "YulAssignment",
															"src": "11151:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11162:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11162:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11167:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11167:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11158:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11158:3:7"
																},
																"nativeSrc": "11158:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11158:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11151:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11151:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10810:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10944:3:7",
														"nodeType": "YulTypedName",
														"src": "10944:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10952:3:7",
														"nodeType": "YulTypedName",
														"src": "10952:3:7",
														"type": ""
													}
												],
												"src": "10810:366:7"
											},
											{
												"body": {
													"nativeSrc": "11353:248:7",
													"nodeType": "YulBlock",
													"src": "11353:248:7",
													"statements": [
														{
															"nativeSrc": "11363:26:7",
															"nodeType": "YulAssignment",
															"src": "11363:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11375:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11375:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11386:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11386:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11371:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11371:3:7"
																},
																"nativeSrc": "11371:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11371:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11363:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11363:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11410:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11410:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11421:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11421:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11406:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11406:3:7"
																		},
																		"nativeSrc": "11406:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11406:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11429:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11429:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11435:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11435:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11425:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11425:3:7"
																		},
																		"nativeSrc": "11425:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11425:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11399:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11399:6:7"
																},
																"nativeSrc": "11399:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11399:47:7"
															},
															"nativeSrc": "11399:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11399:47:7"
														},
														{
															"nativeSrc": "11455:139:7",
															"nodeType": "YulAssignment",
															"src": "11455:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11589:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11589:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11463:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11463:124:7"
																},
																"nativeSrc": "11463:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11463:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11455:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11455:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11182:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11333:9:7",
														"nodeType": "YulTypedName",
														"src": "11333:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11348:4:7",
														"nodeType": "YulTypedName",
														"src": "11348:4:7",
														"type": ""
													}
												],
												"src": "11182:419:7"
											},
											{
												"body": {
													"nativeSrc": "11635:152:7",
													"nodeType": "YulBlock",
													"src": "11635:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11652:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11652:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11655:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11655:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11645:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11645:6:7"
																},
																"nativeSrc": "11645:88:7",
																"nodeType": "YulFunctionCall",
																"src": "11645:88:7"
															},
															"nativeSrc": "11645:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "11645:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11749:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11749:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11752:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11752:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11742:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11742:6:7"
																},
																"nativeSrc": "11742:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11742:15:7"
															},
															"nativeSrc": "11742:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11742:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11773:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11773:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11776:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11776:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11766:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11766:6:7"
																},
																"nativeSrc": "11766:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11766:15:7"
															},
															"nativeSrc": "11766:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11766:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11607:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "11607:180:7"
											},
											{
												"body": {
													"nativeSrc": "11821:152:7",
													"nodeType": "YulBlock",
													"src": "11821:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11838:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11838:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11841:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11841:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11831:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11831:6:7"
																},
																"nativeSrc": "11831:88:7",
																"nodeType": "YulFunctionCall",
																"src": "11831:88:7"
															},
															"nativeSrc": "11831:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "11831:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11935:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11935:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11938:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11938:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11928:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11928:6:7"
																},
																"nativeSrc": "11928:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11928:15:7"
															},
															"nativeSrc": "11928:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11928:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11962:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11962:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11952:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11952:6:7"
																},
																"nativeSrc": "11952:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11952:15:7"
															},
															"nativeSrc": "11952:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11952:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11793:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "11793:180:7"
											},
											{
												"body": {
													"nativeSrc": "12020:344:7",
													"nodeType": "YulBlock",
													"src": "12020:344:7",
													"statements": [
														{
															"nativeSrc": "12030:24:7",
															"nodeType": "YulAssignment",
															"src": "12030:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12052:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12052:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "12035:16:7",
																	"nodeType": "YulIdentifier",
																	"src": "12035:16:7"
																},
																"nativeSrc": "12035:19:7",
																"nodeType": "YulFunctionCall",
																"src": "12035:19:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12030:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12030:1:7"
																}
															]
														},
														{
															"nativeSrc": "12063:24:7",
															"nodeType": "YulAssignment",
															"src": "12063:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12085:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12085:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "12068:16:7",
																	"nodeType": "YulIdentifier",
																	"src": "12068:16:7"
																},
																"nativeSrc": "12068:19:7",
																"nodeType": "YulFunctionCall",
																"src": "12068:19:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12063:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12063:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12109:22:7",
																"nodeType": "YulBlock",
																"src": "12109:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12111:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12111:16:7"
																			},
																			"nativeSrc": "12111:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12111:18:7"
																		},
																		"nativeSrc": "12111:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12111:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12106:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12106:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12099:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12099:6:7"
																},
																"nativeSrc": "12099:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12099:9:7"
															},
															"nativeSrc": "12096:35:7",
															"nodeType": "YulIf",
															"src": "12096:35:7"
														},
														{
															"body": {
																"nativeSrc": "12311:22:7",
																"nodeType": "YulBlock",
																"src": "12311:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12313:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12313:16:7"
																			},
																			"nativeSrc": "12313:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12313:18:7"
																		},
																		"nativeSrc": "12313:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12313:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "12200:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "12200:1:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12203:66:7",
																				"nodeType": "YulLiteral",
																				"src": "12203:66:7",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12197:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "12197:2:7"
																		},
																		"nativeSrc": "12197:73:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12197:73:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "12287:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "12287:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12294:1:7",
																						"nodeType": "YulLiteral",
																						"src": "12294:1:7",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12297:1:7",
																						"nodeType": "YulLiteral",
																						"src": "12297:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12290:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12290:3:7"
																				},
																				"nativeSrc": "12290:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12290:9:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12284:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "12284:2:7"
																		},
																		"nativeSrc": "12284:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12284:16:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12180:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12180:3:7"
																},
																"nativeSrc": "12180:130:7",
																"nodeType": "YulFunctionCall",
																"src": "12180:130:7"
															},
															"nativeSrc": "12177:156:7",
															"nodeType": "YulIf",
															"src": "12177:156:7"
														},
														{
															"nativeSrc": "12343:15:7",
															"nodeType": "YulAssignment",
															"src": "12343:15:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12353:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12353:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12356:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12356:1:7"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nativeSrc": "12348:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12348:4:7"
																},
																"nativeSrc": "12348:10:7",
																"nodeType": "YulFunctionCall",
																"src": "12348:10:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12343:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12343:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nativeSrc": "11979:385:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12009:1:7",
														"nodeType": "YulTypedName",
														"src": "12009:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12012:1:7",
														"nodeType": "YulTypedName",
														"src": "12012:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12018:1:7",
														"nodeType": "YulTypedName",
														"src": "12018:1:7",
														"type": ""
													}
												],
												"src": "11979:385:7"
											},
											{
												"body": {
													"nativeSrc": "12418:362:7",
													"nodeType": "YulBlock",
													"src": "12418:362:7",
													"statements": [
														{
															"nativeSrc": "12428:25:7",
															"nodeType": "YulAssignment",
															"src": "12428:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12451:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12451:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12433:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12433:17:7"
																},
																"nativeSrc": "12433:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12433:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12428:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12428:1:7"
																}
															]
														},
														{
															"nativeSrc": "12462:25:7",
															"nodeType": "YulAssignment",
															"src": "12462:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12485:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12485:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12467:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12467:17:7"
																},
																"nativeSrc": "12467:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12467:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12462:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12462:1:7"
																}
															]
														},
														{
															"nativeSrc": "12496:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12496:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12519:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12519:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12522:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12522:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12515:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12515:3:7"
																},
																"nativeSrc": "12515:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12515:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12500:11:7",
																	"nodeType": "YulTypedName",
																	"src": "12500:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12533:41:7",
															"nodeType": "YulAssignment",
															"src": "12533:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12562:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "12562:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12544:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12544:17:7"
																},
																"nativeSrc": "12544:30:7",
																"nodeType": "YulFunctionCall",
																"src": "12544:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12533:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "12533:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12751:22:7",
																"nodeType": "YulBlock",
																"src": "12751:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12753:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12753:16:7"
																			},
																			"nativeSrc": "12753:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12753:18:7"
																		},
																		"nativeSrc": "12753:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12753:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12684:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "12684:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12677:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "12677:6:7"
																				},
																				"nativeSrc": "12677:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12677:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12707:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "12707:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12714:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "12714:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12723:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "12723:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12710:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "12710:3:7"
																						},
																						"nativeSrc": "12710:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "12710:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12704:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "12704:2:7"
																				},
																				"nativeSrc": "12704:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12704:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12657:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "12657:2:7"
																		},
																		"nativeSrc": "12657:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12657:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12637:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12637:6:7"
																},
																"nativeSrc": "12637:113:7",
																"nodeType": "YulFunctionCall",
																"src": "12637:113:7"
															},
															"nativeSrc": "12634:139:7",
															"nodeType": "YulIf",
															"src": "12634:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12370:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12401:1:7",
														"nodeType": "YulTypedName",
														"src": "12401:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12404:1:7",
														"nodeType": "YulTypedName",
														"src": "12404:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12410:7:7",
														"nodeType": "YulTypedName",
														"src": "12410:7:7",
														"type": ""
													}
												],
												"src": "12370:410:7"
											},
											{
												"body": {
													"nativeSrc": "12828:143:7",
													"nodeType": "YulBlock",
													"src": "12828:143:7",
													"statements": [
														{
															"nativeSrc": "12838:25:7",
															"nodeType": "YulAssignment",
															"src": "12838:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12861:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12861:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12843:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12843:17:7"
																},
																"nativeSrc": "12843:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12843:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12838:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12838:1:7"
																}
															]
														},
														{
															"nativeSrc": "12872:25:7",
															"nodeType": "YulAssignment",
															"src": "12872:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12895:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12895:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12877:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12877:17:7"
																},
																"nativeSrc": "12877:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12877:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12872:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12872:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12919:22:7",
																"nodeType": "YulBlock",
																"src": "12919:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12921:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12921:16:7"
																			},
																			"nativeSrc": "12921:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12921:18:7"
																		},
																		"nativeSrc": "12921:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12921:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12916:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12916:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12909:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12909:6:7"
																},
																"nativeSrc": "12909:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12909:9:7"
															},
															"nativeSrc": "12906:35:7",
															"nodeType": "YulIf",
															"src": "12906:35:7"
														},
														{
															"nativeSrc": "12951:14:7",
															"nodeType": "YulAssignment",
															"src": "12951:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12960:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12960:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12963:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12963:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12956:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12956:3:7"
																},
																"nativeSrc": "12956:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12956:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12951:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12951:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12786:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12817:1:7",
														"nodeType": "YulTypedName",
														"src": "12817:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12820:1:7",
														"nodeType": "YulTypedName",
														"src": "12820:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12826:1:7",
														"nodeType": "YulTypedName",
														"src": "12826:1:7",
														"type": ""
													}
												],
												"src": "12786:185:7"
											},
											{
												"body": {
													"nativeSrc": "13083:55:7",
													"nodeType": "YulBlock",
													"src": "13083:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13105:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13105:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13113:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13113:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13101:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13101:3:7"
																		},
																		"nativeSrc": "13101:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13101:14:7"
																	},
																	{
																		"hexValue": "5a45524f20414d4f554e54",
																		"kind": "string",
																		"nativeSrc": "13117:13:7",
																		"nodeType": "YulLiteral",
																		"src": "13117:13:7",
																		"type": "",
																		"value": "ZERO AMOUNT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13094:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13094:6:7"
																},
																"nativeSrc": "13094:37:7",
																"nodeType": "YulFunctionCall",
																"src": "13094:37:7"
															},
															"nativeSrc": "13094:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "13094:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a",
												"nativeSrc": "12977:161:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13075:6:7",
														"nodeType": "YulTypedName",
														"src": "13075:6:7",
														"type": ""
													}
												],
												"src": "12977:161:7"
											},
											{
												"body": {
													"nativeSrc": "13290:220:7",
													"nodeType": "YulBlock",
													"src": "13290:220:7",
													"statements": [
														{
															"nativeSrc": "13300:74:7",
															"nodeType": "YulAssignment",
															"src": "13300:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13366:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13371:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13371:2:7",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13307:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13307:58:7"
																},
																"nativeSrc": "13307:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13307:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13300:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13300:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13472:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13472:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a",
																	"nativeSrc": "13383:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13383:88:7"
																},
																"nativeSrc": "13383:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13383:93:7"
															},
															"nativeSrc": "13383:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13383:93:7"
														},
														{
															"nativeSrc": "13485:19:7",
															"nodeType": "YulAssignment",
															"src": "13485:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13496:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13496:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13501:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13501:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13492:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13492:3:7"
																},
																"nativeSrc": "13492:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13492:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13485:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13485:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13144:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13278:3:7",
														"nodeType": "YulTypedName",
														"src": "13278:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13286:3:7",
														"nodeType": "YulTypedName",
														"src": "13286:3:7",
														"type": ""
													}
												],
												"src": "13144:366:7"
											},
											{
												"body": {
													"nativeSrc": "13687:248:7",
													"nodeType": "YulBlock",
													"src": "13687:248:7",
													"statements": [
														{
															"nativeSrc": "13697:26:7",
															"nodeType": "YulAssignment",
															"src": "13697:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13709:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13709:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13720:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13720:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13705:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13705:3:7"
																},
																"nativeSrc": "13705:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13705:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13697:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13697:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13744:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13744:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13755:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13755:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13740:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13740:3:7"
																		},
																		"nativeSrc": "13740:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13740:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13763:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13763:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13769:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13769:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13759:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13759:3:7"
																		},
																		"nativeSrc": "13759:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13759:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13733:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13733:6:7"
																},
																"nativeSrc": "13733:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13733:47:7"
															},
															"nativeSrc": "13733:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13733:47:7"
														},
														{
															"nativeSrc": "13789:139:7",
															"nodeType": "YulAssignment",
															"src": "13789:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13923:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13923:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13797:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13797:124:7"
																},
																"nativeSrc": "13797:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13797:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13789:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13789:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13516:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13667:9:7",
														"nodeType": "YulTypedName",
														"src": "13667:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13682:4:7",
														"nodeType": "YulTypedName",
														"src": "13682:4:7",
														"type": ""
													}
												],
												"src": "13516:419:7"
											},
											{
												"body": {
													"nativeSrc": "13986:149:7",
													"nodeType": "YulBlock",
													"src": "13986:149:7",
													"statements": [
														{
															"nativeSrc": "13996:25:7",
															"nodeType": "YulAssignment",
															"src": "13996:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14019:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14019:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14001:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14001:17:7"
																},
																"nativeSrc": "14001:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14001:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13996:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13996:1:7"
																}
															]
														},
														{
															"nativeSrc": "14030:25:7",
															"nodeType": "YulAssignment",
															"src": "14030:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14053:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14053:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14035:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14035:17:7"
																},
																"nativeSrc": "14035:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14035:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14030:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14030:1:7"
																}
															]
														},
														{
															"nativeSrc": "14064:17:7",
															"nodeType": "YulAssignment",
															"src": "14064:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14076:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14076:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14079:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14079:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14072:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14072:3:7"
																},
																"nativeSrc": "14072:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14072:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14064:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14064:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14106:22:7",
																"nodeType": "YulBlock",
																"src": "14106:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14108:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14108:16:7"
																			},
																			"nativeSrc": "14108:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14108:18:7"
																		},
																		"nativeSrc": "14108:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14108:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14097:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14097:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14103:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14103:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14094:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14094:2:7"
																},
																"nativeSrc": "14094:11:7",
																"nodeType": "YulFunctionCall",
																"src": "14094:11:7"
															},
															"nativeSrc": "14091:37:7",
															"nodeType": "YulIf",
															"src": "14091:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13941:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13972:1:7",
														"nodeType": "YulTypedName",
														"src": "13972:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13975:1:7",
														"nodeType": "YulTypedName",
														"src": "13975:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13981:4:7",
														"nodeType": "YulTypedName",
														"src": "13981:4:7",
														"type": ""
													}
												],
												"src": "13941:194:7"
											},
											{
												"body": {
													"nativeSrc": "14206:53:7",
													"nodeType": "YulBlock",
													"src": "14206:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14223:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14223:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14246:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14246:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "14228:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "14228:17:7"
																		},
																		"nativeSrc": "14228:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14228:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14216:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14216:6:7"
																},
																"nativeSrc": "14216:37:7",
																"nodeType": "YulFunctionCall",
																"src": "14216:37:7"
															},
															"nativeSrc": "14216:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "14216:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "14141:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14194:5:7",
														"nodeType": "YulTypedName",
														"src": "14194:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14201:3:7",
														"nodeType": "YulTypedName",
														"src": "14201:3:7",
														"type": ""
													}
												],
												"src": "14141:118:7"
											},
											{
												"body": {
													"nativeSrc": "14391:206:7",
													"nodeType": "YulBlock",
													"src": "14391:206:7",
													"statements": [
														{
															"nativeSrc": "14401:26:7",
															"nodeType": "YulAssignment",
															"src": "14401:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14413:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14413:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14424:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14424:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14409:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14409:3:7"
																},
																"nativeSrc": "14409:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14409:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14401:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14401:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14481:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14481:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14494:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14494:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14505:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14505:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14490:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14490:3:7"
																		},
																		"nativeSrc": "14490:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14490:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14437:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14437:43:7"
																},
																"nativeSrc": "14437:71:7",
																"nodeType": "YulFunctionCall",
																"src": "14437:71:7"
															},
															"nativeSrc": "14437:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "14437:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14562:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14562:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14575:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14575:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14586:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14586:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14571:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14571:3:7"
																		},
																		"nativeSrc": "14571:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14571:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14518:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14518:43:7"
																},
																"nativeSrc": "14518:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14518:72:7"
															},
															"nativeSrc": "14518:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14518:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14265:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14355:9:7",
														"nodeType": "YulTypedName",
														"src": "14355:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14367:6:7",
														"nodeType": "YulTypedName",
														"src": "14367:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14375:6:7",
														"nodeType": "YulTypedName",
														"src": "14375:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14386:4:7",
														"nodeType": "YulTypedName",
														"src": "14386:4:7",
														"type": ""
													}
												],
												"src": "14265:332:7"
											},
											{
												"body": {
													"nativeSrc": "14643:76:7",
													"nodeType": "YulBlock",
													"src": "14643:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "14697:16:7",
																"nodeType": "YulBlock",
																"src": "14697:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14706:1:7",
																					"nodeType": "YulLiteral",
																					"src": "14706:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14709:1:7",
																					"nodeType": "YulLiteral",
																					"src": "14709:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14699:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14699:6:7"
																			},
																			"nativeSrc": "14699:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14699:12:7"
																		},
																		"nativeSrc": "14699:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14699:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14666:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14666:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14688:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "14688:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14673:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "14673:14:7"
																				},
																				"nativeSrc": "14673:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14673:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14663:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "14663:2:7"
																		},
																		"nativeSrc": "14663:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14663:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14656:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14656:6:7"
																},
																"nativeSrc": "14656:40:7",
																"nodeType": "YulFunctionCall",
																"src": "14656:40:7"
															},
															"nativeSrc": "14653:60:7",
															"nodeType": "YulIf",
															"src": "14653:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14603:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14636:5:7",
														"nodeType": "YulTypedName",
														"src": "14636:5:7",
														"type": ""
													}
												],
												"src": "14603:116:7"
											},
											{
												"body": {
													"nativeSrc": "14785:77:7",
													"nodeType": "YulBlock",
													"src": "14785:77:7",
													"statements": [
														{
															"nativeSrc": "14795:22:7",
															"nodeType": "YulAssignment",
															"src": "14795:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14810:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14810:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14804:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "14804:5:7"
																},
																"nativeSrc": "14804:13:7",
																"nodeType": "YulFunctionCall",
																"src": "14804:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14795:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "14795:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14850:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14850:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14826:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "14826:23:7"
																},
																"nativeSrc": "14826:30:7",
																"nodeType": "YulFunctionCall",
																"src": "14826:30:7"
															},
															"nativeSrc": "14826:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "14826:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "14725:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14763:6:7",
														"nodeType": "YulTypedName",
														"src": "14763:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14771:3:7",
														"nodeType": "YulTypedName",
														"src": "14771:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14779:5:7",
														"nodeType": "YulTypedName",
														"src": "14779:5:7",
														"type": ""
													}
												],
												"src": "14725:137:7"
											},
											{
												"body": {
													"nativeSrc": "14942:271:7",
													"nodeType": "YulBlock",
													"src": "14942:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "14988:83:7",
																"nodeType": "YulBlock",
																"src": "14988:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14990:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "14990:77:7"
																			},
																			"nativeSrc": "14990:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14990:79:7"
																		},
																		"nativeSrc": "14990:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14990:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14963:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "14963:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14972:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14972:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14959:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14959:3:7"
																		},
																		"nativeSrc": "14959:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14959:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14984:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14984:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14955:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14955:3:7"
																},
																"nativeSrc": "14955:32:7",
																"nodeType": "YulFunctionCall",
																"src": "14955:32:7"
															},
															"nativeSrc": "14952:119:7",
															"nodeType": "YulIf",
															"src": "14952:119:7"
														},
														{
															"nativeSrc": "15081:125:7",
															"nodeType": "YulBlock",
															"src": "15081:125:7",
															"statements": [
																{
																	"nativeSrc": "15096:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15096:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15110:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15110:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15100:6:7",
																			"nodeType": "YulTypedName",
																			"src": "15100:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15125:71:7",
																	"nodeType": "YulAssignment",
																	"src": "15125:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15168:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "15168:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15179:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "15179:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15164:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "15164:3:7"
																				},
																				"nativeSrc": "15164:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15164:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15188:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "15188:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "15135:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "15135:28:7"
																		},
																		"nativeSrc": "15135:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15135:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15125:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "15125:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "14868:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14912:9:7",
														"nodeType": "YulTypedName",
														"src": "14912:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14923:7:7",
														"nodeType": "YulTypedName",
														"src": "14923:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14935:6:7",
														"nodeType": "YulTypedName",
														"src": "14935:6:7",
														"type": ""
													}
												],
												"src": "14868:345:7"
											},
											{
												"body": {
													"nativeSrc": "15325:69:7",
													"nodeType": "YulBlock",
													"src": "15325:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15347:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15347:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15355:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15355:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15343:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15343:3:7"
																		},
																		"nativeSrc": "15343:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15343:14:7"
																	},
																	{
																		"hexValue": "564e5354206d757374206d6174636820425443207072696365",
																		"kind": "string",
																		"nativeSrc": "15359:27:7",
																		"nodeType": "YulLiteral",
																		"src": "15359:27:7",
																		"type": "",
																		"value": "VNST must match BTC price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15336:6:7"
																},
																"nativeSrc": "15336:51:7",
																"nodeType": "YulFunctionCall",
																"src": "15336:51:7"
															},
															"nativeSrc": "15336:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "15336:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd",
												"nativeSrc": "15219:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15317:6:7",
														"nodeType": "YulTypedName",
														"src": "15317:6:7",
														"type": ""
													}
												],
												"src": "15219:175:7"
											},
											{
												"body": {
													"nativeSrc": "15546:220:7",
													"nodeType": "YulBlock",
													"src": "15546:220:7",
													"statements": [
														{
															"nativeSrc": "15556:74:7",
															"nodeType": "YulAssignment",
															"src": "15556:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15622:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15622:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15627:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15627:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15563:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15563:58:7"
																},
																"nativeSrc": "15563:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15563:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15556:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15556:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15728:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15728:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd",
																	"nativeSrc": "15639:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15639:88:7"
																},
																"nativeSrc": "15639:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15639:93:7"
															},
															"nativeSrc": "15639:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15639:93:7"
														},
														{
															"nativeSrc": "15741:19:7",
															"nodeType": "YulAssignment",
															"src": "15741:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15752:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15752:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15757:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15757:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15748:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15748:3:7"
																},
																"nativeSrc": "15748:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15748:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15741:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15741:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15400:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15534:3:7",
														"nodeType": "YulTypedName",
														"src": "15534:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15542:3:7",
														"nodeType": "YulTypedName",
														"src": "15542:3:7",
														"type": ""
													}
												],
												"src": "15400:366:7"
											},
											{
												"body": {
													"nativeSrc": "15943:248:7",
													"nodeType": "YulBlock",
													"src": "15943:248:7",
													"statements": [
														{
															"nativeSrc": "15953:26:7",
															"nodeType": "YulAssignment",
															"src": "15953:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15965:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15965:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15976:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15976:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15961:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15961:3:7"
																},
																"nativeSrc": "15961:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15961:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15953:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15953:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16000:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16000:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16011:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16011:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15996:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15996:3:7"
																		},
																		"nativeSrc": "15996:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15996:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16019:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16019:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16025:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16025:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16015:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16015:3:7"
																		},
																		"nativeSrc": "16015:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16015:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15989:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15989:6:7"
																},
																"nativeSrc": "15989:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15989:47:7"
															},
															"nativeSrc": "15989:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15989:47:7"
														},
														{
															"nativeSrc": "16045:139:7",
															"nodeType": "YulAssignment",
															"src": "16045:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16179:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16179:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16053:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16053:124:7"
																},
																"nativeSrc": "16053:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16053:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16045:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16045:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15772:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15923:9:7",
														"nodeType": "YulTypedName",
														"src": "15923:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15938:4:7",
														"nodeType": "YulTypedName",
														"src": "15938:4:7",
														"type": ""
													}
												],
												"src": "15772:419:7"
											},
											{
												"body": {
													"nativeSrc": "16351:288:7",
													"nodeType": "YulBlock",
													"src": "16351:288:7",
													"statements": [
														{
															"nativeSrc": "16361:26:7",
															"nodeType": "YulAssignment",
															"src": "16361:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16373:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16373:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16384:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16384:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16369:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16369:3:7"
																},
																"nativeSrc": "16369:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16369:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16361:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16361:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16441:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16441:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16454:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16454:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16465:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16465:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16450:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16450:3:7"
																		},
																		"nativeSrc": "16450:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16450:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16397:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "16397:43:7"
																},
																"nativeSrc": "16397:71:7",
																"nodeType": "YulFunctionCall",
																"src": "16397:71:7"
															},
															"nativeSrc": "16397:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "16397:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16522:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16522:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16535:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16535:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16546:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16546:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16531:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16531:3:7"
																		},
																		"nativeSrc": "16531:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16531:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16478:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "16478:43:7"
																},
																"nativeSrc": "16478:72:7",
																"nodeType": "YulFunctionCall",
																"src": "16478:72:7"
															},
															"nativeSrc": "16478:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "16478:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16604:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16604:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16617:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16617:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16628:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16628:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16613:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16613:3:7"
																		},
																		"nativeSrc": "16613:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16613:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16560:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "16560:43:7"
																},
																"nativeSrc": "16560:72:7",
																"nodeType": "YulFunctionCall",
																"src": "16560:72:7"
															},
															"nativeSrc": "16560:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "16560:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16197:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16307:9:7",
														"nodeType": "YulTypedName",
														"src": "16307:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16319:6:7",
														"nodeType": "YulTypedName",
														"src": "16319:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16327:6:7",
														"nodeType": "YulTypedName",
														"src": "16327:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16335:6:7",
														"nodeType": "YulTypedName",
														"src": "16335:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16346:4:7",
														"nodeType": "YulTypedName",
														"src": "16346:4:7",
														"type": ""
													}
												],
												"src": "16197:442:7"
											},
											{
												"body": {
													"nativeSrc": "16751:55:7",
													"nodeType": "YulBlock",
													"src": "16751:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16773:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16773:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16781:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16781:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16769:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16769:3:7"
																		},
																		"nativeSrc": "16769:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16769:14:7"
																	},
																	{
																		"hexValue": "5a45524f5f534841524553",
																		"kind": "string",
																		"nativeSrc": "16785:13:7",
																		"nodeType": "YulLiteral",
																		"src": "16785:13:7",
																		"type": "",
																		"value": "ZERO_SHARES"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16762:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16762:6:7"
																},
																"nativeSrc": "16762:37:7",
																"nodeType": "YulFunctionCall",
																"src": "16762:37:7"
															},
															"nativeSrc": "16762:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "16762:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f",
												"nativeSrc": "16645:161:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16743:6:7",
														"nodeType": "YulTypedName",
														"src": "16743:6:7",
														"type": ""
													}
												],
												"src": "16645:161:7"
											},
											{
												"body": {
													"nativeSrc": "16958:220:7",
													"nodeType": "YulBlock",
													"src": "16958:220:7",
													"statements": [
														{
															"nativeSrc": "16968:74:7",
															"nodeType": "YulAssignment",
															"src": "16968:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17034:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17034:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17039:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17039:2:7",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16975:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16975:58:7"
																},
																"nativeSrc": "16975:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16975:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16968:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16968:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17140:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17140:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f",
																	"nativeSrc": "17051:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "17051:88:7"
																},
																"nativeSrc": "17051:93:7",
																"nodeType": "YulFunctionCall",
																"src": "17051:93:7"
															},
															"nativeSrc": "17051:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "17051:93:7"
														},
														{
															"nativeSrc": "17153:19:7",
															"nodeType": "YulAssignment",
															"src": "17153:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17164:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17164:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17169:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17169:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17160:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17160:3:7"
																},
																"nativeSrc": "17160:12:7",
																"nodeType": "YulFunctionCall",
																"src": "17160:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17153:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17153:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16812:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16946:3:7",
														"nodeType": "YulTypedName",
														"src": "16946:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16954:3:7",
														"nodeType": "YulTypedName",
														"src": "16954:3:7",
														"type": ""
													}
												],
												"src": "16812:366:7"
											},
											{
												"body": {
													"nativeSrc": "17355:248:7",
													"nodeType": "YulBlock",
													"src": "17355:248:7",
													"statements": [
														{
															"nativeSrc": "17365:26:7",
															"nodeType": "YulAssignment",
															"src": "17365:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17377:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17377:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17388:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17388:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17373:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17373:3:7"
																},
																"nativeSrc": "17373:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17373:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17365:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17365:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17412:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17412:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17423:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17423:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17408:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17408:3:7"
																		},
																		"nativeSrc": "17408:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17408:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17431:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17431:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17437:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17437:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17427:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17427:3:7"
																		},
																		"nativeSrc": "17427:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17427:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17401:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17401:6:7"
																},
																"nativeSrc": "17401:47:7",
																"nodeType": "YulFunctionCall",
																"src": "17401:47:7"
															},
															"nativeSrc": "17401:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "17401:47:7"
														},
														{
															"nativeSrc": "17457:139:7",
															"nodeType": "YulAssignment",
															"src": "17457:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17591:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17591:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17465:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "17465:124:7"
																},
																"nativeSrc": "17465:131:7",
																"nodeType": "YulFunctionCall",
																"src": "17465:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17457:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17457:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17184:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17335:9:7",
														"nodeType": "YulTypedName",
														"src": "17335:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17350:4:7",
														"nodeType": "YulTypedName",
														"src": "17350:4:7",
														"type": ""
													}
												],
												"src": "17184:419:7"
											},
											{
												"body": {
													"nativeSrc": "17653:147:7",
													"nodeType": "YulBlock",
													"src": "17653:147:7",
													"statements": [
														{
															"nativeSrc": "17663:25:7",
															"nodeType": "YulAssignment",
															"src": "17663:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17686:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17686:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17668:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17668:17:7"
																},
																"nativeSrc": "17668:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17668:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17663:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17663:1:7"
																}
															]
														},
														{
															"nativeSrc": "17697:25:7",
															"nodeType": "YulAssignment",
															"src": "17697:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17720:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17720:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17702:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17702:17:7"
																},
																"nativeSrc": "17702:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17702:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17697:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17697:1:7"
																}
															]
														},
														{
															"nativeSrc": "17731:16:7",
															"nodeType": "YulAssignment",
															"src": "17731:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17742:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17742:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17745:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17745:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17738:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17738:3:7"
																},
																"nativeSrc": "17738:9:7",
																"nodeType": "YulFunctionCall",
																"src": "17738:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17731:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17731:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17771:22:7",
																"nodeType": "YulBlock",
																"src": "17771:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17773:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17773:16:7"
																			},
																			"nativeSrc": "17773:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17773:18:7"
																		},
																		"nativeSrc": "17773:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17773:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17763:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17763:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17766:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17766:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17760:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17760:2:7"
																},
																"nativeSrc": "17760:10:7",
																"nodeType": "YulFunctionCall",
																"src": "17760:10:7"
															},
															"nativeSrc": "17757:36:7",
															"nodeType": "YulIf",
															"src": "17757:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17609:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17640:1:7",
														"nodeType": "YulTypedName",
														"src": "17640:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17643:1:7",
														"nodeType": "YulTypedName",
														"src": "17643:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17649:3:7",
														"nodeType": "YulTypedName",
														"src": "17649:3:7",
														"type": ""
													}
												],
												"src": "17609:191:7"
											},
											{
												"body": {
													"nativeSrc": "17912:56:7",
													"nodeType": "YulBlock",
													"src": "17912:56:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17934:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17934:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17942:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17942:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17930:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17930:3:7"
																		},
																		"nativeSrc": "17930:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17930:14:7"
																	},
																	{
																		"hexValue": "5a45524f2041444452455353",
																		"kind": "string",
																		"nativeSrc": "17946:14:7",
																		"nodeType": "YulLiteral",
																		"src": "17946:14:7",
																		"type": "",
																		"value": "ZERO ADDRESS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17923:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17923:6:7"
																},
																"nativeSrc": "17923:38:7",
																"nodeType": "YulFunctionCall",
																"src": "17923:38:7"
															},
															"nativeSrc": "17923:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "17923:38:7"
														}
													]
												},
												"name": "store_literal_in_memory_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd",
												"nativeSrc": "17806:162:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17904:6:7",
														"nodeType": "YulTypedName",
														"src": "17904:6:7",
														"type": ""
													}
												],
												"src": "17806:162:7"
											},
											{
												"body": {
													"nativeSrc": "18120:220:7",
													"nodeType": "YulBlock",
													"src": "18120:220:7",
													"statements": [
														{
															"nativeSrc": "18130:74:7",
															"nodeType": "YulAssignment",
															"src": "18130:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18196:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18196:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18201:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18201:2:7",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18137:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "18137:58:7"
																},
																"nativeSrc": "18137:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18137:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18130:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18130:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18302:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18302:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd",
																	"nativeSrc": "18213:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "18213:88:7"
																},
																"nativeSrc": "18213:93:7",
																"nodeType": "YulFunctionCall",
																"src": "18213:93:7"
															},
															"nativeSrc": "18213:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "18213:93:7"
														},
														{
															"nativeSrc": "18315:19:7",
															"nodeType": "YulAssignment",
															"src": "18315:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18326:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18326:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18331:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18331:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18322:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18322:3:7"
																},
																"nativeSrc": "18322:12:7",
																"nodeType": "YulFunctionCall",
																"src": "18322:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18315:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18315:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17974:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18108:3:7",
														"nodeType": "YulTypedName",
														"src": "18108:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18116:3:7",
														"nodeType": "YulTypedName",
														"src": "18116:3:7",
														"type": ""
													}
												],
												"src": "17974:366:7"
											},
											{
												"body": {
													"nativeSrc": "18517:248:7",
													"nodeType": "YulBlock",
													"src": "18517:248:7",
													"statements": [
														{
															"nativeSrc": "18527:26:7",
															"nodeType": "YulAssignment",
															"src": "18527:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18539:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18539:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18550:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18550:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18535:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18535:3:7"
																},
																"nativeSrc": "18535:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18535:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18527:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18527:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18574:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18574:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18585:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18585:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18570:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18570:3:7"
																		},
																		"nativeSrc": "18570:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18570:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18593:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18593:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18599:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18599:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18589:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18589:3:7"
																		},
																		"nativeSrc": "18589:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18589:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18563:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18563:6:7"
																},
																"nativeSrc": "18563:47:7",
																"nodeType": "YulFunctionCall",
																"src": "18563:47:7"
															},
															"nativeSrc": "18563:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "18563:47:7"
														},
														{
															"nativeSrc": "18619:139:7",
															"nodeType": "YulAssignment",
															"src": "18619:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18753:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18753:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18627:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "18627:124:7"
																},
																"nativeSrc": "18627:131:7",
																"nodeType": "YulFunctionCall",
																"src": "18627:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18619:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18619:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18346:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18497:9:7",
														"nodeType": "YulTypedName",
														"src": "18497:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18512:4:7",
														"nodeType": "YulTypedName",
														"src": "18512:4:7",
														"type": ""
													}
												],
												"src": "18346:419:7"
											},
											{
												"body": {
													"nativeSrc": "18925:288:7",
													"nodeType": "YulBlock",
													"src": "18925:288:7",
													"statements": [
														{
															"nativeSrc": "18935:26:7",
															"nodeType": "YulAssignment",
															"src": "18935:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18947:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18947:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18958:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18958:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18943:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18943:3:7"
																},
																"nativeSrc": "18943:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18943:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18935:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18935:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19015:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19028:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19028:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19039:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19039:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19024:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19024:3:7"
																		},
																		"nativeSrc": "19024:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19024:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18971:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "18971:43:7"
																},
																"nativeSrc": "18971:71:7",
																"nodeType": "YulFunctionCall",
																"src": "18971:71:7"
															},
															"nativeSrc": "18971:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "18971:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19096:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19096:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19109:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19109:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19120:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19120:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19105:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19105:3:7"
																		},
																		"nativeSrc": "19105:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19105:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19052:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19052:43:7"
																},
																"nativeSrc": "19052:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19052:72:7"
															},
															"nativeSrc": "19052:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19052:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19178:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19178:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19191:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19191:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19202:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19202:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19187:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19187:3:7"
																		},
																		"nativeSrc": "19187:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19187:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19134:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19134:43:7"
																},
																"nativeSrc": "19134:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19134:72:7"
															},
															"nativeSrc": "19134:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19134:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18771:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18881:9:7",
														"nodeType": "YulTypedName",
														"src": "18881:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18893:6:7",
														"nodeType": "YulTypedName",
														"src": "18893:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18901:6:7",
														"nodeType": "YulTypedName",
														"src": "18901:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18909:6:7",
														"nodeType": "YulTypedName",
														"src": "18909:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18920:4:7",
														"nodeType": "YulTypedName",
														"src": "18920:4:7",
														"type": ""
													}
												],
												"src": "18771:442:7"
											},
											{
												"body": {
													"nativeSrc": "19317:124:7",
													"nodeType": "YulBlock",
													"src": "19317:124:7",
													"statements": [
														{
															"nativeSrc": "19327:26:7",
															"nodeType": "YulAssignment",
															"src": "19327:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19339:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19339:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19350:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19350:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19335:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19335:3:7"
																},
																"nativeSrc": "19335:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19335:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19327:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19327:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19407:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19407:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19420:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19420:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19431:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19431:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19416:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19416:3:7"
																		},
																		"nativeSrc": "19416:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19416:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19363:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19363:43:7"
																},
																"nativeSrc": "19363:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19363:71:7"
															},
															"nativeSrc": "19363:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19363:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "19219:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19289:9:7",
														"nodeType": "YulTypedName",
														"src": "19289:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19301:6:7",
														"nodeType": "YulTypedName",
														"src": "19301:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19312:4:7",
														"nodeType": "YulTypedName",
														"src": "19312:4:7",
														"type": ""
													}
												],
												"src": "19219:222:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$775_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$775_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$775_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$775__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$775_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price\")\n\n    }\n\n    function abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ZERO AMOUNT\")\n\n    }\n\n    function abi_encode_t_stringliteral_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"VNST must match BTC price\")\n\n    }\n\n    function abi_encode_t_stringliteral_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ZERO_SHARES\")\n\n    }\n\n    function abi_encode_t_stringliteral_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ZERO ADDRESS\")\n\n    }\n\n    function abi_encode_t_stringliteral_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"841": [
									{
										"length": 32,
										"start": 1186
									},
									{
										"length": 32,
										"start": 1995
									},
									{
										"length": 32,
										"start": 2405
									},
									{
										"length": 32,
										"start": 3187
									},
									{
										"length": 32,
										"start": 3364
									},
									{
										"length": 32,
										"start": 3480
									},
									{
										"length": 32,
										"start": 3524
									},
									{
										"length": 32,
										"start": 4104
									}
								],
								"844": [
									{
										"length": 32,
										"start": 2151
									},
									{
										"length": 32,
										"start": 2563
									},
									{
										"length": 32,
										"start": 3272
									},
									{
										"length": 32,
										"start": 3447
									},
									{
										"length": 32,
										"start": 3557
									},
									{
										"length": 32,
										"start": 4268
									}
								],
								"847": [
									{
										"length": 32,
										"start": 1233
									},
									{
										"length": 32,
										"start": 1603
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011f575f3560e01c806370a08231116100ab578063a9059cbb1161006f578063a9059cbb14610322578063d004f0f714610352578063d21220a714610382578063dd62ed3e146103a0578063ddca3f43146103d05761011f565b806370a0823114610255578063741bef1a1461028557806395d89b41146102a35780639c8f9f23146102c15780639cd441da146102f25761011f565b80631b712739116100f25780631b712739146101ad57806323b872dd146101cb578063313ce567146101fb578063443cb4bc146102195780635a76f25e146102375761011f565b806306fdde0314610123578063095ea7b3146101415780630dfe16811461017157806318160ddd1461018f575b5f80fd5b61012b6103ee565b60405161013891906118ea565b60405180910390f35b61015b6004803603810190610156919061199b565b61047e565b60405161016891906119f3565b60405180910390f35b6101796104a0565b6040516101869190611a67565b60405180910390f35b6101976104c4565b6040516101a49190611a8f565b60405180910390f35b6101b56104cd565b6040516101c29190611a8f565b60405180910390f35b6101e560048036038101906101e09190611aa8565b6105ba565b6040516101f291906119f3565b60405180910390f35b6102036105e8565b6040516102109190611b13565b60405180910390f35b6102216105f0565b60405161022e9190611a8f565b60405180910390f35b61023f6105f6565b60405161024c9190611a8f565b60405180910390f35b61026f600480360381019061026a9190611b2c565b6105fc565b60405161027c9190611a8f565b60405180910390f35b61028d610641565b60405161029a9190611b77565b60405180910390f35b6102ab610665565b6040516102b891906118ea565b60405180910390f35b6102db60048036038101906102d69190611b90565b6106f5565b6040516102e9929190611bbb565b60405180910390f35b61030c60048036038101906103079190611be2565b610906565b6040516103199190611a8f565b60405180910390f35b61033c6004803603810190610337919061199b565b610b9e565b60405161034991906119f3565b60405180910390f35b61036c6004803603810190610367919061199b565b610bc0565b6040516103799190611a8f565b60405180910390f35b61038a6110aa565b6040516103979190611a67565b60405180910390f35b6103ba60048036038101906103b59190611c20565b6110ce565b6040516103c79190611a8f565b60405180910390f35b6103d8611150565b6040516103e59190611a8f565b60405180910390f35b6060600380546103fd90611c8b565b80601f016020809104026020016040519081016040528092919081815260200182805461042990611c8b565b80156104745780601f1061044b57610100808354040283529160200191610474565b820191905f5260205f20905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b5f80610488611156565b905061049581858561115d565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600254905090565b5f807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610538573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055c9190611d41565b5050509150505f81136105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b90611e02565b60405180910390fd5b6305f5e100816105b49190611e7a565b91505090565b5f806105c4611156565b90506105d185828561116f565b6105dc858585611202565b60019150509392505050565b5f6012905090565b60065481565b60075481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60606004805461067490611c8b565b80601f01602080910402602001604051908101604052809291908181526020018280546106a090611c8b565b80156106eb5780601f106106c2576101008083540402835291602001916106eb565b820191905f5260205f20905b8154815290600101906020018083116106ce57829003601f168201915b5050505050905090565b5f806106ff6104c4565b6006548461070d9190611ee2565b6107179190611f23565b91506107216104c4565b6007548461072f9190611ee2565b6107399190611f23565b90505f8211801561074957505f81115b610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f90611f9d565b60405180910390fd5b6107a533670de0b6b3a7640000856107a09190611ee2565b6112f2565b6107c9826006546107b69190611fbb565b826007546107c49190611fbb565b611371565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610824929190611ffd565b6020604051808303815f875af1158015610840573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610864919061204e565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108c0929190611ffd565b6020604051808303815f875af11580156108dc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610900919061204e565b50915091565b5f806109106104cd565b90505f818461091f9190611ee2565b9050808514610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095a906120c3565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016109c0939291906120e1565b6020604051808303815f875af11580156109dc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a00919061204e565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610a5e939291906120e1565b6020604051808303815f875af1158015610a7a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a9e919061204e565b505f610aa86104c4565b03610ac857610ac18486610abc9190611ee2565b611383565b9250610b13565b610b10600654610ad66104c4565b87610ae19190611ee2565b610aeb9190611f23565b600754610af66104c4565b87610b019190611ee2565b610b0b9190611f23565b6113fa565b92505b5f8311610b55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4c90612160565b60405180910390fd5b610b7233670de0b6b3a764000085610b6d9190611ee2565b611413565b610b9685600654610b83919061217e565b85600754610b91919061217e565b611371565b505092915050565b5f80610ba8611156565b9050610bb5818585611202565b600191505092915050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c26906121fb565b60405180910390fd5b5f8211610c71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6890611f9d565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610d1657507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b610d1e575f80fd5b5f805f807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610dc2577f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000600754600654610e0b565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006006546007545b93509350935093508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b8152600401610e50939291906120e1565b6020604051808303815f875af1158015610e6c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e90919061204e565b505f6103e86005546103e8610ea59190611fbb565b88610eb09190611ee2565b610eba9190611f23565b90508082610ec8919061217e565b8184610ed49190611ee2565b610ede9190611f23565b95508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838a610f2a9190611fbb565b6040518363ffffffff1660e01b8152600401610f47929190611ffd565b6020604051808303815f875af1158015610f63573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f87919061204e565b508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33886040518363ffffffff1660e01b8152600401610fc3929190611ffd565b6020604051808303815f875af1158015610fdf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611003919061204e565b505f807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146110765787846110659190611fbb565b8386611071919061217e565b61108f565b8885611082919061217e565b888561108e9190611fbb565b5b9150915061109d8282611371565b5050505050505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60055481565b5f33905090565b61116a8383836001611492565b505050565b5f61117a84846110ce565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156111fc57818110156111ed578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111e493929190612219565b60405180910390fd5b6111fb84848484035f611492565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611272575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611269919061224e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112e2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112d9919061224e565b60405180910390fd5b6112ed838383611661565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611362575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611359919061224e565b60405180910390fd5b61136d825f83611661565b5050565b81600681905550806007819055505050565b5f60038211156113e8578190505f60016002846113a09190611f23565b6113aa919061217e565b90505b818110156113e25780915060028182856113c79190611f23565b6113d1919061217e565b6113db9190611f23565b90506113ad565b506113f5565b5f82146113f457600190505b5b919050565b5f81831115611409578161140b565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611483575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161147a919061224e565b60405180910390fd5b61148e5f8383611661565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611502575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114f9919061224e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611572575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611569919061224e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561165b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516116529190611a8f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116b1578060025f8282546116a5919061217e565b9250508190555061177f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561173a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161173193929190612219565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117c6578060025f8282540392505081905550611810565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161186d9190611a8f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6118bc8261187a565b6118c68185611884565b93506118d6818560208601611894565b6118df816118a2565b840191505092915050565b5f6020820190508181035f83015261190281846118b2565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119378261190e565b9050919050565b6119478161192d565b8114611951575f80fd5b50565b5f813590506119628161193e565b92915050565b5f819050919050565b61197a81611968565b8114611984575f80fd5b50565b5f8135905061199581611971565b92915050565b5f80604083850312156119b1576119b061190a565b5b5f6119be85828601611954565b92505060206119cf85828601611987565b9150509250929050565b5f8115159050919050565b6119ed816119d9565b82525050565b5f602082019050611a065f8301846119e4565b92915050565b5f819050919050565b5f611a2f611a2a611a258461190e565b611a0c565b61190e565b9050919050565b5f611a4082611a15565b9050919050565b5f611a5182611a36565b9050919050565b611a6181611a47565b82525050565b5f602082019050611a7a5f830184611a58565b92915050565b611a8981611968565b82525050565b5f602082019050611aa25f830184611a80565b92915050565b5f805f60608486031215611abf57611abe61190a565b5b5f611acc86828701611954565b9350506020611add86828701611954565b9250506040611aee86828701611987565b9150509250925092565b5f60ff82169050919050565b611b0d81611af8565b82525050565b5f602082019050611b265f830184611b04565b92915050565b5f60208284031215611b4157611b4061190a565b5b5f611b4e84828501611954565b91505092915050565b5f611b6182611a36565b9050919050565b611b7181611b57565b82525050565b5f602082019050611b8a5f830184611b68565b92915050565b5f60208284031215611ba557611ba461190a565b5b5f611bb284828501611987565b91505092915050565b5f604082019050611bce5f830185611a80565b611bdb6020830184611a80565b9392505050565b5f8060408385031215611bf857611bf761190a565b5b5f611c0585828601611987565b9250506020611c1685828601611987565b9150509250929050565b5f8060408385031215611c3657611c3561190a565b5b5f611c4385828601611954565b9250506020611c5485828601611954565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ca257607f821691505b602082108103611cb557611cb4611c5e565b5b50919050565b5f69ffffffffffffffffffff82169050919050565b611cd981611cbb565b8114611ce3575f80fd5b50565b5f81519050611cf481611cd0565b92915050565b5f819050919050565b611d0c81611cfa565b8114611d16575f80fd5b50565b5f81519050611d2781611d03565b92915050565b5f81519050611d3b81611971565b92915050565b5f805f805f60a08688031215611d5a57611d5961190a565b5b5f611d6788828901611ce6565b9550506020611d7888828901611d19565b9450506040611d8988828901611d2d565b9350506060611d9a88828901611d2d565b9250506080611dab88828901611ce6565b9150509295509295909350565b7f496e76616c6964207072696365000000000000000000000000000000000000005f82015250565b5f611dec600d83611884565b9150611df782611db8565b602082019050919050565b5f6020820190508181035f830152611e1981611de0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e8482611cfa565b9150611e8f83611cfa565b925082611e9f57611e9e611e20565b5b60015f0383147f800000000000000000000000000000000000000000000000000000000000000083141615611ed757611ed6611e4d565b5b828205905092915050565b5f611eec82611968565b9150611ef783611968565b9250828202611f0581611968565b91508282048414831517611f1c57611f1b611e4d565b5b5092915050565b5f611f2d82611968565b9150611f3883611968565b925082611f4857611f47611e20565b5b828204905092915050565b7f5a45524f20414d4f554e540000000000000000000000000000000000000000005f82015250565b5f611f87600b83611884565b9150611f9282611f53565b602082019050919050565b5f6020820190508181035f830152611fb481611f7b565b9050919050565b5f611fc582611968565b9150611fd083611968565b9250828203905081811115611fe857611fe7611e4d565b5b92915050565b611ff78161192d565b82525050565b5f6040820190506120105f830185611fee565b61201d6020830184611a80565b9392505050565b61202d816119d9565b8114612037575f80fd5b50565b5f8151905061204881612024565b92915050565b5f602082840312156120635761206261190a565b5b5f6120708482850161203a565b91505092915050565b7f564e5354206d757374206d6174636820425443207072696365000000000000005f82015250565b5f6120ad601983611884565b91506120b882612079565b602082019050919050565b5f6020820190508181035f8301526120da816120a1565b9050919050565b5f6060820190506120f45f830186611fee565b6121016020830185611fee565b61210e6040830184611a80565b949350505050565b7f5a45524f5f5348415245530000000000000000000000000000000000000000005f82015250565b5f61214a600b83611884565b915061215582612116565b602082019050919050565b5f6020820190508181035f8301526121778161213e565b9050919050565b5f61218882611968565b915061219383611968565b92508282019050808211156121ab576121aa611e4d565b5b92915050565b7f5a45524f204144445245535300000000000000000000000000000000000000005f82015250565b5f6121e5600c83611884565b91506121f0826121b1565b602082019050919050565b5f6020820190508181035f830152612212816121d9565b9050919050565b5f60608201905061222c5f830186611fee565b6122396020830185611a80565b6122466040830184611a80565b949350505050565b5f6020820190506122615f830184611fee565b9291505056fea264697066735822122001ba2baeb0ac6f3c71d1f741cf1a475e8bbe155b7359e076be4b164fb7b784e664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD004F0F7 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x3D0 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x2F2 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1B712739 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x1B712739 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x237 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1B13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1B2C JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP3 SWAP2 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1C20 JUMP JUMPDEST PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FD SWAP1 PUSH2 0x1C8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x429 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x488 PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP PUSH2 0x495 DUP2 DUP6 DUP6 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x538 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x1D41 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59B SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x5F5E100 DUP2 PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x1E7A JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5C4 PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D1 DUP6 DUP3 DUP6 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x5DC DUP6 DUP6 DUP6 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x674 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A0 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6FF PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP5 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0x717 SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST SWAP2 POP PUSH2 0x721 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP5 PUSH2 0x72F SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0x739 SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x749 JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP1 PUSH2 0x1F9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 CALLER PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x7C9 DUP3 PUSH1 0x6 SLOAD PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST DUP3 PUSH1 0x7 SLOAD PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH2 0x1371 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x840 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x864 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C0 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x910 PUSH2 0x4CD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 PUSH2 0x91F SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 EQ PUSH2 0x963 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95A SWAP1 PUSH2 0x20C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9DC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH0 PUSH2 0xAA8 PUSH2 0x4C4 JUMP JUMPDEST SUB PUSH2 0xAC8 JUMPI PUSH2 0xAC1 DUP5 DUP7 PUSH2 0xABC SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST SWAP3 POP PUSH2 0xB13 JUMP JUMPDEST PUSH2 0xB10 PUSH1 0x6 SLOAD PUSH2 0xAD6 PUSH2 0x4C4 JUMP JUMPDEST DUP8 PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xAF6 PUSH2 0x4C4 JUMP JUMPDEST DUP8 PUSH2 0xB01 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0xB0B SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x13FA JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 DUP4 GT PUSH2 0xB55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP1 PUSH2 0x2160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB72 CALLER PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0x1413 JUMP JUMPDEST PUSH2 0xB96 DUP6 PUSH1 0x6 SLOAD PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST DUP6 PUSH1 0x7 SLOAD PUSH2 0xB91 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH2 0x1371 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBA8 PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP PUSH2 0xBB5 DUP2 DUP6 DUP6 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC26 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC68 SWAP1 PUSH2 0x1F9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD16 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xD1E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDC2 JUMPI PUSH32 0x0 PUSH32 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0xE0B JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE50 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE6C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE90 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH0 PUSH2 0x3E8 PUSH1 0x5 SLOAD PUSH2 0x3E8 PUSH2 0xEA5 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST DUP9 PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0xEBA SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0xEC8 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST DUP2 DUP5 PUSH2 0xED4 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0xEDE SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST SWAP6 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP11 PUSH2 0xF2A SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF47 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF63 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF87 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFDF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1003 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1076 JUMPI DUP8 DUP5 PUSH2 0x1065 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST DUP4 DUP7 PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH2 0x108F JUMP JUMPDEST DUP9 DUP6 PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST DUP9 DUP6 PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x109D DUP3 DUP3 PUSH2 0x1371 JUMP JUMPDEST POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x116A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1492 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x117A DUP5 DUP5 PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x11FC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11ED JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11FB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1272 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1269 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D9 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12ED DUP4 DUP4 DUP4 PUSH2 0x1661 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1362 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1359 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x136D DUP3 PUSH0 DUP4 PUSH2 0x1661 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x13E8 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x13A0 SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x13AA SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13E2 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x13C7 SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x13D1 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH2 0x13DB SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST SWAP1 POP PUSH2 0x13AD JUMP JUMPDEST POP PUSH2 0x13F5 JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x13F4 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT ISZERO PUSH2 0x1409 JUMPI DUP2 PUSH2 0x140B JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1483 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147A SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148E PUSH0 DUP4 DUP4 PUSH2 0x1661 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1502 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F9 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1572 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1569 SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x165B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1652 SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x16A5 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x177F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x173A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1731 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17C6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1810 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x186D SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18BC DUP3 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x18C6 DUP2 DUP6 PUSH2 0x1884 JUMP JUMPDEST SWAP4 POP PUSH2 0x18D6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x18DF DUP2 PUSH2 0x18A2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1902 DUP2 DUP5 PUSH2 0x18B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1937 DUP3 PUSH2 0x190E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1947 DUP2 PUSH2 0x192D JUMP JUMPDEST DUP2 EQ PUSH2 0x1951 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1962 DUP2 PUSH2 0x193E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197A DUP2 PUSH2 0x1968 JUMP JUMPDEST DUP2 EQ PUSH2 0x1984 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1995 DUP2 PUSH2 0x1971 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B0 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19BE DUP6 DUP3 DUP7 ADD PUSH2 0x1954 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19CF DUP6 DUP3 DUP7 ADD PUSH2 0x1987 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19ED DUP2 PUSH2 0x19D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A06 PUSH0 DUP4 ADD DUP5 PUSH2 0x19E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2F PUSH2 0x1A2A PUSH2 0x1A25 DUP5 PUSH2 0x190E JUMP JUMPDEST PUSH2 0x1A0C JUMP JUMPDEST PUSH2 0x190E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A40 DUP3 PUSH2 0x1A15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A51 DUP3 PUSH2 0x1A36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A61 DUP2 PUSH2 0x1A47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A7A PUSH0 DUP4 ADD DUP5 PUSH2 0x1A58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A89 DUP2 PUSH2 0x1968 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ABF JUMPI PUSH2 0x1ABE PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACC DUP7 DUP3 DUP8 ADD PUSH2 0x1954 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1ADD DUP7 DUP3 DUP8 ADD PUSH2 0x1954 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AEE DUP7 DUP3 DUP8 ADD PUSH2 0x1987 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B0D DUP2 PUSH2 0x1AF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B26 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4E DUP5 DUP3 DUP6 ADD PUSH2 0x1954 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B61 DUP3 PUSH2 0x1A36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B71 DUP2 PUSH2 0x1B57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B8A PUSH0 DUP4 ADD DUP5 PUSH2 0x1B68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA5 JUMPI PUSH2 0x1BA4 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BB2 DUP5 DUP3 DUP6 ADD PUSH2 0x1987 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BCE PUSH0 DUP4 ADD DUP6 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x1BDB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BF8 JUMPI PUSH2 0x1BF7 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C05 DUP6 DUP3 DUP7 ADD PUSH2 0x1987 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C16 DUP6 DUP3 DUP7 ADD PUSH2 0x1987 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C36 JUMPI PUSH2 0x1C35 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C43 DUP6 DUP3 DUP7 ADD PUSH2 0x1954 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C54 DUP6 DUP3 DUP7 ADD PUSH2 0x1954 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CA2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CB5 JUMPI PUSH2 0x1CB4 PUSH2 0x1C5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD9 DUP2 PUSH2 0x1CBB JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF4 DUP2 PUSH2 0x1CD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0C DUP2 PUSH2 0x1CFA JUMP JUMPDEST DUP2 EQ PUSH2 0x1D16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D27 DUP2 PUSH2 0x1D03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D3B DUP2 PUSH2 0x1971 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D5A JUMPI PUSH2 0x1D59 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D67 DUP9 DUP3 DUP10 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D78 DUP9 DUP3 DUP10 ADD PUSH2 0x1D19 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1D89 DUP9 DUP3 DUP10 ADD PUSH2 0x1D2D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1D9A DUP9 DUP3 DUP10 ADD PUSH2 0x1D2D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1DAB DUP9 DUP3 DUP10 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DEC PUSH1 0xD DUP4 PUSH2 0x1884 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF7 DUP3 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E19 DUP2 PUSH2 0x1DE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E84 DUP3 PUSH2 0x1CFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E8F DUP4 PUSH2 0x1CFA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E9F JUMPI PUSH2 0x1E9E PUSH2 0x1E20 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x1ED7 JUMPI PUSH2 0x1ED6 PUSH2 0x1E4D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEC DUP3 PUSH2 0x1968 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF7 DUP4 PUSH2 0x1968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F05 DUP2 PUSH2 0x1968 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F1C JUMPI PUSH2 0x1F1B PUSH2 0x1E4D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F2D DUP3 PUSH2 0x1968 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F38 DUP4 PUSH2 0x1968 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F48 JUMPI PUSH2 0x1F47 PUSH2 0x1E20 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5A45524F20414D4F554E54000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F87 PUSH1 0xB DUP4 PUSH2 0x1884 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F92 DUP3 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FB4 DUP2 PUSH2 0x1F7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC5 DUP3 PUSH2 0x1968 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD0 DUP4 PUSH2 0x1968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1FE8 JUMPI PUSH2 0x1FE7 PUSH2 0x1E4D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FF7 DUP2 PUSH2 0x192D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2010 PUSH0 DUP4 ADD DUP6 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x201D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x202D DUP2 PUSH2 0x19D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2037 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2048 DUP2 PUSH2 0x2024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2063 JUMPI PUSH2 0x2062 PUSH2 0x190A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2070 DUP5 DUP3 DUP6 ADD PUSH2 0x203A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x564E5354206D757374206D617463682042544320707269636500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20AD PUSH1 0x19 DUP4 PUSH2 0x1884 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B8 DUP3 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20DA DUP2 PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20F4 PUSH0 DUP4 ADD DUP7 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x2101 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x210E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A45524F5F534841524553000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x214A PUSH1 0xB DUP4 PUSH2 0x1884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2155 DUP3 PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2177 DUP2 PUSH2 0x213E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2188 DUP3 PUSH2 0x1968 JUMP JUMPDEST SWAP2 POP PUSH2 0x2193 DUP4 PUSH2 0x1968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x21AB JUMPI PUSH2 0x21AA PUSH2 0x1E4D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5A45524F20414444524553530000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21E5 PUSH1 0xC DUP4 PUSH2 0x1884 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F0 DUP3 PUSH2 0x21B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2212 DUP2 PUSH2 0x21D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x222C PUSH0 DUP4 ADD DUP7 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x2239 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x2246 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2261 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xBA 0x2B 0xAE 0xB0 0xAC PUSH16 0x3C71D1F741CF1A475E8BBE155B7359E0 PUSH23 0xBE4B164FB7B784E664736F6C634300081A003300000000 ",
							"sourceMap": "255:3827:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;286:30:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1406:291:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;490:23:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;520;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;376:48:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3602:477:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2752:842;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1705:1039:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;331:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;451:22:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;286:30:6:-;;;:::o;2830:97:2:-;2882:7;2908:12;;2901:19;;2830:97;:::o;1406:291:6:-;1456:7;1507:12;1578:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1476:129;;;;;;1632:1;1624:5;:9;1616:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;1684:3;1677:5;:10;;;;:::i;:::-;1662:26;;;1406:291;:::o;4757:244:2:-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;490:23:6:-;;;;:::o;520:::-;;;;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;376:48:6:-;;;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3602:477:6:-;3662:15;3679;3740:13;:11;:13::i;:::-;3728:8;;3718:7;:18;;;;:::i;:::-;3717:36;;;;:::i;:::-;3707:46;;3797:13;:11;:13::i;:::-;3785:8;;3775:7;:18;;;;:::i;:::-;3774:36;;;;:::i;:::-;3764:46;;3839:1;3829:7;:11;:26;;;;;3854:1;3844:7;:11;3829:26;3821:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;3882:37;3888:10;3910:8;3900:7;:18;;;;:::i;:::-;3882:5;:37::i;:::-;3930:47;3949:7;3938:8;;:18;;;;:::i;:::-;3969:7;3958:8;;:18;;;;:::i;:::-;3930:7;:47::i;:::-;3988:6;:15;;;4004:10;4016:7;3988:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4035:6;:15;;;4051:10;4063:7;4035:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3602:477;;;:::o;2752:842::-;2828:14;2855:16;2874:19;:17;:19::i;:::-;2855:38;;2907:20;2942:8;2931;:19;;;;:::i;:::-;2907:45;;2983:12;2971:8;:24;2963:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3038:6;:19;;;3058:10;3078:4;3085:8;3038:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3105:6;:19;;;3125:10;3145:4;3152:8;3105:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3195:1;3178:13;:11;:13::i;:::-;:18;3174:259;;3222:26;3239:8;3228;:19;;;;:::i;:::-;3222:5;:26::i;:::-;3213:35;;3174:259;;;3290:131;3342:8;;3325:13;:11;:13::i;:::-;3314:8;:24;;;;:::i;:::-;3313:37;;;;:::i;:::-;3398:8;;3381:13;:11;:13::i;:::-;3370:8;:24;;;;:::i;:::-;3369:37;;;;:::i;:::-;3290:4;:131::i;:::-;3281:140;;3174:259;3462:1;3453:6;:10;3445:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;3490:36;3496:10;3517:8;3508:6;:17;;;;:::i;:::-;3490:5;:36::i;:::-;3537:49;3556:8;3545;;:19;;;;:::i;:::-;3577:8;3566;;:19;;;;:::i;:::-;3537:7;:49::i;:::-;2844:750;;2752:842;;;;:::o;3296:178:2:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;1705:1039:6:-;1774:17;1832:1;1812:22;;:8;:22;;;1804:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1882:1;1870:9;:13;1862:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;1938:6;1918:27;;:8;:27;;;:58;;;;1969:6;1949:27;;:8;:27;;;1918:58;1910:67;;;;;;1991:14;2007:15;2024:17;2043:18;2099:6;2079:27;;:8;:27;;;2078:107;;2150:6;2158;2166:8;;2176;;2078:107;;;2111:6;2119;2127:8;;2137;;2078:107;1990:195;;;;;;;;2198:7;:20;;;2219:10;2239:4;2246:9;2198:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2269:16;2317:4;2309:3;;2302:4;:10;;;;:::i;:::-;2289:9;:24;;;;:::i;:::-;2288:33;;;;:::i;:::-;2269:52;;2383:8;2370:10;:21;;;;:::i;:::-;2357:8;2345:9;:20;;;;:::i;:::-;2344:48;;;;:::i;:::-;2332:60;;2405:7;:16;;;2422:5;;;;;;;;;;;2441:8;2429:9;:20;;;;:::i;:::-;2405:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2461:8;:17;;;2479:10;2491:9;2461:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2515:17;2534;2589:6;2569:27;;:8;:27;;;2568:128;;2664:9;2651:10;:22;;;;:::i;:::-;2687:8;2675:9;:20;;;;:::i;:::-;2568:128;;;2613:9;2601;:21;;;;:::i;:::-;2637:9;2624:10;:22;;;;:::i;:::-;2568:128;2514:182;;;;2707:29;2715:9;2726;2707:7;:29::i;:::-;1793:951;;;;;;;1705:1039;;;;:::o;331:30::-;;;:::o;3532:140:2:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;451:22:6:-;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;7965:206::-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;837:133:6:-;922:9;911:8;:20;;;;953:9;942:8;:20;;;;837:133;;:::o;978:303::-;1023:6;1050:1;1046;:5;1042:232;;;1072:1;1068:5;;1088:6;1105:1;1101;1097;:5;;;;:::i;:::-;:9;;;;:::i;:::-;1088:18;;1121:92;1132:1;1128;:5;1121:92;;;1158:1;1154:5;;1196:1;1191;1187;1183;:5;;;;:::i;:::-;:9;;;;:::i;:::-;1182:15;;;;:::i;:::-;1178:19;;1121:92;;;1053:171;1042:232;;;1239:1;1234;:6;1230:44;;1261:1;1257:5;;1230:44;1042:232;978:303;;;:::o;1289:109::-;1347:9;1381:1;1376;:6;;:14;;1389:1;1376:14;;;1385:1;1376:14;1369:21;;1289:109;;;;:::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:60::-;3367:3;3388:5;3381:12;;3339:60;;;:::o;3405:142::-;3455:9;3488:53;3506:34;3515:24;3533:5;3515:24;:::i;:::-;3506:34;:::i;:::-;3488:53;:::i;:::-;3475:66;;3405:142;;;:::o;3553:126::-;3603:9;3636:37;3667:5;3636:37;:::i;:::-;3623:50;;3553:126;;;:::o;3685:140::-;3749:9;3782:37;3813:5;3782:37;:::i;:::-;3769:50;;3685:140;;;:::o;3831:159::-;3932:51;3977:5;3932:51;:::i;:::-;3927:3;3920:64;3831:159;;:::o;3996:250::-;4103:4;4141:2;4130:9;4126:18;4118:26;;4154:85;4236:1;4225:9;4221:17;4212:6;4154:85;:::i;:::-;3996:250;;;;:::o;4252:118::-;4339:24;4357:5;4339:24;:::i;:::-;4334:3;4327:37;4252:118;;:::o;4376:222::-;4469:4;4507:2;4496:9;4492:18;4484:26;;4520:71;4588:1;4577:9;4573:17;4564:6;4520:71;:::i;:::-;4376:222;;;;:::o;4604:619::-;4681:6;4689;4697;4746:2;4734:9;4725:7;4721:23;4717:32;4714:119;;;4752:79;;:::i;:::-;4714:119;4872:1;4897:53;4942:7;4933:6;4922:9;4918:22;4897:53;:::i;:::-;4887:63;;4843:117;4999:2;5025:53;5070:7;5061:6;5050:9;5046:22;5025:53;:::i;:::-;5015:63;;4970:118;5127:2;5153:53;5198:7;5189:6;5178:9;5174:22;5153:53;:::i;:::-;5143:63;;5098:118;4604:619;;;;;:::o;5229:86::-;5264:7;5304:4;5297:5;5293:16;5282:27;;5229:86;;;:::o;5321:112::-;5404:22;5420:5;5404:22;:::i;:::-;5399:3;5392:35;5321:112;;:::o;5439:214::-;5528:4;5566:2;5555:9;5551:18;5543:26;;5579:67;5643:1;5632:9;5628:17;5619:6;5579:67;:::i;:::-;5439:214;;;;:::o;5659:329::-;5718:6;5767:2;5755:9;5746:7;5742:23;5738:32;5735:119;;;5773:79;;:::i;:::-;5735:119;5893:1;5918:53;5963:7;5954:6;5943:9;5939:22;5918:53;:::i;:::-;5908:63;;5864:117;5659:329;;;;:::o;5994:154::-;6072:9;6105:37;6136:5;6105:37;:::i;:::-;6092:50;;5994:154;;;:::o;6154:187::-;6269:65;6328:5;6269:65;:::i;:::-;6264:3;6257:78;6154:187;;:::o;6347:278::-;6468:4;6506:2;6495:9;6491:18;6483:26;;6519:99;6615:1;6604:9;6600:17;6591:6;6519:99;:::i;:::-;6347:278;;;;:::o;6631:329::-;6690:6;6739:2;6727:9;6718:7;6714:23;6710:32;6707:119;;;6745:79;;:::i;:::-;6707:119;6865:1;6890:53;6935:7;6926:6;6915:9;6911:22;6890:53;:::i;:::-;6880:63;;6836:117;6631:329;;;;:::o;6966:332::-;7087:4;7125:2;7114:9;7110:18;7102:26;;7138:71;7206:1;7195:9;7191:17;7182:6;7138:71;:::i;:::-;7219:72;7287:2;7276:9;7272:18;7263:6;7219:72;:::i;:::-;6966:332;;;;;:::o;7304:474::-;7372:6;7380;7429:2;7417:9;7408:7;7404:23;7400:32;7397:119;;;7435:79;;:::i;:::-;7397:119;7555:1;7580:53;7625:7;7616:6;7605:9;7601:22;7580:53;:::i;:::-;7570:63;;7526:117;7682:2;7708:53;7753:7;7744:6;7733:9;7729:22;7708:53;:::i;:::-;7698:63;;7653:118;7304:474;;;;;:::o;7784:::-;7852:6;7860;7909:2;7897:9;7888:7;7884:23;7880:32;7877:119;;;7915:79;;:::i;:::-;7877:119;8035:1;8060:53;8105:7;8096:6;8085:9;8081:22;8060:53;:::i;:::-;8050:63;;8006:117;8162:2;8188:53;8233:7;8224:6;8213:9;8209:22;8188:53;:::i;:::-;8178:63;;8133:118;7784:474;;;;;:::o;8264:180::-;8312:77;8309:1;8302:88;8409:4;8406:1;8399:15;8433:4;8430:1;8423:15;8450:320;8494:6;8531:1;8525:4;8521:12;8511:22;;8578:1;8572:4;8568:12;8599:18;8589:81;;8655:4;8647:6;8643:17;8633:27;;8589:81;8717:2;8709:6;8706:14;8686:18;8683:38;8680:84;;8736:18;;:::i;:::-;8680:84;8501:269;8450:320;;;:::o;8776:105::-;8812:7;8852:22;8845:5;8841:34;8830:45;;8776:105;;;:::o;8887:120::-;8959:23;8976:5;8959:23;:::i;:::-;8952:5;8949:34;8939:62;;8997:1;8994;8987:12;8939:62;8887:120;:::o;9013:141::-;9069:5;9100:6;9094:13;9085:22;;9116:32;9142:5;9116:32;:::i;:::-;9013:141;;;;:::o;9160:76::-;9196:7;9225:5;9214:16;;9160:76;;;:::o;9242:120::-;9314:23;9331:5;9314:23;:::i;:::-;9307:5;9304:34;9294:62;;9352:1;9349;9342:12;9294:62;9242:120;:::o;9368:141::-;9424:5;9455:6;9449:13;9440:22;;9471:32;9497:5;9471:32;:::i;:::-;9368:141;;;;:::o;9515:143::-;9572:5;9603:6;9597:13;9588:22;;9619:33;9646:5;9619:33;:::i;:::-;9515:143;;;;:::o;9664:971::-;9767:6;9775;9783;9791;9799;9848:3;9836:9;9827:7;9823:23;9819:33;9816:120;;;9855:79;;:::i;:::-;9816:120;9975:1;10000:63;10055:7;10046:6;10035:9;10031:22;10000:63;:::i;:::-;9990:73;;9946:127;10112:2;10138:63;10193:7;10184:6;10173:9;10169:22;10138:63;:::i;:::-;10128:73;;10083:128;10250:2;10276:64;10332:7;10323:6;10312:9;10308:22;10276:64;:::i;:::-;10266:74;;10221:129;10389:2;10415:64;10471:7;10462:6;10451:9;10447:22;10415:64;:::i;:::-;10405:74;;10360:129;10528:3;10555:63;10610:7;10601:6;10590:9;10586:22;10555:63;:::i;:::-;10545:73;;10499:129;9664:971;;;;;;;;:::o;10641:163::-;10781:15;10777:1;10769:6;10765:14;10758:39;10641:163;:::o;10810:366::-;10952:3;10973:67;11037:2;11032:3;10973:67;:::i;:::-;10966:74;;11049:93;11138:3;11049:93;:::i;:::-;11167:2;11162:3;11158:12;11151:19;;10810:366;;;:::o;11182:419::-;11348:4;11386:2;11375:9;11371:18;11363:26;;11435:9;11429:4;11425:20;11421:1;11410:9;11406:17;11399:47;11463:131;11589:4;11463:131;:::i;:::-;11455:139;;11182:419;;;:::o;11607:180::-;11655:77;11652:1;11645:88;11752:4;11749:1;11742:15;11776:4;11773:1;11766:15;11793:180;11841:77;11838:1;11831:88;11938:4;11935:1;11928:15;11962:4;11959:1;11952:15;11979:385;12018:1;12035:19;12052:1;12035:19;:::i;:::-;12030:24;;12068:19;12085:1;12068:19;:::i;:::-;12063:24;;12106:1;12096:35;;12111:18;;:::i;:::-;12096:35;12297:1;12294;12290:9;12287:1;12284:16;12203:66;12200:1;12197:73;12180:130;12177:156;;;12313:18;;:::i;:::-;12177:156;12356:1;12353;12348:10;12343:15;;11979:385;;;;:::o;12370:410::-;12410:7;12433:20;12451:1;12433:20;:::i;:::-;12428:25;;12467:20;12485:1;12467:20;:::i;:::-;12462:25;;12522:1;12519;12515:9;12544:30;12562:11;12544:30;:::i;:::-;12533:41;;12723:1;12714:7;12710:15;12707:1;12704:22;12684:1;12677:9;12657:83;12634:139;;12753:18;;:::i;:::-;12634:139;12418:362;12370:410;;;;:::o;12786:185::-;12826:1;12843:20;12861:1;12843:20;:::i;:::-;12838:25;;12877:20;12895:1;12877:20;:::i;:::-;12872:25;;12916:1;12906:35;;12921:18;;:::i;:::-;12906:35;12963:1;12960;12956:9;12951:14;;12786:185;;;;:::o;12977:161::-;13117:13;13113:1;13105:6;13101:14;13094:37;12977:161;:::o;13144:366::-;13286:3;13307:67;13371:2;13366:3;13307:67;:::i;:::-;13300:74;;13383:93;13472:3;13383:93;:::i;:::-;13501:2;13496:3;13492:12;13485:19;;13144:366;;;:::o;13516:419::-;13682:4;13720:2;13709:9;13705:18;13697:26;;13769:9;13763:4;13759:20;13755:1;13744:9;13740:17;13733:47;13797:131;13923:4;13797:131;:::i;:::-;13789:139;;13516:419;;;:::o;13941:194::-;13981:4;14001:20;14019:1;14001:20;:::i;:::-;13996:25;;14035:20;14053:1;14035:20;:::i;:::-;14030:25;;14079:1;14076;14072:9;14064:17;;14103:1;14097:4;14094:11;14091:37;;;14108:18;;:::i;:::-;14091:37;13941:194;;;;:::o;14141:118::-;14228:24;14246:5;14228:24;:::i;:::-;14223:3;14216:37;14141:118;;:::o;14265:332::-;14386:4;14424:2;14413:9;14409:18;14401:26;;14437:71;14505:1;14494:9;14490:17;14481:6;14437:71;:::i;:::-;14518:72;14586:2;14575:9;14571:18;14562:6;14518:72;:::i;:::-;14265:332;;;;;:::o;14603:116::-;14673:21;14688:5;14673:21;:::i;:::-;14666:5;14663:32;14653:60;;14709:1;14706;14699:12;14653:60;14603:116;:::o;14725:137::-;14779:5;14810:6;14804:13;14795:22;;14826:30;14850:5;14826:30;:::i;:::-;14725:137;;;;:::o;14868:345::-;14935:6;14984:2;14972:9;14963:7;14959:23;14955:32;14952:119;;;14990:79;;:::i;:::-;14952:119;15110:1;15135:61;15188:7;15179:6;15168:9;15164:22;15135:61;:::i;:::-;15125:71;;15081:125;14868:345;;;;:::o;15219:175::-;15359:27;15355:1;15347:6;15343:14;15336:51;15219:175;:::o;15400:366::-;15542:3;15563:67;15627:2;15622:3;15563:67;:::i;:::-;15556:74;;15639:93;15728:3;15639:93;:::i;:::-;15757:2;15752:3;15748:12;15741:19;;15400:366;;;:::o;15772:419::-;15938:4;15976:2;15965:9;15961:18;15953:26;;16025:9;16019:4;16015:20;16011:1;16000:9;15996:17;15989:47;16053:131;16179:4;16053:131;:::i;:::-;16045:139;;15772:419;;;:::o;16197:442::-;16346:4;16384:2;16373:9;16369:18;16361:26;;16397:71;16465:1;16454:9;16450:17;16441:6;16397:71;:::i;:::-;16478:72;16546:2;16535:9;16531:18;16522:6;16478:72;:::i;:::-;16560;16628:2;16617:9;16613:18;16604:6;16560:72;:::i;:::-;16197:442;;;;;;:::o;16645:161::-;16785:13;16781:1;16773:6;16769:14;16762:37;16645:161;:::o;16812:366::-;16954:3;16975:67;17039:2;17034:3;16975:67;:::i;:::-;16968:74;;17051:93;17140:3;17051:93;:::i;:::-;17169:2;17164:3;17160:12;17153:19;;16812:366;;;:::o;17184:419::-;17350:4;17388:2;17377:9;17373:18;17365:26;;17437:9;17431:4;17427:20;17423:1;17412:9;17408:17;17401:47;17465:131;17591:4;17465:131;:::i;:::-;17457:139;;17184:419;;;:::o;17609:191::-;17649:3;17668:20;17686:1;17668:20;:::i;:::-;17663:25;;17702:20;17720:1;17702:20;:::i;:::-;17697:25;;17745:1;17742;17738:9;17731:16;;17766:3;17763:1;17760:10;17757:36;;;17773:18;;:::i;:::-;17757:36;17609:191;;;;:::o;17806:162::-;17946:14;17942:1;17934:6;17930:14;17923:38;17806:162;:::o;17974:366::-;18116:3;18137:67;18201:2;18196:3;18137:67;:::i;:::-;18130:74;;18213:93;18302:3;18213:93;:::i;:::-;18331:2;18326:3;18322:12;18315:19;;17974:366;;;:::o;18346:419::-;18512:4;18550:2;18539:9;18535:18;18527:26;;18599:9;18593:4;18589:20;18585:1;18574:9;18570:17;18563:47;18627:131;18753:4;18627:131;:::i;:::-;18619:139;;18346:419;;;:::o;18771:442::-;18920:4;18958:2;18947:9;18943:18;18935:26;;18971:71;19039:1;19028:9;19024:17;19015:6;18971:71;:::i;:::-;19052:72;19120:2;19109:9;19105:18;19096:6;19052:72;:::i;:::-;19134;19202:2;19191:9;19187:18;19178:6;19134:72;:::i;:::-;18771:442;;;;;;:::o;19219:222::-;19312:4;19350:2;19339:9;19335:18;19327:26;;19363:71;19431:1;19420:9;19416:17;19407:6;19363:71;:::i;:::-;19219:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1772200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"decimals()": "405",
								"fee()": "2535",
								"getLatestBTCPrice()": "infinite",
								"name()": "infinite",
								"priceFeed()": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"reserve0()": "2514",
								"reserve1()": "2536",
								"swap(address,uint256)": "infinite",
								"symbol()": "infinite",
								"token0()": "infinite",
								"token1()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_min(uint256,uint256)": "66",
								"_sqrt(uint256)": "infinite",
								"_update(uint256,uint256)": "44241"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 472,
									"end": 473,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 451,
									"end": 473,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 451,
									"end": 473,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 574,
									"end": 829,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 829,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 574,
									"end": 829,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 574,
									"end": 829,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 574,
									"end": 829,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 574,
									"end": 829,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 574,
									"end": 829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 574,
									"end": 829,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "5649530000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "5669657453776170000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 677,
									"end": 701,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 677,
									"end": 701,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 677,
									"end": 701,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 677,
									"end": 701,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 677,
									"end": 701,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 677,
									"end": 701,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 677,
									"end": 701,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 677,
									"end": 701,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 677,
									"end": 701,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 677,
									"end": 701,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 728,
									"end": 735,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 712,
									"end": 736,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 712,
									"end": 736,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 712,
									"end": 736,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 712,
									"end": 736,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 712,
									"end": 736,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 712,
									"end": 736,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 712,
									"end": 736,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 712,
									"end": 736,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 712,
									"end": 736,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 712,
									"end": 736,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 781,
									"end": 791,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 747,
									"end": 792,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 747,
									"end": 792,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 747,
									"end": 792,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 747,
									"end": 792,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 747,
									"end": 792,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 747,
									"end": 792,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 747,
									"end": 792,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 747,
									"end": 792,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 747,
									"end": 792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 747,
									"end": 792,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 811,
									"end": 821,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 803,
									"end": 808,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 803,
									"end": 808,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 803,
									"end": 821,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 574,
									"end": 829,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1566,
									"end": 1572,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1605,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1594,
									"end": 1606,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1584,
									"end": 1606,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1584,
									"end": 1606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1799,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1619,
									"end": 1799,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1744,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1664,
									"end": 1665,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1745,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1764,
									"end": 1768,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1761,
									"end": 1762,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1754,
									"end": 1769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1792,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1785,
									"end": 1786,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1793,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1985,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1805,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1930,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1850,
									"end": 1851,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1843,
									"end": 1931,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1950,
									"end": 1954,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1947,
									"end": 1948,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1940,
									"end": 1955,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1971,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1964,
									"end": 1979,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2035,
									"end": 2041,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2072,
									"end": 2073,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2066,
									"end": 2070,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2062,
									"end": 2074,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2052,
									"end": 2074,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2052,
									"end": 2074,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2119,
									"end": 2120,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2113,
									"end": 2117,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2109,
									"end": 2121,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2140,
									"end": 2158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2196,
									"end": 2200,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2188,
									"end": 2194,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2184,
									"end": 2201,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2258,
									"end": 2260,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2250,
									"end": 2256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2247,
									"end": 2261,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2227,
									"end": 2245,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2224,
									"end": 2262,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2277,
									"end": 2295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2042,
									"end": 2311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2370,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2389,
									"end": 2392,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2381,
									"end": 2392,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2381,
									"end": 2392,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2412,
									"end": 2415,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2410,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2402,
									"end": 2416,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2446,
									"end": 2450,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2443,
									"end": 2444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2433,
									"end": 2451,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2451,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2451,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2458,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2501,
									"end": 2507,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2548,
									"end": 2550,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2543,
									"end": 2545,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2536,
									"end": 2541,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2532,
									"end": 2546,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2528,
									"end": 2551,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2518,
									"end": 2551,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2518,
									"end": 2551,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 2615,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2657,
									"end": 2662,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2651,
									"end": 2655,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2663,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2663,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2663,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2745,
									"end": 2751,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2796,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2783,
									"end": 2793,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2779,
									"end": 2797,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2848,
									"end": 2914,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2837,
									"end": 2846,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2818,
									"end": 2915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2966,
									"end": 2974,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2955,
									"end": 2964,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2936,
									"end": 2975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2924,
									"end": 2975,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2924,
									"end": 2975,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3008,
									"end": 3012,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3004,
									"end": 3013,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2997,
									"end": 3002,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2993,
									"end": 3014,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2984,
									"end": 3014,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2984,
									"end": 3014,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3057,
									"end": 3061,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3047,
									"end": 3055,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3036,
									"end": 3041,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3063,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3023,
									"end": 3063,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3023,
									"end": 3063,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2676,
									"end": 3069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3112,
									"end": 3119,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3141,
									"end": 3146,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3152,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3186,
									"end": 3189,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3207,
									"end": 3212,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3200,
									"end": 3212,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3200,
									"end": 3212,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3218,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3274,
									"end": 3283,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3352,
									"end": 3357,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3334,
									"end": 3358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 3325,
									"end": 3359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3307,
									"end": 3360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3294,
									"end": 3360,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3294,
									"end": 3360,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3415,
									"end": 3418,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3441,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3429,
									"end": 3441,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3429,
									"end": 3441,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3372,
									"end": 3447,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3594,
									"end": 3601,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3563,
									"end": 3602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3697,
									"end": 3713,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 3673,
									"end": 3714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3665,
									"end": 3671,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3658,
									"end": 3662,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3652,
									"end": 3663,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3624,
									"end": 3715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3618,
									"end": 3622,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3611,
									"end": 3716,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3529,
									"end": 3722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3801,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3728,
									"end": 3801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3773,
									"end": 3776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3728,
									"end": 3801,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3884,
									"end": 3916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3983,
									"end": 3989,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3975,
									"end": 3981,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3969,
									"end": 3973,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 3925,
									"end": 3990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3860,
									"end": 3996,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3807,
									"end": 3996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4079,
									"end": 4082,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4072,
									"end": 4077,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4069,
									"end": 4083,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4170,
									"end": 4171,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4163,
									"end": 4168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 4133,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4106,
									"end": 4107,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4099,
									"end": 4104,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4095,
									"end": 4108,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4086,
									"end": 4108,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4086,
									"end": 4108,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4002,
									"end": 4188,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4295,
									"end": 4297,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4290,
									"end": 4293,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4287,
									"end": 4298,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4361,
									"end": 4366,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 4329,
									"end": 4367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4431,
									"end": 4441,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4413,
									"end": 4442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4403,
									"end": 4411,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4399,
									"end": 4443,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4596,
									"end": 4598,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4584,
									"end": 4594,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4581,
									"end": 4599,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4625,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4625,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4625,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4714,
									"end": 4717,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4696,
									"end": 4718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4686,
									"end": 4694,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4669,
									"end": 4680,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 4640,
									"end": 4720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4299,
									"end": 4730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4299,
									"end": 4730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4194,
									"end": 4737,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4797,
									"end": 4805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4847,
									"end": 4852,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4841,
									"end": 4845,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4837,
									"end": 4853,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4816,
									"end": 4853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4816,
									"end": 4853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4743,
									"end": 4860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4910,
									"end": 4916,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4991,
									"end": 4992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4987,
									"end": 4993,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4979,
									"end": 4984,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4976,
									"end": 4977,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4972,
									"end": 4985,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 4943,
									"end": 4994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4939,
									"end": 4995,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5024,
									"end": 5028,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5018,
									"end": 5022,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5014,
									"end": 5029,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5029,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5029,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4917,
									"end": 5035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 5035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5116,
									"end": 5120,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 5287,
									"end": 5290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5281,
									"end": 5285,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5262,
									"end": 5291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5254,
									"end": 5291,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5254,
									"end": 5291,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5324,
									"end": 5327,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5321,
									"end": 5322,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5317,
									"end": 5328,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5315,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5308,
									"end": 5329,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5300,
									"end": 5329,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5300,
									"end": 5329,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 5490,
									"end": 5493,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 5457,
									"end": 5494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5559,
									"end": 5577,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5551,
									"end": 5557,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5548,
									"end": 5578,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5581,
									"end": 5599,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 5657,
									"end": 5661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5651,
									"end": 5662,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 5625,
									"end": 5663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 5770,
									"end": 5776,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5762,
									"end": 5768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5710,
									"end": 5777,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5828,
									"end": 5832,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5815,
									"end": 5832,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5815,
									"end": 5832,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5860,
									"end": 5862,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5852,
									"end": 5858,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 5863,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5877,
									"end": 5878,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6534,
									"end": 6535,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6557,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6600,
									"end": 6609,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6595,
									"end": 6598,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6610,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6611,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6576,
									"end": 6611,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6576,
									"end": 6611,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 6711,
									"end": 6717,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6704,
									"end": 6709,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 6651,
									"end": 6718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6645,
									"end": 6649,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6638,
									"end": 6719,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6507,
									"end": 6729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5924,
									"end": 5928,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5920,
									"end": 5929,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 5918,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5908,
									"end": 5930,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 5990,
									"end": 5994,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 5958,
									"end": 5995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6045,
									"end": 6052,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6043,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6039,
									"end": 6053,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6124,
									"end": 6133,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6119,
									"end": 6122,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6115,
									"end": 6134,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6109,
									"end": 6135,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6101,
									"end": 6107,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6094,
									"end": 6136,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6175,
									"end": 6176,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6167,
									"end": 6173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6177,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6153,
									"end": 6177,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6153,
									"end": 6177,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6222,
									"end": 6224,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6207,
									"end": 6225,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6194,
									"end": 6225,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6194,
									"end": 6225,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6068,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6065,
									"end": 6066,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6061,
									"end": 6073,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6056,
									"end": 6073,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6056,
									"end": 6073,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6267,
									"end": 6273,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6258,
									"end": 6265,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6255,
									"end": 6274,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6325,
									"end": 6334,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6320,
									"end": 6323,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6316,
									"end": 6335,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6310,
									"end": 6336,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 6410,
									"end": 6414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6402,
									"end": 6408,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6398,
									"end": 6415,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6387,
									"end": 6396,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 6368,
									"end": 6416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6360,
									"end": 6366,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6353,
									"end": 6417,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6275,
									"end": 6431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6477,
									"end": 6478,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6473,
									"end": 6474,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6465,
									"end": 6471,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6461,
									"end": 6475,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6457,
									"end": 6479,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6451,
									"end": 6455,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6444,
									"end": 6480,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5879,
									"end": 6490,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5879,
									"end": 6490,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5879,
									"end": 6490,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5340,
									"end": 6735,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "847"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "844"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "841"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 4082,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001ba2baeb0ac6f3c71d1f741cf1a475e8bbe155b7359e076be4b164fb7b784e664736f6c634300081a0033",
									".code": [
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "D004F0F7"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "D21220A7"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "DDCA3F43"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "741BEF1A"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "9C8F9F23"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "9CD441DA"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "1B712739"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "1B712739"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "443CB4BC"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "5A76F25E"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "DFE1681"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 4082,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 286,
											"end": 316,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 286,
											"end": 316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 286,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 286,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 286,
											"end": 316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 316,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 286,
											"end": 316,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 286,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 286,
											"end": 316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 316,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1406,
											"end": 1697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1406,
											"end": 1697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 490,
											"end": 513,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 490,
											"end": 513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 490,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 490,
											"end": 513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 490,
											"end": 513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 513,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 490,
											"end": 513,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 490,
											"end": 513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 490,
											"end": 513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 513,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 520,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 520,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 376,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 376,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 376,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 376,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 376,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 376,
											"end": 424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 376,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 376,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3602,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3602,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3602,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2752,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2752,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2752,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1705,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1705,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1705,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 331,
											"end": 361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 331,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 331,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 331,
											"end": 361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 331,
											"end": 361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 331,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 331,
											"end": 361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 451,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 451,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 451,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 451,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 451,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 451,
											"end": 473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 451,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 451,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 286,
											"end": 316,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 286,
											"end": 316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "841"
										},
										{
											"begin": 286,
											"end": 316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 286,
											"end": 316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1519,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1587,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "847"
										},
										{
											"begin": 1578,
											"end": 1603,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1578,
											"end": 1603,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1603,
											"name": "PUSH",
											"source": 6,
											"value": "FEAF968C"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1578,
											"end": 1605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1578,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1633,
											"name": "SGT",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1616,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1616,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1687,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1677,
											"end": 1687,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1687,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1677,
											"end": 1687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1687,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1677,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 513,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 490,
											"end": 513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 490,
											"end": 513,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 520,
											"end": 543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 376,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 376,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "847"
										},
										{
											"begin": 376,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3694,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3740,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3740,
											"end": 3753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3728,
											"end": 3736,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3725,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3718,
											"end": 3736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3718,
											"end": 3736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3736,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3718,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3717,
											"end": 3753,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3753,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3717,
											"end": 3753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3753,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3717,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3707,
											"end": 3753,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3707,
											"end": 3753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3797,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3810,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3797,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3793,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3785,
											"end": 3793,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3782,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3775,
											"end": 3793,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3775,
											"end": 3793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3793,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3775,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3774,
											"end": 3810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3774,
											"end": 3810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3810,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3774,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3840,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3836,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3840,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3829,
											"end": 3855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3844,
											"end": 3855,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3855,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3829,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3821,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3888,
											"end": 3898,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3910,
											"end": 3918,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3900,
											"end": 3907,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3900,
											"end": 3918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3900,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3900,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3882,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3919,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3882,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3949,
											"end": 3956,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3946,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3938,
											"end": 3946,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3938,
											"end": 3956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 3976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 3966,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3958,
											"end": 3966,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3958,
											"end": 3976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3930,
											"end": 3977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3977,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3930,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 3994,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "841"
										},
										{
											"begin": 3988,
											"end": 4003,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3988,
											"end": 4003,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4003,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4023,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3988,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3988,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "844"
										},
										{
											"begin": 4035,
											"end": 4050,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4035,
											"end": 4050,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4050,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 4051,
											"end": 4061,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4035,
											"end": 4071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4035,
											"end": 4071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 4079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2874,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2874,
											"end": 2893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2855,
											"end": 2893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2855,
											"end": 2893,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2927,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 2939,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2931,
											"end": 2950,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 2950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2931,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 2950,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2931,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2952,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2983,
											"end": 2995,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2971,
											"end": 2979,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2971,
											"end": 2995,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2963,
											"end": 3025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2963,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "841"
										},
										{
											"begin": 3038,
											"end": 3057,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3038,
											"end": 3057,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3057,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3082,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3093,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3038,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3038,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "844"
										},
										{
											"begin": 3105,
											"end": 3124,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3105,
											"end": 3124,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3124,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3149,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3160,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3105,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3105,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3178,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3191,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3178,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3196,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3174,
											"end": 3433,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3239,
											"end": 3247,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3236,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3228,
											"end": 3247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3222,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3248,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3222,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3248,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3174,
											"end": 3433,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3174,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3342,
											"end": 3350,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3342,
											"end": 3350,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3325,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3338,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3325,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3322,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3314,
											"end": 3338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3314,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3338,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3314,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3313,
											"end": 3350,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3350,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3313,
											"end": 3350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3350,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3313,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3406,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3398,
											"end": 3406,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3381,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3378,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3370,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3369,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3369,
											"end": 3406,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3369,
											"end": 3406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3369,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3369,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3369,
											"end": 3406,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3369,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3290,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3421,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3290,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3421,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3174,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3459,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3463,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3445,
											"end": 3479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3445,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3496,
											"end": 3506,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3517,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3508,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3490,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3526,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3490,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3556,
											"end": 3564,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3553,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3545,
											"end": 3553,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3545,
											"end": 3564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3545,
											"end": 3564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3545,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3566,
											"end": 3574,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3566,
											"end": 3585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3537,
											"end": 3586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3586,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3537,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 3594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 3594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 3594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1820,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1804,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1804,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1883,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1883,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1862,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1862,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "841"
										},
										{
											"begin": 1918,
											"end": 1945,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1945,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1945,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1945,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1945,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1976,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1918,
											"end": 1976,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "844"
										},
										{
											"begin": 1949,
											"end": 1976,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1976,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1976,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1976,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1976,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1976,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1918,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1910,
											"end": 1977,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 1977,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 1977,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1910,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2105,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "841"
										},
										{
											"begin": 2079,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2079,
											"end": 2106,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2087,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2079,
											"end": 2106,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2106,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2078,
											"end": 2185,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "844"
										},
										{
											"begin": 2158,
											"end": 2164,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "841"
										},
										{
											"begin": 2166,
											"end": 2174,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2166,
											"end": 2174,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2176,
											"end": 2184,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2078,
											"end": 2185,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2185,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2078,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "841"
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "844"
										},
										{
											"begin": 2127,
											"end": 2135,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2127,
											"end": 2135,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2145,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2137,
											"end": 2145,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2185,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2078,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2185,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2185,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2185,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2185,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2205,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2219,
											"end": 2229,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2239,
											"end": 2243,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2255,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2198,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2198,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2321,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 2309,
											"end": 2312,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2309,
											"end": 2312,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 2302,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2302,
											"end": 2312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2302,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2312,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2302,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2298,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2289,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2289,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 2288,
											"end": 2321,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2288,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2321,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 2288,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2383,
											"end": 2391,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2370,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2370,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2357,
											"end": 2365,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2345,
											"end": 2365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2345,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2365,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2345,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2344,
											"end": 2392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2344,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2392,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2344,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2392,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2405,
											"end": 2421,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2429,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2405,
											"end": 2450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2405,
											"end": 2450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2469,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2478,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2461,
											"end": 2478,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2478,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2479,
											"end": 2489,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2461,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2461,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "841"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2577,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2568,
											"end": 2696,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2673,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2651,
											"end": 2673,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2673,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2651,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2673,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2651,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2695,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2675,
											"end": 2695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2675,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2695,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2675,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2568,
											"end": 2696,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2696,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2568,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2622,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2601,
											"end": 2622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2601,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2622,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2601,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2634,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2624,
											"end": 2646,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2624,
											"end": 2646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2646,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2624,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2696,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2568,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2715,
											"end": 2724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2707,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2736,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2707,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 331,
											"end": 361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "844"
										},
										{
											"begin": 331,
											"end": 361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 331,
											"end": 361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 451,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 451,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 451,
											"end": 473,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 451,
											"end": 473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 837,
											"end": 970,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 837,
											"end": 970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 922,
											"end": 931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 911,
											"end": 919,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 911,
											"end": 931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 911,
											"end": 931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 911,
											"end": 931,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 911,
											"end": 931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 953,
											"end": 962,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 942,
											"end": 950,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 942,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 942,
											"end": 962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 942,
											"end": 962,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 942,
											"end": 962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 837,
											"end": 970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 837,
											"end": 970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 837,
											"end": 970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1281,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 978,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1046,
											"end": 1047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1051,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1274,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 1042,
											"end": 1274,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1106,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1097,
											"end": 1098,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1097,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 1097,
											"end": 1106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1097,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1106,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 1097,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1213,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 1121,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1133,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1213,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 1121,
											"end": 1213,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1197,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1183,
											"end": 1184,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1183,
											"end": 1188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1183,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1183,
											"end": 1192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1183,
											"end": 1192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1183,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1183,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1183,
											"end": 1192,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1183,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1182,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 1182,
											"end": 1197,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1182,
											"end": 1197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1182,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1182,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1182,
											"end": 1197,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 1182,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 1121,
											"end": 1213,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1213,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 1121,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1053,
											"end": 1224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 1042,
											"end": 1274,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1274,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 1042,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1235,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1240,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 1230,
											"end": 1274,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1274,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 1230,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1274,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 1042,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1289,
											"end": 1398,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1289,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1382,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1382,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1376,
											"end": 1390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 1376,
											"end": 1390,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1390,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1376,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1390,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 1376,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1289,
											"end": 1398,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1289,
											"end": 1398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1289,
											"end": 1398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1289,
											"end": 1398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1289,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3367,
											"end": 3370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 3533,
											"end": 3538,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 3515,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3506,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3488,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 3488,
											"end": 3541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3488,
											"end": 3541,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 3488,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3603,
											"end": 3612,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 3667,
											"end": 3672,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 3636,
											"end": 3673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3673,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 3636,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3673,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 3813,
											"end": 3818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3782,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 3782,
											"end": 3819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3782,
											"end": 3819,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 3782,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 3990,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3831,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 3977,
											"end": 3982,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3932,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3927,
											"end": 3930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 3990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 3990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 3990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4130,
											"end": 4139,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4118,
											"end": 4144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4118,
											"end": 4144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4154,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 4236,
											"end": 4237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4238,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4218,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4154,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 4154,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4154,
											"end": 4239,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 4154,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4246,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4252,
											"end": 4370,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 4252,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 4357,
											"end": 4362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4339,
											"end": 4363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4252,
											"end": 4370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4252,
											"end": 4370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4252,
											"end": 4370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4469,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4509,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4505,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 4588,
											"end": 4589,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4573,
											"end": 4590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 4520,
											"end": 4591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4591,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 4520,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4376,
											"end": 4598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4376,
											"end": 4598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4695,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4748,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4734,
											"end": 4743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4732,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4744,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4752,
											"end": 4831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 4942,
											"end": 4949,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4922,
											"end": 4931,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4897,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 4950,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 4950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4999,
											"end": 5001,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 5070,
											"end": 5077,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5050,
											"end": 5059,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 5025,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5078,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 5088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5127,
											"end": 5129,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5153,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 5198,
											"end": 5205,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5189,
											"end": 5195,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5187,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5196,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5153,
											"end": 5206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5206,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 5153,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5143,
											"end": 5206,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5143,
											"end": 5206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 5223,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 5223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5309,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5433,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 5321,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 5420,
											"end": 5425,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 5404,
											"end": 5426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5426,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 5404,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5399,
											"end": 5402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 5427,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5532,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5555,
											"end": 5564,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5579,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 5643,
											"end": 5644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5628,
											"end": 5645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5619,
											"end": 5625,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5579,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 5579,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5579,
											"end": 5646,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 5579,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5439,
											"end": 5653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5439,
											"end": 5653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5746,
											"end": 5753,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5765,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5770,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 5773,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5893,
											"end": 5894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 5963,
											"end": 5970,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 5961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 5918,
											"end": 5971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5908,
											"end": 5971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5908,
											"end": 5971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6148,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 5994,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 6136,
											"end": 6141,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 6105,
											"end": 6142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6142,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 6105,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6148,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6341,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6154,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 6328,
											"end": 6333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 6269,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6334,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 6269,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6335,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6625,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6347,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6508,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6509,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 6615,
											"end": 6616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6604,
											"end": 6613,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6591,
											"end": 6597,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6519,
											"end": 6618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6618,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 6519,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6625,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6960,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 6631,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6739,
											"end": 6741,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6725,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6714,
											"end": 6737,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6710,
											"end": 6742,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6826,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 6707,
											"end": 6826,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6745,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 6745,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 6745,
											"end": 6824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6745,
											"end": 6824,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 6745,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6826,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 6707,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6865,
											"end": 6866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 6935,
											"end": 6942,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6926,
											"end": 6932,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 6924,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6933,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 6890,
											"end": 6943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6943,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 6890,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6880,
											"end": 6943,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6880,
											"end": 6943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6836,
											"end": 6953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6960,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7298,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 6966,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7125,
											"end": 7127,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7114,
											"end": 7123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7110,
											"end": 7128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7102,
											"end": 7128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7102,
											"end": 7128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7138,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 7206,
											"end": 7207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7204,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7182,
											"end": 7188,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7138,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7138,
											"end": 7209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7138,
											"end": 7209,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 7138,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7219,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 7287,
											"end": 7289,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7276,
											"end": 7285,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7272,
											"end": 7290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7269,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7219,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7219,
											"end": 7291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7219,
											"end": 7291,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 7219,
											"end": 7291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7298,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7298,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7778,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 7304,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7380,
											"end": 7386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7429,
											"end": 7431,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7408,
											"end": 7415,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7427,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7432,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7516,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 7397,
											"end": 7516,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 7435,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 7435,
											"end": 7514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7514,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 7435,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7516,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 7397,
											"end": 7516,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7555,
											"end": 7556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7580,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7605,
											"end": 7614,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7601,
											"end": 7623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 7580,
											"end": 7633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7633,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 7580,
											"end": 7633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7633,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7684,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 7753,
											"end": 7760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7744,
											"end": 7750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7733,
											"end": 7742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 7708,
											"end": 7761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7761,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 7708,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7698,
											"end": 7761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7698,
											"end": 7761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7778,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7778,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7778,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 8258,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 7784,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7852,
											"end": 7858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7860,
											"end": 7866,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7909,
											"end": 7911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7897,
											"end": 7906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7888,
											"end": 7895,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7884,
											"end": 7907,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 7912,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7877,
											"end": 7996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7877,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 7877,
											"end": 7996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 7915,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 7915,
											"end": 7994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7994,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 7915,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7877,
											"end": 7996,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 7877,
											"end": 7996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8060,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 8105,
											"end": 8112,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8096,
											"end": 8102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8085,
											"end": 8094,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8060,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 8060,
											"end": 8113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8060,
											"end": 8113,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 8060,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8050,
											"end": 8113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8050,
											"end": 8113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8188,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 8233,
											"end": 8240,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 8222,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8209,
											"end": 8231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8188,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 8188,
											"end": 8241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8188,
											"end": 8241,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 8188,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8133,
											"end": 8251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 8258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 8258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 8258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 8258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 8258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 8258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8444,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8264,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8309,
											"end": 8310,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8302,
											"end": 8390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8409,
											"end": 8413,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8406,
											"end": 8407,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8399,
											"end": 8414,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8433,
											"end": 8437,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8430,
											"end": 8431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8438,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8770,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 8450,
											"end": 8770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8494,
											"end": 8500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8532,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8521,
											"end": 8533,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8579,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8572,
											"end": 8576,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8568,
											"end": 8580,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 8589,
											"end": 8670,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8659,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 8647,
											"end": 8653,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8643,
											"end": 8660,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 8660,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 8660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8670,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 8589,
											"end": 8670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8719,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8706,
											"end": 8720,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8683,
											"end": 8721,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8680,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 8680,
											"end": 8764,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8736,
											"end": 8754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 8736,
											"end": 8754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8736,
											"end": 8754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8736,
											"end": 8754,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 8736,
											"end": 8754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8680,
											"end": 8764,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 8680,
											"end": 8764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8501,
											"end": 8770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8881,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 8776,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8812,
											"end": 8819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8852,
											"end": 8874,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8845,
											"end": 8850,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8841,
											"end": 8875,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8830,
											"end": 8875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8830,
											"end": 8875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8881,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 8887,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 8976,
											"end": 8981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 8959,
											"end": 8982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 8982,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 8959,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8957,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8949,
											"end": 8983,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8939,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 8939,
											"end": 9001,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8997,
											"end": 8998,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8994,
											"end": 8995,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 8999,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8939,
											"end": 9001,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 8939,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 9007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9154,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 9013,
											"end": 9154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9069,
											"end": 9074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9100,
											"end": 9106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9094,
											"end": 9107,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9085,
											"end": 9107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9085,
											"end": 9107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 9142,
											"end": 9147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 9116,
											"end": 9148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9148,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 9116,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9154,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9160,
											"end": 9236,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 9160,
											"end": 9236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9196,
											"end": 9203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9225,
											"end": 9230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9214,
											"end": 9230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9214,
											"end": 9230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9160,
											"end": 9236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9160,
											"end": 9236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9160,
											"end": 9236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9160,
											"end": 9236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9242,
											"end": 9362,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 9242,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 9331,
											"end": 9336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 9314,
											"end": 9337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9337,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 9314,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9307,
											"end": 9312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9304,
											"end": 9338,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9294,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 9294,
											"end": 9356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9352,
											"end": 9353,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9349,
											"end": 9350,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9342,
											"end": 9354,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9294,
											"end": 9356,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 9294,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9242,
											"end": 9362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9242,
											"end": 9362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9509,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 9368,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9424,
											"end": 9429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9455,
											"end": 9461,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9462,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9440,
											"end": 9462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9440,
											"end": 9462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 9497,
											"end": 9502,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 9471,
											"end": 9503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9503,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 9471,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9509,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9658,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 9515,
											"end": 9658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9572,
											"end": 9577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9603,
											"end": 9609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9597,
											"end": 9610,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9588,
											"end": 9610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9588,
											"end": 9610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 9646,
											"end": 9651,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 9619,
											"end": 9652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 9619,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9658,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 10635,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 9664,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9767,
											"end": 9773,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9775,
											"end": 9781,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9783,
											"end": 9789,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9791,
											"end": 9797,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9799,
											"end": 9805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9848,
											"end": 9851,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 9836,
											"end": 9845,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9827,
											"end": 9834,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9823,
											"end": 9846,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9819,
											"end": 9852,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9816,
											"end": 9936,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9816,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 9816,
											"end": 9936,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 9855,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 9855,
											"end": 9934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9934,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 9855,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9816,
											"end": 9936,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 9816,
											"end": 9936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9975,
											"end": 9976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 10055,
											"end": 10062,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10046,
											"end": 10052,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10035,
											"end": 10044,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10031,
											"end": 10053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10000,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 10000,
											"end": 10063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10000,
											"end": 10063,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 10000,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10063,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 10073,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10112,
											"end": 10114,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 10193,
											"end": 10200,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10173,
											"end": 10182,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10169,
											"end": 10191,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 10138,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10201,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 10138,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10201,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10083,
											"end": 10211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10252,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10276,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 10332,
											"end": 10339,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10323,
											"end": 10329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10312,
											"end": 10321,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10308,
											"end": 10330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 10276,
											"end": 10340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10340,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 10276,
											"end": 10340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10266,
											"end": 10340,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10266,
											"end": 10340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10221,
											"end": 10350,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10389,
											"end": 10391,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10415,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 10471,
											"end": 10478,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10462,
											"end": 10468,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10451,
											"end": 10460,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10447,
											"end": 10469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10415,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 10415,
											"end": 10479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10415,
											"end": 10479,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 10415,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10405,
											"end": 10479,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10405,
											"end": 10479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10528,
											"end": 10531,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 10555,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 10610,
											"end": 10617,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10607,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10590,
											"end": 10599,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10586,
											"end": 10608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 10555,
											"end": 10618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10618,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 10555,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10545,
											"end": 10618,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10545,
											"end": 10618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10499,
											"end": 10628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 10635,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 10635,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 10635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 10635,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 10635,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 10635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 10635,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 10635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 10635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10641,
											"end": 10804,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 10641,
											"end": 10804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10781,
											"end": 10796,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420707269636500000000000000000000000000000000000000"
										},
										{
											"begin": 10777,
											"end": 10778,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10769,
											"end": 10775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10765,
											"end": 10779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10797,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10641,
											"end": 10804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10641,
											"end": 10804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10810,
											"end": 11176,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 10810,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10952,
											"end": 10955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10973,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 11037,
											"end": 11039,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 11032,
											"end": 11035,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10973,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 10973,
											"end": 11040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10973,
											"end": 11040,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 10973,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11049,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 11138,
											"end": 11141,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11049,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 11049,
											"end": 11142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11049,
											"end": 11142,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 11049,
											"end": 11142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11167,
											"end": 11169,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11162,
											"end": 11165,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11158,
											"end": 11170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11151,
											"end": 11170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11151,
											"end": 11170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10810,
											"end": 11176,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10810,
											"end": 11176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10810,
											"end": 11176,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10810,
											"end": 11176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11182,
											"end": 11601,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 11182,
											"end": 11601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11348,
											"end": 11352,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11386,
											"end": 11388,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11375,
											"end": 11384,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11363,
											"end": 11389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11363,
											"end": 11389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11435,
											"end": 11444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11429,
											"end": 11433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11425,
											"end": 11445,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11421,
											"end": 11422,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11410,
											"end": 11419,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11423,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11399,
											"end": 11446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11463,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 11589,
											"end": 11593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11463,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 11463,
											"end": 11594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11463,
											"end": 11594,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 11463,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11455,
											"end": 11594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11455,
											"end": 11594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11182,
											"end": 11601,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11182,
											"end": 11601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11182,
											"end": 11601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11182,
											"end": 11601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11607,
											"end": 11787,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 11607,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11655,
											"end": 11732,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11652,
											"end": 11653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11645,
											"end": 11733,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11752,
											"end": 11756,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 11749,
											"end": 11750,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11742,
											"end": 11757,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11776,
											"end": 11780,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11773,
											"end": 11774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11766,
											"end": 11781,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11793,
											"end": 11973,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 11793,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11841,
											"end": 11918,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11838,
											"end": 11839,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11831,
											"end": 11919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11938,
											"end": 11942,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 11935,
											"end": 11936,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11928,
											"end": 11943,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11966,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11959,
											"end": 11960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11952,
											"end": 11967,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11979,
											"end": 12364,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 11979,
											"end": 12364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12018,
											"end": 12019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12035,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 12052,
											"end": 12053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12035,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 12035,
											"end": 12054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12035,
											"end": 12054,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 12035,
											"end": 12054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12030,
											"end": 12054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12030,
											"end": 12054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12068,
											"end": 12087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 12085,
											"end": 12086,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12068,
											"end": 12087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 12068,
											"end": 12087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12068,
											"end": 12087,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 12068,
											"end": 12087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12063,
											"end": 12087,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12063,
											"end": 12087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12106,
											"end": 12107,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12096,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 12096,
											"end": 12131,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12111,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 12111,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 12111,
											"end": 12129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12111,
											"end": 12129,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 12111,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12096,
											"end": 12131,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 12096,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12297,
											"end": 12298,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12294,
											"end": 12295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12290,
											"end": 12299,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12287,
											"end": 12288,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12284,
											"end": 12300,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12203,
											"end": 12269,
											"name": "PUSH",
											"source": 7,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12200,
											"end": 12201,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12197,
											"end": 12270,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12180,
											"end": 12310,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12177,
											"end": 12333,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12177,
											"end": 12333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 12177,
											"end": 12333,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12313,
											"end": 12331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 12313,
											"end": 12331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 12313,
											"end": 12331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12313,
											"end": 12331,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 12313,
											"end": 12331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12177,
											"end": 12333,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 12177,
											"end": 12333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12356,
											"end": 12357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12353,
											"end": 12354,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12348,
											"end": 12358,
											"name": "SDIV",
											"source": 7
										},
										{
											"begin": 12343,
											"end": 12358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12343,
											"end": 12358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11979,
											"end": 12364,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11979,
											"end": 12364,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11979,
											"end": 12364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11979,
											"end": 12364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11979,
											"end": 12364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12370,
											"end": 12780,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 12370,
											"end": 12780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12410,
											"end": 12417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12433,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 12451,
											"end": 12452,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12433,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 12433,
											"end": 12453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12433,
											"end": 12453,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 12433,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12428,
											"end": 12453,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12428,
											"end": 12453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12467,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 12485,
											"end": 12486,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12467,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 12467,
											"end": 12487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12467,
											"end": 12487,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 12467,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12462,
											"end": 12487,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12462,
											"end": 12487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12522,
											"end": 12523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12519,
											"end": 12520,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12515,
											"end": 12524,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 12544,
											"end": 12574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 12562,
											"end": 12573,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12544,
											"end": 12574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 12544,
											"end": 12574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12544,
											"end": 12574,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 12544,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12533,
											"end": 12574,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12533,
											"end": 12574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12723,
											"end": 12724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12714,
											"end": 12721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12710,
											"end": 12725,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 12708,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12704,
											"end": 12726,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12684,
											"end": 12685,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12677,
											"end": 12686,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12657,
											"end": 12740,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 12634,
											"end": 12773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 12634,
											"end": 12773,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 12753,
											"end": 12771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12634,
											"end": 12773,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 12634,
											"end": 12773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12418,
											"end": 12780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12370,
											"end": 12780,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12370,
											"end": 12780,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12370,
											"end": 12780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12370,
											"end": 12780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12370,
											"end": 12780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12971,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 12786,
											"end": 12971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12826,
											"end": 12827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12843,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 12861,
											"end": 12862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12843,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 12843,
											"end": 12863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12843,
											"end": 12863,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 12843,
											"end": 12863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12838,
											"end": 12863,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12838,
											"end": 12863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12877,
											"end": 12897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 12895,
											"end": 12896,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12877,
											"end": 12897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 12877,
											"end": 12897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12877,
											"end": 12897,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 12877,
											"end": 12897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12872,
											"end": 12897,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12872,
											"end": 12897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12916,
											"end": 12917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12906,
											"end": 12941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 12906,
											"end": 12941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 12921,
											"end": 12939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12906,
											"end": 12941,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 12906,
											"end": 12941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 12964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12960,
											"end": 12961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12956,
											"end": 12965,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12951,
											"end": 12965,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12951,
											"end": 12965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12971,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12977,
											"end": 13138,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 12977,
											"end": 13138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13117,
											"end": 13130,
											"name": "PUSH",
											"source": 7,
											"value": "5A45524F20414D4F554E54000000000000000000000000000000000000000000"
										},
										{
											"begin": 13113,
											"end": 13114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13105,
											"end": 13111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13101,
											"end": 13115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13094,
											"end": 13131,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12977,
											"end": 13138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12977,
											"end": 13138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13510,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 13144,
											"end": 13510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13286,
											"end": 13289,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13307,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 13371,
											"end": 13373,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 13366,
											"end": 13369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13307,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 13307,
											"end": 13374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13307,
											"end": 13374,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 13307,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13300,
											"end": 13374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13300,
											"end": 13374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13383,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 13472,
											"end": 13475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13383,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 13383,
											"end": 13476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13383,
											"end": 13476,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 13383,
											"end": 13476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13501,
											"end": 13503,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13496,
											"end": 13499,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13492,
											"end": 13504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13485,
											"end": 13504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13485,
											"end": 13504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13510,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13516,
											"end": 13935,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 13516,
											"end": 13935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13682,
											"end": 13686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13720,
											"end": 13722,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13709,
											"end": 13718,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13705,
											"end": 13723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13697,
											"end": 13723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13697,
											"end": 13723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13769,
											"end": 13778,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13763,
											"end": 13767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13759,
											"end": 13779,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13755,
											"end": 13756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13744,
											"end": 13753,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13740,
											"end": 13757,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13733,
											"end": 13780,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13797,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 13923,
											"end": 13927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13797,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 13797,
											"end": 13928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13797,
											"end": 13928,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 13797,
											"end": 13928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13789,
											"end": 13928,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13789,
											"end": 13928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13516,
											"end": 13935,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13516,
											"end": 13935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13516,
											"end": 13935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13516,
											"end": 13935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13941,
											"end": 14135,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 13941,
											"end": 14135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13981,
											"end": 13985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 14019,
											"end": 14020,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14001,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 14001,
											"end": 14021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14001,
											"end": 14021,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 14001,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13996,
											"end": 14021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13996,
											"end": 14021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14035,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 14053,
											"end": 14054,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14035,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 14035,
											"end": 14055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14035,
											"end": 14055,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 14035,
											"end": 14055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14030,
											"end": 14055,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14030,
											"end": 14055,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14079,
											"end": 14080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14076,
											"end": 14077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14072,
											"end": 14081,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14064,
											"end": 14081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14064,
											"end": 14081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14103,
											"end": 14104,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14097,
											"end": 14101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14094,
											"end": 14105,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14091,
											"end": 14128,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14091,
											"end": 14128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 14091,
											"end": 14128,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14108,
											"end": 14126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 14108,
											"end": 14126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 14108,
											"end": 14126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14108,
											"end": 14126,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 14108,
											"end": 14126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14091,
											"end": 14128,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 14091,
											"end": 14128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13941,
											"end": 14135,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13941,
											"end": 14135,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13941,
											"end": 14135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13941,
											"end": 14135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13941,
											"end": 14135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14141,
											"end": 14259,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 14141,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14228,
											"end": 14252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 14246,
											"end": 14251,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14228,
											"end": 14252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 14228,
											"end": 14252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14228,
											"end": 14252,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 14228,
											"end": 14252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14223,
											"end": 14226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14216,
											"end": 14253,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14141,
											"end": 14259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14141,
											"end": 14259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14141,
											"end": 14259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14265,
											"end": 14597,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 14265,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14386,
											"end": 14390,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14424,
											"end": 14426,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14413,
											"end": 14422,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14409,
											"end": 14427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14401,
											"end": 14427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14401,
											"end": 14427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 14505,
											"end": 14506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14494,
											"end": 14503,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14490,
											"end": 14507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14481,
											"end": 14487,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 14437,
											"end": 14508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14518,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 14586,
											"end": 14588,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14575,
											"end": 14584,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14571,
											"end": 14589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14562,
											"end": 14568,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14518,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 14518,
											"end": 14590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14518,
											"end": 14590,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 14518,
											"end": 14590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14265,
											"end": 14597,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14265,
											"end": 14597,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14265,
											"end": 14597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14265,
											"end": 14597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14265,
											"end": 14597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14265,
											"end": 14597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14603,
											"end": 14719,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 14603,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14673,
											"end": 14694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 14688,
											"end": 14693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14673,
											"end": 14694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 14673,
											"end": 14694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14673,
											"end": 14694,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 14673,
											"end": 14694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14666,
											"end": 14671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14663,
											"end": 14695,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 14653,
											"end": 14713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 14653,
											"end": 14713,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14709,
											"end": 14710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14706,
											"end": 14707,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14699,
											"end": 14711,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14653,
											"end": 14713,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 14653,
											"end": 14713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14603,
											"end": 14719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14603,
											"end": 14719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14725,
											"end": 14862,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 14725,
											"end": 14862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14779,
											"end": 14784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14810,
											"end": 14816,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14804,
											"end": 14817,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14795,
											"end": 14817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14795,
											"end": 14817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14826,
											"end": 14856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 14850,
											"end": 14855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14826,
											"end": 14856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 14826,
											"end": 14856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14826,
											"end": 14856,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 14826,
											"end": 14856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14725,
											"end": 14862,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14725,
											"end": 14862,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14725,
											"end": 14862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14725,
											"end": 14862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14725,
											"end": 14862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14868,
											"end": 15213,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 14868,
											"end": 15213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14935,
											"end": 14941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14984,
											"end": 14986,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14972,
											"end": 14981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14963,
											"end": 14970,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14959,
											"end": 14982,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14955,
											"end": 14987,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 14952,
											"end": 15071,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14952,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 14952,
											"end": 15071,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14990,
											"end": 15069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 14990,
											"end": 15069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 14990,
											"end": 15069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14990,
											"end": 15069,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 14990,
											"end": 15069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14952,
											"end": 15071,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 14952,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15110,
											"end": 15111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15135,
											"end": 15196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 15188,
											"end": 15195,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15179,
											"end": 15185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15168,
											"end": 15177,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15164,
											"end": 15186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15135,
											"end": 15196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 15135,
											"end": 15196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15135,
											"end": 15196,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 15135,
											"end": 15196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15125,
											"end": 15196,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15125,
											"end": 15196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15081,
											"end": 15206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14868,
											"end": 15213,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14868,
											"end": 15213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14868,
											"end": 15213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14868,
											"end": 15213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14868,
											"end": 15213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15219,
											"end": 15394,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 15219,
											"end": 15394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15359,
											"end": 15386,
											"name": "PUSH",
											"source": 7,
											"value": "564E5354206D757374206D617463682042544320707269636500000000000000"
										},
										{
											"begin": 15355,
											"end": 15356,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15347,
											"end": 15353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15336,
											"end": 15387,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15219,
											"end": 15394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15219,
											"end": 15394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15400,
											"end": 15766,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 15400,
											"end": 15766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15542,
											"end": 15545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15563,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 15627,
											"end": 15629,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 15622,
											"end": 15625,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15563,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 15563,
											"end": 15630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15563,
											"end": 15630,
											"name": "tag",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 15563,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15556,
											"end": 15630,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15556,
											"end": 15630,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15639,
											"end": 15732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 15728,
											"end": 15731,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15639,
											"end": 15732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 15639,
											"end": 15732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15639,
											"end": 15732,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 15639,
											"end": 15732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15757,
											"end": 15759,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15752,
											"end": 15755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15748,
											"end": 15760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15741,
											"end": 15760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15741,
											"end": 15760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15400,
											"end": 15766,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15400,
											"end": 15766,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15400,
											"end": 15766,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15400,
											"end": 15766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15772,
											"end": 16191,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 15772,
											"end": 16191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15938,
											"end": 15942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15976,
											"end": 15978,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15965,
											"end": 15974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15961,
											"end": 15979,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15953,
											"end": 15979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15953,
											"end": 15979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16025,
											"end": 16034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16019,
											"end": 16023,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16015,
											"end": 16035,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16000,
											"end": 16009,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15996,
											"end": 16013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16053,
											"end": 16184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 16179,
											"end": 16183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16053,
											"end": 16184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 16053,
											"end": 16184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16053,
											"end": 16184,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 16053,
											"end": 16184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16045,
											"end": 16184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16045,
											"end": 16184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15772,
											"end": 16191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15772,
											"end": 16191,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15772,
											"end": 16191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15772,
											"end": 16191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16197,
											"end": 16639,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 16197,
											"end": 16639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16346,
											"end": 16350,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16384,
											"end": 16386,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 16373,
											"end": 16382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16369,
											"end": 16387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16361,
											"end": 16387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16361,
											"end": 16387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16397,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 16465,
											"end": 16466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16454,
											"end": 16463,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16450,
											"end": 16467,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16441,
											"end": 16447,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16397,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 16397,
											"end": 16468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16397,
											"end": 16468,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 16397,
											"end": 16468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 16550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 16546,
											"end": 16548,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16535,
											"end": 16544,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16531,
											"end": 16549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16522,
											"end": 16528,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 16550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 16478,
											"end": 16550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 16550,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 16478,
											"end": 16550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16560,
											"end": 16632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 16628,
											"end": 16630,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16617,
											"end": 16626,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16613,
											"end": 16631,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16604,
											"end": 16610,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16560,
											"end": 16632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 16560,
											"end": 16632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16560,
											"end": 16632,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 16560,
											"end": 16632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16197,
											"end": 16639,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16197,
											"end": 16639,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16197,
											"end": 16639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16197,
											"end": 16639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16197,
											"end": 16639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16197,
											"end": 16639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16197,
											"end": 16639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16645,
											"end": 16806,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 16645,
											"end": 16806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16785,
											"end": 16798,
											"name": "PUSH",
											"source": 7,
											"value": "5A45524F5F534841524553000000000000000000000000000000000000000000"
										},
										{
											"begin": 16781,
											"end": 16782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16773,
											"end": 16779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16769,
											"end": 16783,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16762,
											"end": 16799,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16645,
											"end": 16806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16645,
											"end": 16806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16812,
											"end": 17178,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 16812,
											"end": 17178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16954,
											"end": 16957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16975,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 17039,
											"end": 17041,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 17034,
											"end": 17037,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16975,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 16975,
											"end": 17042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16975,
											"end": 17042,
											"name": "tag",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 16975,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16968,
											"end": 17042,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16968,
											"end": 17042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17051,
											"end": 17144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 17140,
											"end": 17143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17051,
											"end": 17144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 17051,
											"end": 17144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17051,
											"end": 17144,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 17051,
											"end": 17144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17169,
											"end": 17171,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17164,
											"end": 17167,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17160,
											"end": 17172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17153,
											"end": 17172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17153,
											"end": 17172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16812,
											"end": 17178,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16812,
											"end": 17178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16812,
											"end": 17178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16812,
											"end": 17178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17184,
											"end": 17603,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 17184,
											"end": 17603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17350,
											"end": 17354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17388,
											"end": 17390,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17377,
											"end": 17386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17373,
											"end": 17391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17365,
											"end": 17391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17365,
											"end": 17391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17437,
											"end": 17446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17431,
											"end": 17435,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17427,
											"end": 17447,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17423,
											"end": 17424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17412,
											"end": 17421,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17408,
											"end": 17425,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17465,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 17591,
											"end": 17595,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17465,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 17465,
											"end": 17596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17465,
											"end": 17596,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 17465,
											"end": 17596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17457,
											"end": 17596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17457,
											"end": 17596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17184,
											"end": 17603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17184,
											"end": 17603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17184,
											"end": 17603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17184,
											"end": 17603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17609,
											"end": 17800,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 17609,
											"end": 17800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17649,
											"end": 17652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17668,
											"end": 17688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 17686,
											"end": 17687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17668,
											"end": 17688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 17668,
											"end": 17688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17668,
											"end": 17688,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 17668,
											"end": 17688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17663,
											"end": 17688,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17663,
											"end": 17688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17702,
											"end": 17722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 17720,
											"end": 17721,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17702,
											"end": 17722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 17702,
											"end": 17722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17702,
											"end": 17722,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 17702,
											"end": 17722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17697,
											"end": 17722,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17697,
											"end": 17722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17745,
											"end": 17746,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17742,
											"end": 17743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17738,
											"end": 17747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17731,
											"end": 17747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17731,
											"end": 17747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17766,
											"end": 17769,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17763,
											"end": 17764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17760,
											"end": 17770,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17757,
											"end": 17793,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17757,
											"end": 17793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 17757,
											"end": 17793,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17773,
											"end": 17791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 17773,
											"end": 17791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 17773,
											"end": 17791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17773,
											"end": 17791,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 17773,
											"end": 17791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17757,
											"end": 17793,
											"name": "tag",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 17757,
											"end": 17793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17609,
											"end": 17800,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17609,
											"end": 17800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17609,
											"end": 17800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17609,
											"end": 17800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17609,
											"end": 17800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17806,
											"end": 17968,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 17806,
											"end": 17968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17946,
											"end": 17960,
											"name": "PUSH",
											"source": 7,
											"value": "5A45524F20414444524553530000000000000000000000000000000000000000"
										},
										{
											"begin": 17942,
											"end": 17943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17934,
											"end": 17940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17930,
											"end": 17944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17923,
											"end": 17961,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17806,
											"end": 17968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17806,
											"end": 17968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17974,
											"end": 18340,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 17974,
											"end": 18340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18116,
											"end": 18119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18137,
											"end": 18204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 18201,
											"end": 18203,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 18196,
											"end": 18199,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18137,
											"end": 18204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 18137,
											"end": 18204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18137,
											"end": 18204,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 18137,
											"end": 18204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18130,
											"end": 18204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18130,
											"end": 18204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18213,
											"end": 18306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 18302,
											"end": 18305,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18213,
											"end": 18306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 18213,
											"end": 18306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18213,
											"end": 18306,
											"name": "tag",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 18213,
											"end": 18306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18331,
											"end": 18333,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18326,
											"end": 18329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18322,
											"end": 18334,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18315,
											"end": 18334,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18315,
											"end": 18334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17974,
											"end": 18340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17974,
											"end": 18340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17974,
											"end": 18340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17974,
											"end": 18340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18346,
											"end": 18765,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 18346,
											"end": 18765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18512,
											"end": 18516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18550,
											"end": 18552,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18539,
											"end": 18548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18535,
											"end": 18553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18527,
											"end": 18553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18527,
											"end": 18553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18599,
											"end": 18608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18593,
											"end": 18597,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18589,
											"end": 18609,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18585,
											"end": 18586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18574,
											"end": 18583,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18570,
											"end": 18587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18563,
											"end": 18610,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18627,
											"end": 18758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 18753,
											"end": 18757,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18627,
											"end": 18758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 18627,
											"end": 18758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18627,
											"end": 18758,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 18627,
											"end": 18758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18619,
											"end": 18758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18619,
											"end": 18758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18346,
											"end": 18765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18346,
											"end": 18765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18346,
											"end": 18765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18346,
											"end": 18765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18771,
											"end": 19213,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 18771,
											"end": 19213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18920,
											"end": 18924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18958,
											"end": 18960,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 18947,
											"end": 18956,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18943,
											"end": 18961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18935,
											"end": 18961,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18935,
											"end": 18961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18971,
											"end": 19042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 19039,
											"end": 19040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19028,
											"end": 19037,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19024,
											"end": 19041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19015,
											"end": 19021,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18971,
											"end": 19042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 18971,
											"end": 19042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18971,
											"end": 19042,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 18971,
											"end": 19042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19052,
											"end": 19124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 19120,
											"end": 19122,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19109,
											"end": 19118,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19105,
											"end": 19123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19096,
											"end": 19102,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19052,
											"end": 19124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 19052,
											"end": 19124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19052,
											"end": 19124,
											"name": "tag",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 19052,
											"end": 19124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19134,
											"end": 19206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 19202,
											"end": 19204,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19191,
											"end": 19200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19187,
											"end": 19205,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19178,
											"end": 19184,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19134,
											"end": 19206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 19134,
											"end": 19206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19134,
											"end": 19206,
											"name": "tag",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 19134,
											"end": 19206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18771,
											"end": 19213,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 18771,
											"end": 19213,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18771,
											"end": 19213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18771,
											"end": 19213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18771,
											"end": 19213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18771,
											"end": 19213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18771,
											"end": 19213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19219,
											"end": 19441,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 19219,
											"end": 19441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19312,
											"end": 19316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19350,
											"end": 19352,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19339,
											"end": 19348,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19335,
											"end": 19353,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19327,
											"end": 19353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19327,
											"end": 19353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19363,
											"end": 19434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 19431,
											"end": 19432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19420,
											"end": 19429,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19416,
											"end": 19433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19407,
											"end": 19413,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19363,
											"end": 19434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 19363,
											"end": 19434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19363,
											"end": 19434,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 19363,
											"end": 19434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19219,
											"end": 19441,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19219,
											"end": 19441,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19219,
											"end": 19441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19219,
											"end": 19441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19219,
											"end": 19441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/ConstantK.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"fee()": "ddca3f43",
							"getLatestBTCPrice()": "1b712739",
							"name()": "06fdde03",
							"priceFeed()": "741bef1a",
							"removeLiquidity(uint256)": "9c8f9f23",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e",
							"swap(address,uint256)": "d004f0f7",
							"symbol()": "95d89b41",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestBTCPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ConstantK.sol\":\"CPAMM\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ConstantK.sol\":{\"keccak256\":\"0xccc2f11ecd5add18e611cda694a6a2b3d62b0b8ef986a4ff75e3f9c66cabaef6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24a1f697e3014be01844f37fce45ec2bfb8f60f0d4333bca9b9ff1143c8d0adb\",\"dweb:/ipfs/QmdYsnPzCKFpqZft5BssuKAP7awFERTvkfP5GVmeTEaaVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "contracts/ConstantK.sol:CPAMM",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 211,
								"contract": "contracts/ConstantK.sol:CPAMM",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 213,
								"contract": "contracts/ConstantK.sol:CPAMM",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "contracts/ConstantK.sol:CPAMM",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 217,
								"contract": "contracts/ConstantK.sol:CPAMM",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 850,
								"contract": "contracts/ConstantK.sol:CPAMM",
								"label": "fee",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 852,
								"contract": "contracts/ConstantK.sol:CPAMM",
								"label": "reserve0",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 854,
								"contract": "contracts/ConstantK.sol:CPAMM",
								"label": "reserve1",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 856,
								"contract": "contracts/ConstantK.sol:CPAMM",
								"label": "owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							182
						],
						"IERC20Errors": [
							87
						],
						"IERC721Errors": [
							135
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 57,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 62,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 67,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 76,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 81,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 86,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 183,
							"src": "280:1764:1",
							"usedErrors": [
								57,
								62,
								67,
								76,
								81,
								86
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 88,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 135,
							"linearizedBaseContracts": [
								135
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 93,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 98,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 107,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 112,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 117,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 124,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 129,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 134,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 183,
							"src": "2190:2092:1",
							"usedErrors": [
								93,
								98,
								107,
								112,
								117,
								124,
								129,
								134
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 136,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 147,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 152,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 157,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 164,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 169,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 174,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 181,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 183,
							"src": "4430:2107:1",
							"usedErrors": [
								147,
								152,
								157,
								164,
								169,
								174,
								181
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							831
						],
						"ERC20": [
							697
						],
						"IERC20": [
							775
						],
						"IERC20Errors": [
							87
						],
						"IERC20Metadata": [
							801
						]
					},
					"id": 698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 776,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 185,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 775,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 802,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 187,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 801,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 832,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 189,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 183,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 191,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 87,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 194,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "1133:7:2"
									},
									"id": 195,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 196,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "1142:6:2"
									},
									"id": 197,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 198,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 801,
										"src": "1150:14:2"
									},
									"id": 199,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 200,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 87,
										"src": "1166:12:2"
									},
									"id": 201,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 697,
							"linearizedBaseContracts": [
								697,
								87,
								801,
								775,
								831
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 205,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 204,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 202,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 203,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 210,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 206,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 209,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 207,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 208,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 213,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 215,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 214,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 217,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 216,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 225,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 226,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 234,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 219,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 221,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 697,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										788
									],
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 240,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 239,
												"id": 241,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 237,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 697,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										794
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 249,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 217,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 248,
												"id": 250,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 246,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 697,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										800
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 257,
												"id": 259,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 255,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 697,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										724
									],
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 267,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 213,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 268,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 697,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										732
									],
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 278,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 280,
													"indexExpression": {
														"id": 279,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 697,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 293,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 297,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 295,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 298,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 292,
												"id": 305,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 697,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										752
									],
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 317,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 319,
														"indexExpression": {
															"id": 318,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 321,
													"indexExpression": {
														"id": 320,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 322,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 697,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										762
									],
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 334,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 336,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															588,
															648
														],
														"referencedDeclaration": 588,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 333,
												"id": 346,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 697,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										774
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 379,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 360,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 362,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 367,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 368,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 372,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 373,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 371,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 359,
												"id": 378,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 697,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 390,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 391,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 404,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 403,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 397,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 396,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 402,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 405,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 406,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 419,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 418,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 412,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 411,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 417,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 697,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 438,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																449
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 449,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 474,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 448,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 453,
															"initialValue": {
																"baseExpression": {
																	"id": 450,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 452,
																"indexExpression": {
																	"id": 451,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 454,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 455,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 464,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 463,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 458,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 430,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 459,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 449,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 460,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 457,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 57,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 462,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 473,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 465,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 205,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 467,
																			"indexExpression": {
																				"id": 466,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 430,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 468,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 449,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 469,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 472,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 447,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 443,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 444,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 446,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 476,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 477,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 495,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 494,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 488,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 205,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 490,
																			"indexExpression": {
																				"id": 489,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 491,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 493,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 487,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 486,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 482,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 483,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 485,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 498,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 500,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 697,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 512,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 513,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 526,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 525,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 519,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 518,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 524,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 528,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 697,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 545,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 546,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 559,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 558,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 552,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 551,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 557,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 562,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 697,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 580,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															588,
															648
														],
														"referencedDeclaration": 648,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 697,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 606,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 612,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 621,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 627,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 630,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 633,
															"indexExpression": {
																"id": 631,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 634,
														"indexExpression": {
															"id": 632,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 635,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 638,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 597,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 646,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 640,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 641,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 642,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 639,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 644,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 697,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 660,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 665,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 667,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 666,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 672,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 673,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 682,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 681,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 676,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 653,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 677,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 678,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 655,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 675,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 76,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 680,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 692,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 684,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 651,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 685,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 653,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 686,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 687,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 655,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 683,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				588,
																				648
																			],
																			"referencedDeclaration": 648,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 691,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 697,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 698,
							"src": "1106:9768:2",
							"usedErrors": [
								57,
								62,
								67,
								76,
								81,
								86
							],
							"usedEvents": [
								709,
								718
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							775
						]
					},
					"id": 776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 700,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 775,
							"linearizedBaseContracts": [
								775
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 709,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 718,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 775,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 775,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 775,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 775,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 759,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 775,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 775,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 776,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								709,
								718
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							775
						],
						"IERC20Metadata": [
							801
						]
					},
					"id": 802,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 802,
							"sourceUnit": 776,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 778,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 775,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 781,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "306:6:4"
									},
									"id": 782,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 780,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 801,
							"linearizedBaseContracts": [
								801,
								775
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 801,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 801,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 797,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 801,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 802,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								709,
								718
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							831
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 803,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 804,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 809,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 808,
												"id": 811,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 831,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 818,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 817,
												"id": 820,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 815,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 831,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 826,
												"id": 828,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 831,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 832,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/ConstantK.sol": {
				"ast": {
					"absolutePath": "contracts/ConstantK.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"CPAMM": [
							1353
						],
						"Context": [
							831
						],
						"ERC20": [
							697
						],
						"IERC20": [
							775
						],
						"IERC20Errors": [
							87
						],
						"IERC20Metadata": [
							801
						]
					},
					"id": 1354,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 834,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1354,
							"sourceUnit": 776,
							"src": "60:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 835,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1354,
							"sourceUnit": 698,
							"src": "118:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1354,
							"sourceUnit": 46,
							"src": "175:76:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 837,
										"name": "ERC20",
										"nameLocations": [
											"273:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 697,
										"src": "273:5:6"
									},
									"id": 838,
									"nodeType": "InheritanceSpecifier",
									"src": "273:5:6"
								}
							],
							"canonicalName": "CPAMM",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1353,
							"linearizedBaseContracts": [
								1353,
								697,
								87,
								801,
								775,
								831
							],
							"name": "CPAMM",
							"nameLocation": "264:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 841,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "310:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1353,
									"src": "286:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$775",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 840,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 839,
											"name": "IERC20",
											"nameLocations": [
												"286:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 775,
											"src": "286:6:6"
										},
										"referencedDeclaration": 775,
										"src": "286:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$775",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 844,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "355:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1353,
									"src": "331:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$775",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 843,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 842,
											"name": "IERC20",
											"nameLocations": [
												"331:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 775,
											"src": "331:6:6"
										},
										"referencedDeclaration": 775,
										"src": "331:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$775",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "741bef1a",
									"id": 847,
									"mutability": "immutable",
									"name": "priceFeed",
									"nameLocation": "415:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1353,
									"src": "376:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 846,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 845,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"376:21:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "376:21:6"
										},
										"referencedDeclaration": 45,
										"src": "376:21:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ddca3f43",
									"id": 850,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "466:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1353,
									"src": "451:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 848,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 849,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "472:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 852,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "505:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1353,
									"src": "490:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 851,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "490:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 854,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "535:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1353,
									"src": "520:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 853,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "520:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 856,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "560:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1353,
									"src": "552:13:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 855,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "552:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "666:163:6",
										"statements": [
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 869,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "677:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$775",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 871,
																"name": "_token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "693:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 870,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "686:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$775_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "686:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$775",
															"typeString": "contract IERC20"
														}
													},
													"src": "677:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$775",
														"typeString": "contract IERC20"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "677:24:6"
											},
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 875,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "712:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$775",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 877,
																"name": "_token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "728:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 876,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "721:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$775_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "721:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$775",
															"typeString": "contract IERC20"
														}
													},
													"src": "712:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$775",
														"typeString": "contract IERC20"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "712:24:6"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 881,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "747:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 883,
																"name": "_priceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "781:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 882,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "759:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "759:33:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "747:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "747:45:6"
											},
											{
												"expression": {
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 887,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "803:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 888,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "811:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "815:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "811:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "803:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "803:18:6"
											}
										]
									},
									"id": 893,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "564953",
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "647:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e38645ae358365537cbb236d189e48dd9647af21b958a607abd33da0d3cca29d",
														"typeString": "literal_string \"VIS\""
													},
													"value": "VIS"
												},
												{
													"hexValue": "5669657453776170",
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "654:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_91b7cb6048cf5cef94aea24f83ff23e41fe8e215371fbf03b4f44242ac985bb4",
														"typeString": "literal_string \"VietSwap\""
													},
													"value": "VietSwap"
												}
											],
											"id": 867,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 864,
												"name": "ERC20",
												"nameLocations": [
													"640:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 697,
												"src": "640:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "640:25:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "594:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "586:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "611:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "603:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "_priceFeed",
												"nameLocation": "628:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "620:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:54:6"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "666:0:6"
									},
									"scope": 1353,
									"src": "574:255:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "900:70:6",
										"statements": [
											{
												"expression": {
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 900,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "911:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 901,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "922:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "911:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "911:20:6"
											},
											{
												"expression": {
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 904,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "942:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 905,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "953:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "942:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "942:20:6"
											}
										]
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "846:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "_reserve0",
												"nameLocation": "862:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "854:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "_reserve1",
												"nameLocation": "881:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "873:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:38:6"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "900:0:6"
									},
									"scope": 1353,
									"src": "837:133:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "1031:250:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "1046:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1050:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1046:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 952,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "1234:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1239:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1234:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 960,
													"nodeType": "IfStatement",
													"src": "1230:44:6",
													"trueBody": {
														"id": 959,
														"nodeType": "Block",
														"src": "1242:32:6",
														"statements": [
															{
																"expression": {
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 955,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "1257:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1261:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1257:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 958,
																"nodeType": "ExpressionStatement",
																"src": "1257:5:6"
															}
														]
													}
												},
												"id": 961,
												"nodeType": "IfStatement",
												"src": "1042:232:6",
												"trueBody": {
													"id": 951,
													"nodeType": "Block",
													"src": "1053:171:6",
													"statements": [
														{
															"expression": {
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 919,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "1068:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 920,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "1072:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1068:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 922,
															"nodeType": "ExpressionStatement",
															"src": "1068:5:6"
														},
														{
															"assignments": [
																924
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 924,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "1093:1:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 951,
																	"src": "1088:6:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 923,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1088:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 930,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 925,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 911,
																		"src": "1097:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1101:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1097:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1105:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1097:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1088:18:6"
														},
														{
															"body": {
																"id": 949,
																"nodeType": "Block",
																"src": "1135:78:6",
																"statements": [
																	{
																		"expression": {
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 934,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 914,
																				"src": "1154:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 935,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 924,
																				"src": "1158:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1154:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 937,
																		"nodeType": "ExpressionStatement",
																		"src": "1154:5:6"
																	},
																	{
																		"expression": {
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 938,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 924,
																				"src": "1178:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 946,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 943,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 941,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 939,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 911,
																									"src": "1183:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 940,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 924,
																									"src": "1187:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "1183:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 942,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 924,
																								"src": "1191:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1183:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 944,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1182:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 945,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1196:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "1182:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1178:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 948,
																		"nodeType": "ExpressionStatement",
																		"src": "1178:19:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 931,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "1128:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 932,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "1132:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1128:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 950,
															"nodeType": "WhileStatement",
															"src": "1121:92:6"
														}
													]
												}
											}
										]
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sqrt",
									"nameLocation": "987:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "998:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "993:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "993:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:8:6"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1028:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "1023:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1023:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:8:6"
									},
									"scope": 1353,
									"src": "978:303:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "1358:40:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 972,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "1376:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 973,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "1381:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1376:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 976,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "1389:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1376:14:6",
													"trueExpression": {
														"id": 975,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "1385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 971,
												"id": 978,
												"nodeType": "Return",
												"src": "1369:21:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_min",
									"nameLocation": "1298:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1311:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1303:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1322:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1314:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1314:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1302:22:6"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1355:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1347:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1347:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1346:11:6"
									},
									"scope": 1353,
									"src": "1289:109:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "1465:232:6",
										"statements": [
											{
												"assignments": [
													null,
													986,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 986,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1514:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "1507:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 985,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1507:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 990,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 987,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "1578:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1588:15:6",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1578:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1578:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1476:129:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 992,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "1624:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1632:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1624:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207072696365",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1635:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															},
															"value": "Invalid price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															}
														],
														"id": 991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1616:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1616:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "1616:35:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1000,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "1677:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "316538",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1684:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"value": "1e8"
															},
															"src": "1677:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1669:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 998,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1669:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 984,
												"id": 1004,
												"nodeType": "Return",
												"src": "1662:26:6"
											}
										]
									},
									"functionSelector": "1b712739",
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestBTCPrice",
									"nameLocation": "1415:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1432:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "1456:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1456:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1455:9:6"
									},
									"scope": 1353,
									"src": "1406:291:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "1793:951:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1016,
																"name": "_tokenIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "1812:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1832:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1824:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1017,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1824:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1824:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1812:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a45524f2041444452455353",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1836:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd",
																"typeString": "literal_string \"ZERO ADDRESS\""
															},
															"value": "ZERO ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_adf93d141dbe7cff7d72e75578bf90784ed3760db271ddf89fdff418ee330bfd",
																"typeString": "literal_string \"ZERO ADDRESS\""
															}
														],
														"id": 1015,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1804:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1804:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "1804:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1026,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "1870:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1882:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1870:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a45524f20414d4f554e54",
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1885:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a",
																"typeString": "literal_string \"ZERO AMOUNT\""
															},
															"value": "ZERO AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a",
																"typeString": "literal_string \"ZERO AMOUNT\""
															}
														],
														"id": 1025,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1862:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1862:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "1862:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1033,
																	"name": "_tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "1918:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1036,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "1938:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$775",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$775",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1930:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1034,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1930:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1930:15:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1918:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1039,
																	"name": "_tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "1949:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1042,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 844,
																			"src": "1969:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$775",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$775",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1961:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1040,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1961:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1961:15:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1949:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1918:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1910:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1910:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "1910:67:6"
											},
											{
												"assignments": [
													1050,
													1053,
													1055,
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1050,
														"mutability": "mutable",
														"name": "tokenIn",
														"nameLocation": "1998:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "1991:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$775",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1049,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1048,
																"name": "IERC20",
																"nameLocations": [
																	"1991:6:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 775,
																"src": "1991:6:6"
															},
															"referencedDeclaration": 775,
															"src": "1991:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "tokenOut",
														"nameLocation": "2014:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "2007:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$775",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1052,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1051,
																"name": "IERC20",
																"nameLocations": [
																	"2007:6:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 775,
																"src": "2007:6:6"
															},
															"referencedDeclaration": 775,
															"src": "2007:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1055,
														"mutability": "mutable",
														"name": "reserveIn",
														"nameLocation": "2032:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "2024:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1054,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2024:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "reserveOut",
														"nameLocation": "2051:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "2043:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1056,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2043:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1076,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1058,
																	"name": "_tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "2079:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1061,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "2099:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$775",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$775",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2091:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1059,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2091:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2091:15:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2079:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1064,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2078:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 1070,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "2150:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$775",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1071,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "2158:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$775",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1072,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "2166:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1073,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "2176:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1074,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2149:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_contract$_IERC20_$775_$_t_contract$_IERC20_$775_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(contract IERC20,contract IERC20,uint256,uint256)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2078:107:6",
													"trueExpression": {
														"components": [
															{
																"id": 1065,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "2111:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$775",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1066,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "2119:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$775",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1067,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "2127:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1068,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "2137:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1069,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2110:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_contract$_IERC20_$775_$_t_contract$_IERC20_$775_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(contract IERC20,contract IERC20,uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_contract$_IERC20_$775_$_t_contract$_IERC20_$775_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(contract IERC20,contract IERC20,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1990:195:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1080,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2219:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2223:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2219:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1084,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2239:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CPAMM_$1353",
																		"typeString": "contract CPAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CPAMM_$1353",
																		"typeString": "contract CPAMM"
																	}
																],
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2231:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1082,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2231:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2231:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "2246:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1077,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "2198:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 774,
														"src": "2198:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "2198:58:6"
											},
											{
												"assignments": [
													1090
												],
												"declarations": [
													{
														"constant": false,
														"id": 1090,
														"mutability": "mutable",
														"name": "amountIn",
														"nameLocation": "2277:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "2269:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1089,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2269:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1100,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1091,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "2289:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31303030",
																				"id": 1092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2302:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1093,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "2309:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2302:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1095,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2301:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2289:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1097,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2288:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2317:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "2288:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2269:52:6"
											},
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1101,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "2332:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1102,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "2345:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1103,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "2357:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2345:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1105,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2344:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1106,
																		"name": "reserveOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "2370:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1107,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "2383:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2370:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1109,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2369:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2344:48:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2332:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "2332:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1116,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1117,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "2429:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1118,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "2441:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2429:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1113,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "2405:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2413:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 742,
														"src": "2405:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2405:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "2405:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1125,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2479:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2483:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2479:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "2491:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1122,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "2461:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2470:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 742,
														"src": "2461:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2461:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "2461:40:6"
											},
											{
												"assignments": [
													1131,
													1133
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "_reserve0",
														"nameLocation": "2523:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "2515:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2515:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "_reserve1",
														"nameLocation": "2542:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "2534:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2534:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1156,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1134,
																	"name": "_tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "2569:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1137,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "2589:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$775",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$775",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2581:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1135,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2581:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2581:15:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2569:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1140,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2568:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1148,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "2651:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1149,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "2664:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2651:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1151,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "2675:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1152,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "2687:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2675:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1154,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2650:46:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2568:128:6",
													"trueExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1141,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "2601:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1142,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "2613:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2601:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1144,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "2624:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1145,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "2637:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2624:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1147,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2600:47:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2514:182:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1158,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "2715:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1159,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "2726:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1157,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															909,
															504
														],
														"referencedDeclaration": 909,
														"src": "2707:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2707:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "2707:29:6"
											}
										]
									},
									"functionSelector": "d004f0f7",
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "1714:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "_tokenIn",
												"nameLocation": "1727:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1719:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "1745:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1737:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1718:37:6"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1782:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1774:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1773:19:6"
									},
									"scope": 1353,
									"src": "1705:1039:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "2844:750:6",
										"statements": [
											{
												"assignments": [
													1173
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "btcPrice",
														"nameLocation": "2863:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1275,
														"src": "2855:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2855:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1176,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1174,
														"name": "getLatestBTCPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "2874:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2855:38:6"
											},
											{
												"assignments": [
													1178
												],
												"declarations": [
													{
														"constant": false,
														"id": 1178,
														"mutability": "mutable",
														"name": "expectedVNST",
														"nameLocation": "2915:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1275,
														"src": "2907:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1177,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2907:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1183,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1179,
																"name": "_amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "2931:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1180,
																"name": "btcPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "2942:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2931:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1182,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2930:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2907:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1185,
																"name": "_amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "2971:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1186,
																"name": "expectedVNST",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "2983:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2971:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "564e5354206d757374206d6174636820425443207072696365",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2997:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd",
																"typeString": "literal_string \"VNST must match BTC price\""
															},
															"value": "VNST must match BTC price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b1600100d2a7e8ef20730e476769f58aac94c5a4fd32fdc36bf0948685e2cd",
																"typeString": "literal_string \"VNST must match BTC price\""
															}
														],
														"id": 1184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2963:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2963:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "2963:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1194,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3058:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3062:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3058:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1198,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3078:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CPAMM_$1353",
																		"typeString": "contract CPAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CPAMM_$1353",
																		"typeString": "contract CPAMM"
																	}
																],
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3070:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1196,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3070:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "_amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "3085:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1191,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "3038:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3045:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 774,
														"src": "3038:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3038:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "3038:56:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3125:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3129:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3125:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1210,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3145:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CPAMM_$1353",
																		"typeString": "contract CPAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CPAMM_$1353",
																		"typeString": "contract CPAMM"
																	}
																],
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3137:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1208,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3137:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3137:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "3152:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1203,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "3105:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3112:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 774,
														"src": "3105:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3105:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "3105:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1215,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "3178:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3178:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3195:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3178:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1247,
													"nodeType": "Block",
													"src": "3266:167:6",
													"statements": [
														{
															"expression": {
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1228,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "3281:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1233,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1230,
																							"name": "_amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1165,
																							"src": "3314:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1231,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 270,
																								"src": "3325:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 1232,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3325:13:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3314:24:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1234,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3313:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1235,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 852,
																				"src": "3342:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3313:37:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1240,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1237,
																							"name": "_amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1167,
																							"src": "3370:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1238,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 270,
																								"src": "3381:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 1239,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3381:13:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3370:24:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1241,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3369:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1242,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 854,
																				"src": "3398:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3369:37:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1229,
																		"name": "_min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "3290:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3290:131:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3281:140:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1246,
															"nodeType": "ExpressionStatement",
															"src": "3281:140:6"
														}
													]
												},
												"id": 1248,
												"nodeType": "IfStatement",
												"src": "3174:259:6",
												"trueBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "3198:62:6",
													"statements": [
														{
															"expression": {
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1219,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "3213:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1221,
																				"name": "_amount0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1165,
																				"src": "3228:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1222,
																				"name": "_amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1167,
																				"src": "3239:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3228:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1220,
																		"name": "_sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "3222:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3222:26:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3213:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1226,
															"nodeType": "ExpressionStatement",
															"src": "3213:35:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1250,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "3453:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3462:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3453:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a45524f5f534841524553",
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3465:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f",
																"typeString": "literal_string \"ZERO_SHARES\""
															},
															"value": "ZERO_SHARES"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2119bd5d92259e418533f96b824fbd100e3dea453e6ac4c5f7315e6344368f2f",
																"typeString": "literal_string \"ZERO_SHARES\""
															}
														],
														"id": 1249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3445:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3445:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "3445:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1257,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3496:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3500:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3496:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1259,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "3508:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3517:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3523:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "3517:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "3508:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1256,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "3490:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3490:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "3490:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1267,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "3545:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1268,
																"name": "_amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "3556:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3545:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1270,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "3566:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1271,
																"name": "_amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "3577:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3566:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1266,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															909,
															504
														],
														"referencedDeclaration": 909,
														"src": "3537:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3537:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "3537:49:6"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "2761:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "2782:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "2774:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "2800:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "2792:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2792:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2773:36:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2836:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "2828:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2828:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2827:16:6"
									},
									"scope": 1353,
									"src": "2752:842:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "3696:383:6",
										"statements": [
											{
												"expression": {
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1285,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "3707:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1286,
																		"name": "_shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "3718:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1287,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 852,
																		"src": "3728:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3718:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1289,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3717:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1290,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "3740:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3717:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3707:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "3707:46:6"
											},
											{
												"expression": {
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1295,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "3764:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1296,
																		"name": "_shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "3775:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1297,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "3785:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3775:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1299,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3774:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1300,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "3797:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3797:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3774:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3764:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "3764:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1306,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "3829:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3839:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3829:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1309,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "3844:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3854:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3844:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3829:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a45524f20414d4f554e54",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a",
																"typeString": "literal_string \"ZERO AMOUNT\""
															},
															"value": "ZERO AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bb8a56e09e425508bf538c8ba8dc45c7f32bf92f087f36a6f4ef541b384fb62a",
																"typeString": "literal_string \"ZERO AMOUNT\""
															}
														],
														"id": 1305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3821:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "3821:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3888:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3892:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3888:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1319,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "3900:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3910:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3916:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "3910:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "3900:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1316,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "3882:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3882:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "3882:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1327,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "3938:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1328,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "3949:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3938:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1330,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "3958:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1331,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "3969:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3958:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1326,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															909,
															504
														],
														"referencedDeclaration": 909,
														"src": "3930:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3930:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "3930:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1338,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4004:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4008:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4004:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1340,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "4016:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1335,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "3988:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3995:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 742,
														"src": "3988:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3988:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "3988:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1346,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4051:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4055:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4051:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "4063:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1343,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "4035:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$775",
																"typeString": "contract IERC20"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4042:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 742,
														"src": "4035:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4035:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "4035:36:6"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "3611:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "3635:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "3627:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3627:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3626:17:6"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3670:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "3662:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3662:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3687:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "3679:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3679:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3661:34:6"
									},
									"scope": 1353,
									"src": "3602:477:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1354,
							"src": "255:3827:6",
							"usedErrors": [
								57,
								62,
								67,
								76,
								81,
								86
							],
							"usedEvents": [
								709,
								718
							]
						}
					],
					"src": "33:4051:6"
				},
				"id": 6
			}
		}
	}
}